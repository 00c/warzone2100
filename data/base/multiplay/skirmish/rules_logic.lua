-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for

--------
-- starting technologies.
numBaseComp = 0

-- research topics

-- Other Stuff
count = 0
playnum = 0
gamewon = false
gameLost = false

-- Base Under Attack
hitStruc = nil
attackerObj = nil
t = 0



-------------------------------------------------------------------


-------------------------------------------------------------------
-- this event is called once the game has initialised itself

function initialisedEvent()
	addReticuleButton(OPTIONS)
	addReticuleButton(CANCEL)
	addReticuleButton(BUILD)
	addReticuleButton(MANUFACTURE)
	addReticuleButton(RESEARCH)
	addReticuleButton(INTELMAP)
	addReticuleButton(DESIGN)
	
	playnum = 0
	while playnum < MAX_PLAYERS do
		enableStructure(command, playnum)
		enableStructure(factory, playnum)
		enableStructure(oilDerrick, playnum)
		enableStructure(powerGen, playnum)
		enableStructure(research, playnum)
		
		-- set structure limits
		setStructureLimits(factory, 5, playnum)
		setStructureLimits(powerGen, 8, playnum)
		setStructureLimits(research, 5, playnum)
		setStructureLimits(command, 1, playnum)
		setStructureLimits(commandrelay, 1, playnum)
		setStructureLimits(cybfac, 5, playnum)
		setStructureLimits(vtolfac, 5, playnum)
		playnum = playnum + 1
	end
	
	-- set limit options
	applyLimitSet()
end
callbackEvent(initialisedEvent, CALL_GAMEINIT)

function initialisedEventTwo()
	playnum = 0
	while playnum < MAX_PLAYERS do
		count = 0
		while count < numBaseRes do
			enableResearch(baseRes[count], playnum)
			count = count + 1
		end
		
		-- enable cyborgs components that can't be enabled with research
		-- making cyborg templates stay unavailable for AI
		makeComponentAvailable(CyborgSpade, playnum)
		makeComponentAvailable(CyborgRepair, playnum)
		
		if C.multiPlayerBaseType == CAMP_CLEAN then
			setPowerLevel(1300, playnum)
			count = 0
			while count < numCleanTech do
				completeResearch(defTech[count], playnum)
				count = count + 1
			end
		else
			if C.multiPlayerBaseType == CAMP_BASE then
				setPowerLevel(2500, playnum)
				count = 0
				while count < numBaseTech do
					completeResearch(defTech[count], playnum)
					count = count + 1
				end
			else
				setPowerLevel(2500, playnum)
				count = 0
				while count < numDefTech do
					completeResearch(defTech[count], playnum)
					count = count + 1
				end
			end
		end
		
		playnum = playnum + 1
	end
end
callbackEvent(initialisedEventTwo, CALL_GAMEINIT)

-------------------------------------------------------------------
-- END CONDITIONS
function checkEndConditions()
	if (not anyDroidsLeft(C.selectedPlayer)) and (not anyFactoriesLeft(C.selectedPlayer)) then
		gameLost = true
		
		-- If teams enabled check if all team members have lost
		if C.multiPlayerGameType == SKIRMISH and C.multiPlayerAlliancesType == ALLIANCES_TEAMS then
			playnum = 0
			while playnum < C.multiPlayerMaxPlayers do
				if (playnum ~= C.selectedPlayer) and allianceExistsBetween(C.selectedPlayer, playnum) then
					if anyDroidsLeft(playnum) or anyFactoriesLeft(playnum) then
						gameLost = false
						-- jump out
						playnum = C.multiPlayerMaxPlayers
					end
				end
				playnum = playnum + 1
			end
		end
		
		
		if gameLost then
			gameOverMessage(endMsg, MISS_MSG, 0, false)
			deactivateEvent(checkEndConditions)
		end
	end
	
	-- Winning Conditions
	gamewon = true
	
	-- Skirmish
	if C.multiPlayerGameType == SKIRMISH then
		playnum = 0
		while playnum < C.multiPlayerMaxPlayers do
			if (playnum ~= C.selectedPlayer) and (not allianceExistsBetween(C.selectedPlayer, playnum)) then
				if anyDroidsLeft(playnum) or anyFactoriesLeft(playnum) then
					gamewon = false
					-- jump out
					playnum = C.multiPlayerMaxPlayers
				end
			end
			playnum = playnum + 1
		end
	else
		count = 0
		while count < C.multiPlayerMaxPlayers do
			if (count ~= C.selectedPlayer) and not (isHumanPlayer(count)) then
				if anyDroidsLeft(count) or anyFactoriesLeft(count) then
					gamewon = false
				end
			end
			count = count + 1
		end
		
		if gamewon == true then
			gamewon = false
			-- if all humans are allied
			if dominatingAlliance() then
				gamewon = true
			end
		end
	end
	
	if gamewon == true then
		gameOverMessage(winMsg, MISS_MSG, 0, true)
		deactivateEvent(checkEndConditions)
	end
end
repeatingEvent(checkEndConditions, 10.0)

-------------------------------------------------------------------
-- WARNING MESSAGES
-- Base Under Attack
function baseHit(_hitStruc, _attackerObj)
	if _hitStruc.player ~= C.selectedPlayer then return end
	hitStruc, attackerObj = _hitStruc, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if t >= 10 then
		t = 0
		if hitStruc ~= nil then
			playSoundPos(attackSnd1, C.selectedPlayer, hitStruc.x, hitStruc.y, hitStruc.z)
		else
			playSound(attackSnd1, C.selectedPlayer)
		end
	end
end
callbackEvent(baseHit, CALL_STRUCT_ATTACKED)

function everySec()
	t = t + 1
end
repeatingEvent(everySec, 1.0)

-- go to where the structure being attacked is on CTRL B
function seeBaseHit()
	if hitStruc ~= nil then
		centreView(hitStruc)
		-- flag known about!
		t = 0
	end
end
callbackEvent(seeBaseHit, CALL_MISSION_END)


---------- stubs ----------

if anyDroidsLeft == nil then anyDroidsLeft = function() print("stub: anyDroidsLeft"); return 0 end end
if applyLimitSet == nil then applyLimitSet = function() print("stub: applyLimitSet"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if anyFactoriesLeft == nil then anyFactoriesLeft = function() print("stub: anyFactoriesLeft"); return 0 end end
if centreView == nil then centreView = function() print("stub: centreView"); return 0 end end
if isHumanPlayer == nil then isHumanPlayer = function() print("stub: isHumanPlayer"); return 0 end end
if makeComponentAvailable == nil then makeComponentAvailable = function() print("stub: makeComponentAvailable"); return 0 end end
if addReticuleButton == nil then addReticuleButton = function() print("stub: addReticuleButton"); return 0 end end
if enableResearch == nil then enableResearch = function() print("stub: enableResearch"); return 0 end end
if gameOverMessage == nil then gameOverMessage = function() print("stub: gameOverMessage"); return 0 end end
if enableStructure == nil then enableStructure = function() print("stub: enableStructure"); return 0 end end
if setStructureLimits == nil then setStructureLimits = function() print("stub: setStructureLimits"); return 0 end end
if setPowerLevel == nil then setPowerLevel = function() print("stub: setPowerLevel"); return 0 end end
if playSoundPos == nil then playSoundPos = function() print("stub: playSoundPos"); return 0 end end
if dominatingAlliance == nil then dominatingAlliance = function() print("stub: dominatingAlliance"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
if allianceExistsBetween == nil then allianceExistsBetween = function() print("stub: allianceExistsBetween"); return 0 end end
if completeResearch == nil then completeResearch = function() print("stub: completeResearch"); return 0 end end
