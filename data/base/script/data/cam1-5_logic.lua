-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
numart = 0

newDroidFactory = nil

-- structure limit stuff
-- public	STRUCTURESTAT		powerModuleHack;

-- Win or lose
allPlayer = Group()
nearLZ = Group()
totDroids = 0

-- Base Under Attack Stuff
hitStruc = nil
attackerObj = nil
t = 0

-- Transport Entry/Exit coords

-- required for enemy transports landing
transportDroid = nil
loadDroid = nil
reinforceTemplate = nil
-- has transport been triggered?
transFlag = false
-- Reinforcement Lists for New Paradigm

-- Briefing stuff
-- , winMsg;

-- LZ Message
playerTransOnMap = false

-- Proximity: Artifacts

art1ID = nil

art2ID = nil


art6ID = nil

art7ID = nil

-- player Bonus Research topics given at end of mission
-- need to be declared with value >= numResP0, numResP1, etc.
resP0 = Array(20)
count = 0

-- Proximity: Enemy







-- AI STUFF

-- enemy1 variables
enemy1Build = Group()
enemy1Attack = Group()
enemy1Fin = Group()
enemy2Build = Group()
enemy2Attack = Group()
enemy2Fin = Group()
enemy1Guard = Group()
enemy2Guard = Group()
Scav1 = Group()
Scav2 = Group()
Scav3 = Group()
Scav4 = Group()
Scav5 = Group()
NewP1 = Group()
NewP2 = Group()
NewP3 = Group()
NewP4 = Group()
NewP5 = Group()

temp1 = 0
temp2 = 0
tempx1 = 0
tempx2 = 0
tempy1 = 0
tempy2 = 0

attackedStruct = nil
attacker = nil

-- temporary variables
newDroid = nil
moveX = 0
moveY = 0
xdiff = 0
ydiff = 0
-- default leadership for enemy2
ld = 0
attackX = 0
attackY = 0

-- values for build lists start here
-- General Values
-- limit build to this number
-- limit build to this number

-- Enemy Tactics

-- enemy1
enm1aState = 0
enm1bState = 0
enm1cState = 0
enm1aDestroyed = false
enm1bDestroyed = false
enm1cDestroyed = false

-- enemy2
enm2aState = 0
enm2bState = 0
enm2cState = 0
enm2dState = 0
enm2aDestroyed = false
enm2bDestroyed = false
enm2cDestroyed = false
enm2dDestroyed = false

-- Starting Technology



-- Events: Start

function startEvnt()
	centreViewPos(6 * 128, 56 * 128)
	-- make scavengers and New paradigm allies (just in case!)
	createAlliance(enemy1, enemy2)
	-- set scroll limits
	-- setScrollParams(0, 0, 64, 64);			//limit scroll
	-- set zoom Level 64x64
	setRadarZoom(1)
	-- stop player building on LZ#1
	setLandingZone(5, 55, 7, 57)
	-- call in transport
	-- flyTransporterIn(player, entryX, entryY, false);
	-- fly over enemy base
	flyTransporterIn(player, 62, 33, true)
	setTransporterExit(player, exitX, exitY)
	
	-- add enemy transport (once!)
	setNoGoArea(47, 19, 49, 21, enemy2)
	transportDroid = addDroidToMissionList(transporter, enemy2)
	
	-- to attack LZ
	attackX = 768
	attackY = 7168
	setPowerLevel(pow1, enemy1)
	setPowerLevel(pow2, enemy2)
	-- Blip Given at start
	addMessage(obj1, PROX_MSG, player, false)
	-- allow to build stuff
	setStructureLimits(powerGen, numPow, 0)
	setStructureLimits(oilDerrick, numExt, 0)
	setStructureLimits(research, numRes, 0)
	setStructureLimits(factory, numFac, 0)
	setStructureLimits(command, 0, player)
	setStructureLimits(comRelay, 0, player)
	enableStructure(command, player)
	enableStructure(powerGen, 0)
	enableStructure(oilDerrick, 0)
	enableStructure(research, 0)
	enableStructure(factory, 0)
	-- set transport time
	setReinforcementTime(ReinforceTime/10.0)
	
	-- player specific technology startups
	count = 0
	while count < numtecE1 do
		completeResearch(tecE1[count], enemy1)
		count = count + 1
	end
	count = 0
	while count < numtecE2 do
		completeResearch(tecE2[count], enemy2)
		count = count + 1
	end
	
	-- Give Briefing (again!)
	deactivateEvent(startEvnt)
	addMessage(MissionBrief, MISS_MSG, 0, false)
	flashOff(INTELMAP)
end
callbackEvent(startEvnt, CALL_GAMEINIT)

-- Events: Artifacts
function art1TakeEvnt()
	numart = numart + 1
	-- playSound(art1Snd2, player);
	playSoundPos(art1Snd2, player, art1ID.x, art1ID.y, art1ID.z)
	destroyFeature(art1ID)
	-- removeMessage(art1Msg, PROX_MSG, player);
	enableResearch(art1Comp, player)
	deactivateEvent(art1TakeEvnt)
end

function art1PlaceEvnt()
	art1ID = addFeature(crate, art1X, art1Y)
	-- setEventTrigger(art1SeenEvnt, art1SeenTrig);
	conditionalEvent(art1TakeEvnt, "droidInRange(player, art1X, art1Y, 171)", 0.5)
	deactivateEvent(art1PlaceEvnt)
end
conditionalEvent(art1PlaceEvnt, "(destroyed(art1Get))", 0.5)

function art2TakeEvnt()
	numart = numart + 1
	-- playSound(art2Snd2, player);
	playSoundPos(art2Snd2, player, art2ID.x, art2ID.y, art2ID.z)
	destroyFeature(art2ID)
	-- removeMessage(art2Msg, PROX_MSG, player);
	enableResearch(art2Comp, player)
	deactivateEvent(art2TakeEvnt)
end

function art2PlaceEvnt()
	art2ID = addFeature(crate, art2X, art2Y)
	-- setEventTrigger(art2SeenEvnt, art2SeenTrig);
	conditionalEvent(art2TakeEvnt, "droidInRange(player, art2X, art2Y, 171)", 0.5)
	deactivateEvent(art2PlaceEvnt)
end
conditionalEvent(art2PlaceEvnt, "(destroyed(art2Get))", 0.5)


function art6TakeEvnt()
	numart = numart + 1
	-- playSound(art6Snd2, player);
	playSoundPos(art6Snd2, player, art6ID.x, art6ID.y, art6ID.z)
	destroyFeature(art6ID)
	-- removeMessage(art6Msg, PROX_MSG, player);
	enableResearch(art6Comp, player)
	deactivateEvent(art6TakeEvnt)
end

function art6PlaceEvnt()
	art6ID = addFeature(crate, art6X, art6Y)
	-- setEventTrigger(art6SeenEvnt, art6SeenTrig);
	conditionalEvent(art6TakeEvnt, "droidInRange(player, art6X, art6Y, 171)", 0.5)
	deactivateEvent(art6PlaceEvnt)
end
conditionalEvent(art6PlaceEvnt, "(destroyed(art6Get))", 0.5)

function art7TakeEvnt()
	numart = numart + 1
	-- playSound(art7Snd2, player);
	playSoundPos(art7Snd2, player, art7ID.x, art7ID.y, art7ID.z)
	destroyFeature(art7ID)
	-- removeMessage(art7Msg, PROX_MSG, player);
	enableResearch(art7Comp, player)
	deactivateEvent(art7TakeEvnt)
end

function art7PlaceEvnt()
	art7ID = addFeature(crate, art7X, art7Y)
	-- setEventTrigger(art7SeenEvnt, art7SeenTrig);
	conditionalEvent(art7TakeEvnt, "droidInRange(player, art7X, art7Y, 171)", 0.5)
	deactivateEvent(art7PlaceEvnt)
end
conditionalEvent(art7PlaceEvnt, "(destroyed(art7Get))", 0.5)


-- Events: Enemies
function enm1DeadEvnt()
	killStructsInArea(enemy1, REF_WALL, 2240, 192, 4160, 1728, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy1, REF_WALLCORNER, 2240, 192, 4160, 1728, true, false)
	
	removeMessage(enm1Msg, PROX_MSG, player)
	-- playSound(enm1Snd2, player);
	playSoundPos(enm1Snd2, player, 3264, 704, 0)
	deactivateEvent(enm1DeadEvnt)
end

function enm1SeenEvnt()
	addMessage(enm1Msg, PROX_MSG, player, false)
	-- playSound(enm1Snd1, player);
	playSoundPos(enm1Snd1, player, 3264, 704, 0)
	conditionalEvent(enm1DeadEvnt, "numStructsButNotWallsInArea(enemy1, 2240, 192, 4160, 1728) == 0", 2.0)
	deactivateEvent(enm1SeenEvnt)
end
conditionalEvent(enm1SeenEvnt, "seenStructInArea(player, enemy1, false, 2240, 192, 4160, 1728)", 1.0)

function enm2DeadEvnt()
	killStructsInArea(enemy1, REF_WALL, 3392, 6848, 4928, 8000, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy1, REF_WALLCORNER, 3392, 6848, 4928, 8000, true, false)
	removeMessage(enm2Msg, PROX_MSG, player)
	-- playSound(enm2Snd2, player);
	playSoundPos(enm2Snd2, player, 4160, 7616, 0)
	deactivateEvent(enm2DeadEvnt)
end

function enm2SeenEvnt()
	addMessage(enm2Msg, PROX_MSG, player, false)
	-- playSound(enm2Snd1, player);
	playSoundPos(enm2Snd1, player, 4160, 7616, 0)
	conditionalEvent(enm2DeadEvnt, "numStructsButNotWallsInArea(enemy1, 3392, 6848, 4928, 8000) == 0", 2.0)
	deactivateEvent(enm2SeenEvnt)
end
conditionalEvent(enm2SeenEvnt, "seenStructInArea(player, enemy1, false, 3392, 6848, 4928, 8000)", 1.0)

function enm3DeadEvnt()
	killStructsInArea(enemy1, REF_WALL, 5056, 6592, 6464, 8000, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy1, REF_WALLCORNER, 5056, 6592, 6464, 8000, true, false)
	removeMessage(enm3Msg, PROX_MSG, player)
	-- playSound(enm3Snd2, player);
	playSoundPos(enm3Snd2, player, 5696, 7488, 0)
	deactivateEvent(enm3DeadEvnt)
end

function enm3SeenEvnt()
	addMessage(enm3Msg, PROX_MSG, player, false)
	-- playSound(enm3Snd1, player);
	playSoundPos(enm3Snd1, player, 5696, 7488, 0)
	conditionalEvent(enm3DeadEvnt, "numStructsButNotWallsInArea(enemy1, 5056, 6592, 6464, 8000) == 0", 2.0)
	deactivateEvent(enm3SeenEvnt)
end
conditionalEvent(enm3SeenEvnt, "seenStructInArea(player, enemy1, false, 5056, 6592, 6464, 8000)", 1.0)

function enm4DeadEvnt()
	killStructsInArea(enemy2, REF_WALL, 3520, 1728, 6976, 5056, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy2, REF_WALLCORNER, 3520, 1728, 6976, 5056, true, false)
	removeMessage(obj1, PROX_MSG, player)
	-- playSound(enm2Snd2, player);	//what to play?
	playSoundPos(enm4Snd2, player, 5440, 2752, 0)
	deactivateEvent(enm4DeadEvnt)
end
conditionalEvent(enm4DeadEvnt, "numStructsButNotWallsInArea(enemy2, 3520, 1728, 6976, 5056) == 0", 2.0)



-- Events: Win or Lose

-- assumes victory already checked
function nextLevEvnt()
	pause(20/10.0)
	
	-- give bonus research (if req'd)
	count = 0
	while count < numResP0 do
		enableResearch(resP0[count], 0)
		count = count + 1
	end
	
	-- flag next part of map
	C.gameLevel = C.gameLevel + 1
	-- setLandingZone(10, 51, 12, 53);
	enableResearch(art1Comp, player)
	enableResearch(art2Comp, player)
	-- enableResearch(art3Comp, player);
	-- enableResearch(art4Comp, player);
	-- enableResearch(art5Comp, player);
	enableResearch(art6Comp, player)
	enableResearch(art7Comp, player)
	-- removeMessage(MissionBrief, MISS_MSG, player);
	startMission(CAMP_EXPAND, NextLev)
	-- End game here for now! (don't try next mission)
	-- gameOver(true);
	
	deactivateEvent(nextLevEvnt)
end

function gameLost()
	gameOverMessage(endMsg, MISS_MSG, 0, false)
	deactivateEvent(gameLost)
end

function lostYetEvnt()
	if not anyDroidsLeft(player) then
		if not anyStructButWallsLeft(player) then
			deactivateEvent(wonYetEvnt)
			-- setEventTrigger(wonYetLZEvnt, inactive);
			deactivateEvent(timeUp)
			-- waits 2 seconds before ending
			repeatingEvent(gameLost, 2.0)
			deactivateEvent(lostYetEvnt)
		end
	end
end
repeatingEvent(lostYetEvnt, 0.5)


-- out of time?
function timeUp()
	deactivateEvent(wonYetEvnt)
	-- setEventTrigger(wonYetLZEvnt, inactive);
	deactivateEvent(lostYetEvnt)
	-- waits 2 seconds before ending
	repeatingEvent(gameLost, 2.0)
	deactivateEvent(timeUp)
end
callbackEvent(timeUp, CALL_MISSION_TIME)

-- have all enemies lost yet?
function wonYetEvnt()
	if not anyDroidsLeft(enemy2) then
		if not anyStructButWallsLeft(enemy2) then
			if numart == 4 then
				deactivateEvent(lostYetEvnt)
				deactivateEvent(timeUp)
				repeatingEvent(nextLevEvnt, 0.5)
				deactivateEvent(wonYetEvnt)
			end
		end
	end
end
repeatingEvent(wonYetEvnt, 0.5)

-- cheat button ctrl M
function cheatEvnt()
	repeatingEvent(nextLevEvnt, 0.5)
	deactivateEvent(cheatEvnt)
end
callbackEvent(cheatEvnt, CALL_MISSION_START)

-- Base Under Attack
function baseHit(_hitStruc, _attackerObj)
	if _hitStruc.player ~= C.selectedPlayer then return end
	hitStruc, attackerObj = _hitStruc, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if t >= 20 then
		t = 0
		if hitStruc ~= nil then
			playSoundPos(attackSnd1, C.selectedPlayer, hitStruc.x, hitStruc.y, hitStruc.z)
		else
			playSound(attackSnd1, C.selectedPlayer)
		end
	end
end
callbackEvent(baseHit, CALL_STRUCT_ATTACKED)

function everySec()
	t = t + 1
end
repeatingEvent(everySec, 1.0)

function seeBaseHit()
	if hitStruc ~= nil then
		centreView(hitStruc)
		-- flag known about!
		t = 0
	end
end
callbackEvent(seeBaseHit, CALL_MISSION_END)


-- AI EVENTS

-- event prototypes
-- event enemy1AttackBase;

function startup()
	setAssemblyPoint(enm1a, 3136, 1600)
	-- 6336, 7616);
	setAssemblyPoint(enm1b, 4928, 7488)
	setAssemblyPoint(enm1c, 6336, 7616)
	
	
	-- make up starting forces
	
	--[[//See if have to set for whole army first?
		setRetreatForce(enemy1, 99);
		setRetreatLeadership(enemy1, 50);
		setRetreatPoint(enemy1, 6*128, 56*128);]]--
	-- set up Scavenger forces
	groupAddArea(Scav1, enemy1, 320, 3776, 576, 4288)
	groupAddArea(Scav2, enemy1, 320, 2240, 576, 2880)
	groupAddArea(Scav3, enemy1, 2240, 6336, 2752, 6848)
	groupAddArea(NewP1, enemy2, 3769, 4404, 3924, 4681)
	groupAddArea(NewP2, enemy2, 4130, 4410, 4302, 4673)
	
	-- Set Retreat levels!!!
	setGroupRetreatForce(Scav1, 90)
	setGroupRetreatLeadership(Scav1, 25)
	setGroupRetreatPoint(Scav1, 2368, 320)
	setGroupRetreatForce(Scav2, 90)
	setGroupRetreatLeadership(Scav2, 25)
	setGroupRetreatPoint(Scav2, 2368, 320)
	setGroupRetreatForce(Scav3, 90)
	setGroupRetreatLeadership(Scav3, 25)
	setGroupRetreatPoint(Scav3, 4288, 6592)
end
callbackEvent(startup, CALL_GAMEINIT)



-- deal with a droid being built by enemy1
function enemy1build(_newDroid, _newDroidFactory)
	if _newDroid.player ~= enemy1 then return end
	newDroid, newDroidFactory = _newDroid, _newDroidFactory -- wz2lua: probably these can be used as function arguments directly
	groupAddDroid(enemy1Build, newDroid)
	if groupCountMembers(enemy1Build) >= 4 then
		groupAddGroup(enemy1Attack, enemy1Build)
		-- do attack force decision here!
		orderGroupLoc(enemy1Attack, DORDER_SCOUT, attackX, attackY)
	end
end
callbackEvent(enemy1build, CALL_NEWDROID)

-- deal with a droid being built by enemy2
function enemy2build(_newDroid, _newDroidFactory)
	if _newDroid.player ~= enemy2 then return end
	newDroid, newDroidFactory = _newDroid, _newDroidFactory -- wz2lua: probably these can be used as function arguments directly
	groupAddDroid(enemy2Build, newDroid)
	if groupCountMembers(enemy2Build) >= 4 then
		if groupCountMembers(enemy2Guard) < 6 then
			groupAddGroup(enemy2Guard, enemy2Build)
			-- set repair level
			setGroupSecondary(enemy2Guard, DSO_REPAIR_LEVEL, DSS_REPLEV_HIGH)
		else
			groupAddGroup(enemy2Attack, enemy2Build)
			-- do attack force decision here!
			orderGroupLoc(enemy2Attack, DORDER_SCOUT, attackX, attackY)
			-- set repair level
			setGroupSecondary(enemy2Attack, DSO_REPAIR_LEVEL, DSS_REPLEV_HIGH)
		end
	end
end
callbackEvent(enemy2build, CALL_NEWDROID)


-- events for build lists start here
-- Enemy 1 Scavengers
-- build list Scav North factory!
function enm1aFactEvnt()
	enm1aDestroyed = destroyed(enm1aID)
	if enm1aDestroyed then
		deactivateEvent(enm1aFactEvnt)
	else
		if structureIdle(enm1a) and (groupCountMembers(enemy1Build) + groupCountMembers(enemy1Attack)) < enemy1Tot then
			if enm1aState == 0 then
				buildDroid(template1[4], enm1a, enemy1, 1)
				enm1aState = 1
			else
				if enm1aState == 1 then
					buildDroid(template1[3], enm1a, enemy1, 1)
					enm1aState = 2
				else
					if enm1aState == 2 then
						buildDroid(template1[6], enm1a, enemy1, 1)
						enm1aState = 3
					else
						buildDroid(template1[1], enm1a, enemy1, 3)
						enm1aState = 0
					end
				end
			end
		end
	end
end

function enm1aStartEvnt()
	repeatingEvent(enm1aFactEvnt, 30.0)
	deactivateEvent(enm1aStartEvnt)
end
conditionalEvent(enm1aStartEvnt, "droidInRange(player, enm1a.x, enm1a.y, 15 * 128)", 2.0)

-- build list Scav SE Factory
function enm1bFactEvnt()
	enm1bDestroyed = destroyed(enm1bID)
	if enm1bDestroyed then
		deactivateEvent(enm1bFactEvnt)
	else
		if structureIdle(enm1b) and (groupCountMembers(enemy1Build) + groupCountMembers(enemy1Attack)) < enemy1Tot then
			if enm1bState == 0 then
				buildDroid(template1[7], enm1b, enemy1, 1)
				enm1bState = 1
			else
				if enm1bState == 1 then
					buildDroid(template1[5], enm1b, enemy1, 1)
					enm1bState = 2
				else
					if enm1bState == 2 then
						buildDroid(template1[0], enm1b, enemy1, 3)
						enm1bState = 3
					else
						buildDroid(template1[2], enm1b, enemy1, 3)
						enm1bState = 0
					end
				end
			end
		end
	end
end

function enm1bStartEvnt()
	repeatingEvent(enm1bFactEvnt, 30.0)
	deactivateEvent(enm1bStartEvnt)
end
conditionalEvent(enm1bStartEvnt, "droidInRange(player, enm1b.x, enm1b.y, 15 * 128)", 2.0)

-- build list Scav SW Factory
function enm1cFactEvnt()
	enm1cDestroyed = destroyed(enm1cID)
	if enm1cDestroyed then
		deactivateEvent(enm1cFactEvnt)
	else
		if structureIdle(enm1c) and (groupCountMembers(enemy1Build) + groupCountMembers(enemy1Attack)) < enemy1Tot then
			if enm1cState == 0 then
				buildDroid(template1[7], enm1c, enemy1, 1)
				enm1cState = 1
			else
				if enm1cState == 1 then
					buildDroid(template1[5], enm1c, enemy1, 1)
					enm1cState = 2
				else
					if enm1cState == 2 then
						buildDroid(template1[0], enm1c, enemy1, 3)
						enm1cState = 3
					else
						buildDroid(template1[2], enm1c, enemy1, 3)
						enm1cState = 0
					end
				end
			end
		end
	end
end

function enm1cStartEvnt()
	repeatingEvent(enm1cFactEvnt, 30.0)
	deactivateEvent(enm1cStartEvnt)
end
conditionalEvent(enm1cStartEvnt, "droidInRange(player, enm1c.x, enm1c.y, 15 * 128)", 2.0)

-- New paradigm Factories
-- build list NP Heavy factory!
function enm2aFactEvnt()
	enm2aDestroyed = destroyed(enm2aID)
	if enm2aDestroyed then
		deactivateEvent(enm2aFactEvnt)
		-- call in transport!
		if not transFlag then
			delayedEvent(landTrans, 10.0)
			conditionalEvent(stopTrans, "numStructsButNotWallsInArea(enemy2, 5824, 2240, 6592, 3008) == 0", 2.0)
		end
	else
		if structureIdle(enm2a) and (groupCountMembers(enemy2Build) + groupCountMembers(enemy2Attack)) < enemy2Tot then
			if enm2aState == 0 then
				buildDroid(template2[4], enm2a, enemy2, 3)
				enm2aState = 1
			else
				if enm2aState == 1 then
					buildDroid(template2[2], enm2a, enemy2, 2)
					enm2aState = 2
				else
					if enm2aState == 2 then
						buildDroid(template2[5], enm2a, enemy2, 1)
						enm2aState = 0
					else
						if enm2aState == 3 then
							buildDroid(template2[9], enm2a, enemy2, 1)
							-- set back to normal build
							enm2aState = 0
						end
					end
				end
			end
		end
	end
end

-- start producing soon after start of mission
function enm2aStartEvnt()
	repeatingEvent(enm2aFactEvnt, 30.0)
	deactivateEvent(enm2aStartEvnt)
end
delayedEvent(enm2aStartEvnt, 5.0)

-- build list NP Heavy factory!
function enm2bFactEvnt()
	enm2bDestroyed = destroyed(enm2bID)
	if enm2bDestroyed then
		deactivateEvent(enm2bFactEvnt)
		-- call in transport!
		if not transFlag then
			delayedEvent(landTrans, 10.0)
			conditionalEvent(stopTrans, "numStructsButNotWallsInArea(enemy2, 5824, 2240, 6592, 3008) == 0", 2.0)
		end
	else
		
		
		if structureIdle(enm2b) and (groupCountMembers(enemy2Build) + groupCountMembers(enemy2Attack)) < enemy2Tot then
			if enm2bState == 0 then
				buildDroid(template2[0], enm2b, enemy2, 3)
				enm2bState = 1
			else
				if enm2bState == 1 then
					buildDroid(template2[6], enm2b, enemy2, 2)
					enm2bState = 2
				else
					if enm2bState == 2 then
						buildDroid(template2[8], enm2b, enemy2, 1)
						enm2bState = 0
					else
						buildDroid(template2[3], enm2b, enemy2, 3)
						enm2bState = 0
					end
				end
			end
		end
	end
end

-- start producing soon after start of mission
function enm2bStartEvnt()
	repeatingEvent(enm2bFactEvnt, 30.0)
	deactivateEvent(enm2bStartEvnt)
end
delayedEvent(enm2bStartEvnt, 5.0)

-- build list NP cyborg Factory
function enm2cFactEvnt()
	enm2cDestroyed = destroyed(enm2cID)
	if enm2cDestroyed then
		deactivateEvent(enm2cFactEvnt)
		-- call in transport!
		if not transFlag then
			delayedEvent(landTrans, 10.0)
			conditionalEvent(stopTrans, "numStructsButNotWallsInArea(enemy2, 5824, 2240, 6592, 3008) == 0", 2.0)
		end
	else
		
		
		if structureIdle(enm2c) and (groupCountMembers(enemy2Build) + groupCountMembers(enemy2Attack)) < enemy2Tot then
			if enm2cState == 0 then
				buildDroid(template3[0], enm2c, enemy2, 3)
				enm2cState = 1
			else
				if enm2cState == 1 then
					buildDroid(template3[1], enm2c, enemy2, 3)
					enm2cState = 0
				end
			end
		end
	end
end

function enm2cStartEvnt()
	repeatingEvent(enm2cFactEvnt, 30.0)
	deactivateEvent(enm2cStartEvnt)
end
conditionalEvent(enm2cStartEvnt, "droidInRange(player, enm2c.x, enm2c.y, 15 * 128)", 2.0)

function lastAttack1()
	if not anyStructButWallsLeft(enemy1) then
		groupAddArea(enemy1Fin, enemy1, 0, 0, 64 * 64, 64 * 64)
		orderGroupLoc(enemy1Fin, DORDER_MOVE, playerX, playerY)
	end
end
repeatingEvent(lastAttack1, 5.0)
-- setEventTrigger(lastAttack1, inactive);

function lastAttack2()
	if not anyStructButWallsLeft(enemy2) then
		groupAddArea(enemy2Fin, enemy1, 0, 0, 64 * 64, 64 * 64)
		orderGroupLoc(enemy2Fin, DORDER_MOVE, playerX, playerY)
	end
end
repeatingEvent(lastAttack2, 5.0)
-- setEventTrigger(lastAttack2, inactive);

-- Generic-ish go investigate nearby structures if under attack!

function enm1Hit(_hitStruc, _attackerObj)
	if _hitStruc.player ~= enemy1 then return end
	hitStruc, attackerObj = _hitStruc, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if hitStruc ~= nil then
		tempx1 = 1 * 128
		-- empty the group first!
		groupAddGroup(enemy1Attack, enemy1Guard)
		while (groupCountMembers(enemy1Guard) < 4) and (tempx1 <= 1280) do
			groupAddArea(enemy1Guard, enemy1, hitStruc.x - tempx1, hitStruc.y - tempx1, hitStruc.x + tempx1, hitStruc.y + tempx1)
			tempx1 = tempx1 + 128
			-- hack to recalculate members in enemy1Guard!!!
			tempy1 = groupCountMembers(enemy1Attack)
		end
		if attackerObj ~= nil then
			orderGroupLoc(enemy1Guard, DORDER_SCOUT, attackerObj.x, attackerObj.y)
		else
			orderGroupLoc(enemy1Guard, DORDER_SCOUT, hitStruc.x, hitStruc.y)
		end
	end
end
callbackEvent(enm1Hit, CALL_STRUCT_ATTACKED)

function enm2Hit(_hitStruc, _attackerObj)
	if _hitStruc.player ~= enemy2 then return end
	hitStruc, attackerObj = _hitStruc, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if hitStruc ~= nil then
		tempx2 = 1 * 128
		-- groupAddGroup(enemy2Attack, enemy2Guard);	//empty the group first (into attack group!)
		-- don't bother emptying in case of NP for this map
		while (groupCountMembers(enemy2Guard) < 6) and (tempx2 <= 2560) do
			groupAddArea(enemy2Guard, enemy2, hitStruc.x - tempx2, hitStruc.y - tempx2, hitStruc.x + tempx2, hitStruc.y + tempx2)
			tempx2 = tempx2 + 128
			-- hack to recalculate members in enemy2Guard!!!
			tempy2 = groupCountMembers(enemy2Attack)
		end
		-- set repair level
		setGroupSecondary(enemy2Guard, DSO_REPAIR_LEVEL, DSS_REPLEV_HIGH)
		if attackerObj ~= nil then
			orderGroupLoc(enemy2Guard, DORDER_SCOUT, attackerObj.x, attackerObj.y)
		else
			orderGroupLoc(enemy2Guard, DORDER_SCOUT, hitStruc.x, hitStruc.y)
		end
	end
end
callbackEvent(enm2Hit, CALL_STRUCT_ATTACKED)

-- Transports
-- group landed enemy units and get going!
function groupTrans(_enemy2Build, _player)
	if _player ~= enemy2 then return end
	playSoundPos(warnSnd, player, 48 * 128, 20 * 128, 0)
	-- pause(10);
	if groupCountMembers(enemy2Build) >= 4 then
		if groupCountMembers(enemy2Guard) < 6 then
			groupAddGroup(enemy2Guard, enemy2Build)
		else
			groupAddGroup(enemy2Attack, enemy2Build)
			-- do attack force decision here!
			orderGroupLoc(enemy2Attack, DORDER_SCOUT, attackX, attackY)
		end
	end
	deactivateEvent(groupTrans)
end

function landTrans()
	temp1 = 1 + random(5)
	-- make rest upto 8
	temp2 = 8 - temp1
	count = 0
	-- can only add units to the Transporter if it exists!
	if transportDroid ~= nil then
		transFlag = true
		while count < temp1 do
			reinforceTemplate = scout[random(numScout)]
			loadDroid = addDroidToMissionList(reinforceTemplate, enemy2)
			if loadDroid ~= nil then
				addDroidToTransporter(transportDroid, loadDroid)
			end
			count = count + 1
		end
		-- use same selection for all heavies
		reinforceTemplate = heavy[random(numHeavy)]
		count = 0
		while count < temp2 do
			loadDroid = addDroidToMissionList(reinforceTemplate, enemy2)
			if loadDroid ~= nil then
				addDroidToTransporter(transportDroid, loadDroid)
			end
			count = count + 1
		end
		-- call in transport
		setTransporterExit(1, 42, 1)
		flyTransporterIn(1, 62, 14, false)
		callbackEvent(groupTrans, CALL_TRANSPORTER_LANDED)
		-- 5 mins until next one
		repeatingEvent(landTrans, 300.0)
	else
		deactivateEvent(landTrans)
	end
end

function stopTrans()
	deactivateEvent(landTrans)
	deactivateEvent(stopTrans)
end


function LZNoGo()
	if not playerTransOnMap then
		playSoundPos(LZComp, player, 768, 7168, 0)
		-- disable transport landing
		-- (set to 30 mins)
		setReinforcementTime(LZ_COMPROMISED_TIME/10.0)
		-- allow check for clear!
		conditionalEvent(LZ_OK, "(not objectInArea(enemy1, 0, 6400, 1536, 7936)) and (not objectInArea(enemy2, 0, 6400, 1536, 7936))", 3.5)
		deactivateEvent(LZNoGo)
	end
end
conditionalEvent(LZNoGo, "(objectInArea(enemy1, 0, 6400, 1536, 7936)) or (objectInArea(enemy2, 0, 6400, 1536, 7936))", 3.5)

function LZ_OK()
	playSoundPos(LZClear, player, 768, 7168, 0)
	-- allow reinforcements now LZ clear
	-- (set back to normal)
	setReinforcementTime(ReinforceTime/10.0)
	conditionalEvent(LZNoGo, "(objectInArea(enemy1, 0, 6400, 1536, 7936)) or (objectInArea(enemy2, 0, 6400, 1536, 7936))", 3.5)
	deactivateEvent(LZ_OK)
end

function transOn()
	playerTransOnMap = true
end
callbackEvent(transOn, CALL_TRANSPORTER_REINFORCE)

function transOff(_player)
	if _player ~= player then return end
	playerTransOnMap = false
end
callbackEvent(transOff, CALL_TRANSPORTER_OFFMAP)


---------- stubs ----------

if gameOverMessage == nil then gameOverMessage = function() print("stub: gameOverMessage"); return 0 end end
if setGroupRetreatPoint == nil then setGroupRetreatPoint = function() print("stub: setGroupRetreatPoint"); return 0 end end
if centreView == nil then centreView = function() print("stub: centreView"); return 0 end end
if anyStructButWallsLeft == nil then anyStructButWallsLeft = function() print("stub: anyStructButWallsLeft"); return 0 end end
if enableResearch == nil then enableResearch = function() print("stub: enableResearch"); return 0 end end
if numStructsButNotWallsInArea == nil then numStructsButNotWallsInArea = function() print("stub: numStructsButNotWallsInArea"); return 0 end end
if playSoundPos == nil then playSoundPos = function() print("stub: playSoundPos"); return 0 end end
if flashOff == nil then flashOff = function() print("stub: flashOff"); return 0 end end
if addFeature == nil then addFeature = function() print("stub: addFeature"); return 0 end end
if groupAddDroid == nil then groupAddDroid = function() print("stub: groupAddDroid"); return 0 end end
if addDroidToTransporter == nil then addDroidToTransporter = function() print("stub: addDroidToTransporter"); return 0 end end
if groupAddGroup == nil then groupAddGroup = function() print("stub: groupAddGroup"); return 0 end end
if orderGroupLoc == nil then orderGroupLoc = function() print("stub: orderGroupLoc"); return 0 end end
if anyDroidsLeft == nil then anyDroidsLeft = function() print("stub: anyDroidsLeft"); return 0 end end
if droidInRange == nil then droidInRange = function() print("stub: droidInRange"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if removeMessage == nil then removeMessage = function() print("stub: removeMessage"); return 0 end end
if destroyFeature == nil then destroyFeature = function() print("stub: destroyFeature"); return 0 end end
if setGroupSecondary == nil then setGroupSecondary = function() print("stub: setGroupSecondary"); return 0 end end
if destroyed == nil then destroyed = function() print("stub: destroyed"); return 0 end end
if setReinforcementTime == nil then setReinforcementTime = function() print("stub: setReinforcementTime"); return 0 end end
if setLandingZone == nil then setLandingZone = function() print("stub: setLandingZone"); return 0 end end
if setPowerLevel == nil then setPowerLevel = function() print("stub: setPowerLevel"); return 0 end end
if addDroidToMissionList == nil then addDroidToMissionList = function() print("stub: addDroidToMissionList"); return 0 end end
if setStructureLimits == nil then setStructureLimits = function() print("stub: setStructureLimits"); return 0 end end
if buildingDestroyed == nil then buildingDestroyed = function() print("stub: buildingDestroyed"); return 0 end end
if objectInArea == nil then objectInArea = function() print("stub: objectInArea"); return 0 end end
if killStructsInArea == nil then killStructsInArea = function() print("stub: killStructsInArea"); return 0 end end
if completeResearch == nil then completeResearch = function() print("stub: completeResearch"); return 0 end end
if startMission == nil then startMission = function() print("stub: startMission"); return 0 end end
if pause == nil then pause = function() print("stub: pause"); return 0 end end
if setNoGoArea == nil then setNoGoArea = function() print("stub: setNoGoArea"); return 0 end end
if setTransporterExit == nil then setTransporterExit = function() print("stub: setTransporterExit"); return 0 end end
if createAlliance == nil then createAlliance = function() print("stub: createAlliance"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
if buildDroid == nil then buildDroid = function() print("stub: buildDroid"); return 0 end end
if flyTransporterIn == nil then flyTransporterIn = function() print("stub: flyTransporterIn"); return 0 end end
if seenStructInArea == nil then seenStructInArea = function() print("stub: seenStructInArea"); return 0 end end
if addMessage == nil then addMessage = function() print("stub: addMessage"); return 0 end end
if setRadarZoom == nil then setRadarZoom = function() print("stub: setRadarZoom"); return 0 end end
if structureIdle == nil then structureIdle = function() print("stub: structureIdle"); return 0 end end
if groupAddArea == nil then groupAddArea = function() print("stub: groupAddArea"); return 0 end end
if random == nil then random = function() print("stub: random"); return 0 end end
if enableStructure == nil then enableStructure = function() print("stub: enableStructure"); return 0 end end
if setGroupRetreatLeadership == nil then setGroupRetreatLeadership = function() print("stub: setGroupRetreatLeadership"); return 0 end end
if centreViewPos == nil then centreViewPos = function() print("stub: centreViewPos"); return 0 end end
if setGroupRetreatForce == nil then setGroupRetreatForce = function() print("stub: setGroupRetreatForce"); return 0 end end
if setAssemblyPoint == nil then setAssemblyPoint = function() print("stub: setAssemblyPoint"); return 0 end end
