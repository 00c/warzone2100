-- Generated by wz2lua (data file)
version(0) -- version of the script API this script is written for
-- slo: "GenExp.slo"

-- Generic VLO file template for start/expand levels

-- Cam2D.vlo

-- Next level stuff
-- points to next level
NextLev = "SUB_2_6S"

-- Define Players/Enemies
-- MAX 2. Must define same as number of enemy players given next
numEnemies = 1
enemy = {}
enemy[0] = 2
-- ally player with self (could be a different player number
alliancePlayer = 0
-- ally enemy with self (could be a different player number
allianceEnemy = {}
allianceEnemy[0] = 2
-- TRUE if want enemies to use each others targets, otherwise mark FALSE
allianceFlag = false

-- Starting Enemy Power
-- starting power values for each enemy listed above
power = {}
power[0] = 20000

-- Structure Limits
-- MAX 5. Must be same as number of limits given next
numStrucStats = 6
strucStat = {}
strucStat[0] = "A0PowerGenerator"
strucLimit = {}
strucLimit[0] = 0
strucStat[1] = "A0ResourceExtractor"
strucLimit[1] = 0
strucStat[2] = "A0ResearchFacility"
strucLimit[2] = 0
strucStat[3] = "A0LightFactory"
strucLimit[3] = 0
strucStat[4] = "A0CommandCentre"
strucLimit[4] = 0
strucStat[5] = "A0ComDroidControl"
strucLimit[5] = 0

-- Initialisation
-- 6976	//starting view centre (in world units)
centreX = 704
-- 6720
centreY = 704
-- scroll limits (in tile units)
scrollX1 = 0
scrollY1 = 0
scrollX2 = 64
scrollY2 = 64
-- starting radar: 0=zoomed out, 2=zoomed in
zoomLevel = 1

-- MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
numLZ = 1
-- 54	//coords of LZs in tile units
LZX = {}
LZX[0] = 7
-- 52
LZY = {}
LZY[0] = 5

-- Transport exit and entry
-- 62	//entry coords
transX = {}
transX[0] = 1
-- 47
transY = {}
transY[0] = 5
-- 62	//exit coords
transX[1] = 11
-- 60
transY[1] = 1

-- (5 minute) number of seconds*10 for transport, -1 for no reinforcements
ReinforceTime = 3000

-- starting technology for enemy
-- NOTE: need to set first number in array for enemy player
-- second number needs to correspond to numTechs[enemy]
-- MAX 2 enemies, 10 technologies
numTechs = {}
numTechs[0] = 31
startTech = {}
startTech[0] = {}
startTech[0][0] = "R-Defense-WallUpgrade04"
startTech[0][1] = "R-Struc-Materials05"
startTech[0][2] = "R-Struc-Factory-Upgrade05"
startTech[0][3] = "R-Struc-Factory-Cyborg-Upgrade05"
startTech[0][4] = "R-Struc-VTOLFactory-Upgrade03"
startTech[0][5] = "R-Struc-VTOLPad-Upgrade03"
startTech[0][6] = "R-Vehicle-Engine05"
startTech[0][7] = "R-Vehicle-Metals05"
startTech[0][8] = "R-Cyborg-Metals05"
startTech[0][9] = "R-Vehicle-Armor-Heat02"
startTech[0][10] = "R-Cyborg-Armor-Heat02"
startTech[0][11] = "R-Sys-Engineering02"
startTech[0][12] = "R-Wpn-Cannon-Accuracy02"
startTech[0][13] = "R-Wpn-Cannon-Damage05"
startTech[0][14] = "R-Wpn-Cannon-ROF03"
startTech[0][15] = "R-Wpn-Flamer-Damage06"
startTech[0][16] = "R-Wpn-Flamer-ROF03"
startTech[0][17] = "R-Wpn-Howitzer-Accuracy01"
startTech[0][18] = "R-Wpn-Howitzer-Damage01"
startTech[0][19] = "R-Sys-Sensor-Upgrade01"
startTech[0][20] = "R-Wpn-MG-Damage07"
startTech[0][21] = "R-Wpn-MG-ROF03"
startTech[0][22] = "R-Wpn-Mortar-Acc02"
startTech[0][23] = "R-Wpn-Mortar-Damage06"
startTech[0][24] = "R-Wpn-Mortar-ROF03"
startTech[0][25] = "R-Wpn-Rocket-Accuracy02"
startTech[0][26] = "R-Wpn-Rocket-Damage06"
startTech[0][27] = "R-Wpn-Rocket-ROF03"
startTech[0][28] = "R-Wpn-RocketSlow-Accuracy03"
startTech[0][29] = "R-Wpn-RocketSlow-Damage06"
startTech[0][30] = "R-Wpn-RocketSlow-ROF03"

-- Briefings
-- MAX 5. Needs to be same as the number of briefings given next
numBriefs = 1
-- "MB2_DI_MSG2"
brief = {}
brief[0] = "MB2_DI_MSG"
-- 0 remove after playing, 1 keep, 2 don't play immediately
briefVal = {}
briefVal[0] = 2
endMsg = "END"

-- Objectives
-- MAX 3. Needs to be the same as the number of objective blips given next
numObjectives = 1
objective = {}
objective[0] = "C2D_OBJ1"
-- doesn't use index to array, use world coords
objectiveX = {}
objectiveX[0] = 4160
-- 12736
objectiveY = {}
objectiveY[0] = 4544

-- Victory Conditions
-- NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
-- number of victory conditions to be met (not including artifacts)
numVictory = 1
-- DOESN'T need to be same as number given next (these are set TRUE/FALSE)
-- if victory condition required. Can have 2 set to TRUE and numVictory = 1
-- This will then let player win if EITHER condition is true!
-- Use numVictory of 0 if just want player to get artifacts

-- these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
-- for this reason must specify ALL victory[]!
-- all enemy vehicles and structures need to be killed
victory = {}
victory[0] = 1
-- all players vehicles at REGION index # (eg LZ REGION)
victory[1] = 3
-- number of objectives to get to (uses objective[0] to objective[#])
victory[2] = -1
-- number of bases to destroy (uses base[0] to base[#])
victory[3] = -1

--[[might use these later if necessary
victory[4]	int		-1	//kill all UNITS belonging to enemy # index
victory[5]	int		-1	//kill all STRUCTURES belonging to enemy # index
victory[6]	int		-1	//REGION index to check for defences built
victory[7]	int		-1	//# of EXTRA defences to build in REGION]]--
-- use this to communicate extra victory conditions in another script run beside the generic one
-- if player captures NASDA uplink
linkVictory = true

-- Failure Conditions
-- Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
-- numFail	int		0	//number required to be met (usually one if used!)
-- only one of these has to be met
-- Use -1 for False, # for True (often an index to check!)

-- 0	//group # index all got to REGION
fail = {}
fail[0] = -1
-- 2	//REGION index for above (these count as one condition!)
fail[1] = -1

--[[might use these later if necessary
fail	[2]	int		-1	//only Player UNITS need to be killed to lose
fail	[3]	int		-1	//only Player STRUCTURES need to be killed to lose
fail	[4]	int		-1	//Structure index # to be destroyed to lose????]]--
-- use this to communicate extra fail conditions in another script run beside the generic one
-- if NASDA uplink destroyed
linkFail = true

-- Artifacts
-- number of artifacts required for victory (must be <= numArt)
victoryArt = 4
-- MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)
numArt = 4

-- new improved way of doing artifacts
-- artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
-- artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
-- artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)
-- From HQ
artType = {}
artType[0] = 1
-- 7
artVal = {}
artVal[0] = 2
artX = {}
artX[0] = 3904
-- 12992
artY = {}
artY[0] = 4800
artComp = {}
artComp[0] = "R-Struc-Research-Upgrade04"

-- From Heavy Factory 3
artType[1] = 1
-- 5
artVal[1] = 1
artX[1] = 5824
-- 12736
artY[1] = 4544
artComp[1] = "R-Wpn-Howitzer-Accuracy01"

-- From Command Relay
artType[2] = 1
-- 9
artVal[2] = 4
artX[2] = 3520
artY[2] = 4416
artComp[2] = "R-Wpn-Bomb02"

-- From Research Fac
artType[3] = 1
-- 8
artVal[3] = 3
artX[3] = 4160
artY[3] = 5696
artComp[3] = "R-Struc-VTOLPad-Upgrade01"

-- FEATURES (inc crates, by ID number)	MAX = 10
-- features	[0]	FEATURE		649		//crate artifact (1st in valley)
-- features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

-- ********************************************
-- STRUCTURES (by ID number)		MAX = 15
-- structures	[0]	STRUCTURE	3739		//Cyborg Factory 4 (NE BASE)
-- structures	[1]	STRUCTURE	3740		//Cyborg Factory 5 (NE BASE)
-- structures	[2]	STRUCTURE	3734		//VTOL Factory 1 (NE BASE)
-- structures	[3]	STRUCTURE	3735		//VTOL Factory 2 (NE BASE)
-- Cyborg Factory 1 (SOUTH BASE)
structures = {}
structures[0] = getStructureByID(2419)
-- structures	[1]	STRUCTURE	3149		//Cyborg Factory 2 (SOUTH BASE)
-- structures	[2]	STRUCTURE	3150		//Cyborg Factory 3 (SOUTH BASE)
-- structures	[3]	STRUCTURE	3228		//Heavy Factory 1 (SOUTH BASE)
-- structures	[4]	STRUCTURE	3229		//Heavy Factory 2 (SOUTH BASE)
-- Heavy Factory 3 (SOUTH BASE)
structures[1] = getStructureByID(3231)
-- structures	[2]	STRUCTURE	3230		//Heavy Factory 4 (SOUTH BASE)
-- HQ (gives artifact)
structures[2] = getStructureByID(2414)
-- Research Facility (gives artifact)
structures[3] = getStructureByID(4175)
-- Command Relay (gives artifact)
structures[4] = getStructureByID(2415)

-- ********************************************
-- DROIDS (by ID number)		MAX = 10
-- truck1
droids = {}
droids[0] = 4176
-- truck2
droids[1] = 4177
-- truck2
droids[2] = 4178


templates = {}
templates[0] = "CO-H-HPVCannon-Tracks"
templates[1] = "CO-M-Rocket-HvyA-T-Track"
templates[2] = "CO-H-HvyCan-Tracks"
-- Truck Vehicle
templates[3] = "CO-M-Con-T"

templates[4] = "CO-H-QuadRotAA-T"
templates[5] = "CO-M-HPVCannon-Tracks"
templates[6] = "CO-H-HvyCan-Tracks"
-- Sensor Vehicle
templates[7] = "CO-M-Sensor-T"

-- IDFs
templates[8] = "CO-H-HvyCan-Tracks"
templates[9] = "CO-H-HPVCannon-Tracks"
-- Repair Vehicle
templates[10] = "CO-M-Repair-T"

-- Collective VTOL Templates
templates[11] = "CO-M-HVAT-V"
templates[12] = "CO-L-Rocket-LtA-T-VTOL"
templates[13] = "CO-L-RotMG-VTOL"
templates[14] = "CO-M-Bomb2-VTOL"

-- Cyborg Templates (SHARED)
templates[15] = "Cyb-Cannon-GROUND"
templates[16] = "Cyb-RotMG-GROUND"
templates[17] = "Cyb-Flamer-GROUND"
templates[18] = "Cyb-Rocket-GROUND"
templates[19] = "Cyb-Cannon-GROUND"


-- ********************************************
-- coordinates (world coords)		MAX = 10
-- ********************************************
-- South (backdoor)
coordsX = {}
coordsX[0] = 5056
coordsY = {}
coordsY[0] = 7616
-- West of base
coordsX[1] = 2240
coordsY[1] = 5440
-- North Door
coordsX[2] = 3648
coordsY[2] = 1984
-- East door
coordsX[3] = 6848
coordsY[3] = 6464

-- NASDA
coordsX[4] = 4800
coordsY[4] = 1216

-- Player LZ
coordsX[5] = 960
coordsY[5] = 960
-- North of base
coordsX[6] = 4160
coordsY[6] = 1216


-- ********************************************
-- regions (world coords)		MAX = 20
-- ********************************************
-- Group 0
regionsX1 = {}
regionsX1[0] = 3904
regionsY1 = {}
regionsY1[0] = 3392
regionsX2 = {}
regionsX2[0] = 4288
regionsY2 = {}
regionsY2[0] = 3648

-- Group 1
regionsX1[1] = 4416
regionsY1[1] = 6336
regionsX2[1] = 5056
regionsY2[1] = 6848

-- base around NASDA
regionsX1[2] = 1000
regionsY1[2] = 1000
regionsX2[2] = 7000
regionsY2[2] = 7000

-- Player's LZ
regionsX1[3] = 64
regionsY1[3] = 64
regionsX2[3] = 2048
regionsY2[3] = 2048


-- ********************************************
-- Enemy Base Blips
-- ********************************************
-- 2		//MAX = 5. Must be same as number of bases listed next
numBases = 0


-- ********************************************
-- Enemy Groups
-- ********************************************
-- group MAX = 10
numGroups = 4

-- Group 0 (tank attack group)
-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType = {}
grpType[0] = 0
-- player number (NP)
grpPlayer = {}
grpPlayer[0] = 0
-- index in regions array
grpRegion = {}
grpRegion[0] = 0
-- 30s time trigger (always make >= 0 for defence forces)
grpTimeGo = {}
grpTimeGo[0] = 3
-- no region. index in regions array as trigger
grpRegionGo = {}
grpRegionGo[0] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo = {}
grpWhoGo[0] = 0
-- morale = 25%
grpMorale = {}
grpMorale[0] = -1
-- leadership value = 75%
grpLeadership = {}
grpLeadership[0] = 0
-- retreat (index in coords array) base2 assembly
grpRetreatXY = {}
grpRetreatXY[0] = 0
-- index in coords array (depends on grpType)
grpPosStart = {}
grpPosStart[0] = 6
-- Minimum index in coords array
grpPosMin = {}
grpPosMin[0] = 4
-- Maximum index in coords array
grpPosMax = {}
grpPosMax[0] = 6
-- Step increase for next 'waypoint'
grpPosStep = {}
grpPosStep[0] = -1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType = {}
grpPosType[0] = 1
-- index factory to reinforce group. -1 = any factory.
grpFactory = {}
grpFactory[0] = 1
-- ideal size. If less than this factory will reinforce
grpIdealSize = {}
grpIdealSize[0] = 6

-- Group 1 (tank & cyborg defence group)
-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[1] = 1
-- player number (NP)
grpPlayer[1] = 0
-- index in regions array
grpRegion[1] = 1
-- 40s time trigger (always make >= 0 for defence forces)
grpTimeGo[1] = 4
-- base to protect
grpRegionGo[1] = 2
-- player number to cross trigger region (may not need?)
grpWhoGo[1] = 0
-- pretty timid! morale = 25%
grpMorale[1] = -1
-- leadership value = 0%
grpLeadership[1] = 0
-- retreat (index in coords array) base 2 assembly
grpRetreatXY[1] = 0
-- index in coords array (depends on grpType)
grpPosStart[1] = 0
-- Minimum index in coords array
grpPosMin[1] = 0
-- Maximum index in coords array
grpPosMax[1] = 4
-- Step increase for next 'waypoint'
grpPosStep[1] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[1] = 3
-- index factory to reinforce group. -1 = any factory.
grpFactory[1] = -1
-- ideal size. If less than this factory will reinforce
grpIdealSize[1] = 8

-- Cyborg Group 2
-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[2] = 0
-- player number (NP)
grpPlayer[2] = 0
-- index in regions array
grpRegion[2] = -1
-- 20s time trigger (always make >= 0 for defence forces)
grpTimeGo[2] = 12
-- no region. index in regions array as trigger
grpRegionGo[2] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo[2] = 0
-- morale = 50%
grpMorale[2] = -1
-- leadership value = 75%
grpLeadership[2] = 0
-- retreat (index in coords array) base2 assembly
grpRetreatXY[2] = 0
-- index in coords array (depends on grpType)
grpPosStart[2] = 0
-- Minimum index in coords array
grpPosMin[2] = 0
-- Maximum index in coords array
grpPosMax[2] = 5
-- Step increase for next 'waypoint'
grpPosStep[2] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[2] = 1
-- index factory to reinforce group. -1 = any factory.
grpFactory[2] = 0
-- ideal size. If less than this factory will reinforce
grpIdealSize[2] = 12

-- Any Factory left over!
-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[3] = 0
-- player number (NP)
grpPlayer[3] = 0
-- index in regions array
grpRegion[3] = -1
-- 20s time trigger (always make >= 0 for defence forces)
grpTimeGo[3] = 0
-- index in regions array as protect region
grpRegionGo[3] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo[3] = 0
-- morale = 50%
grpMorale[3] = -1
-- leadership value = 75%
grpLeadership[3] = 0
-- retreat (index in coords array) base2 assembly
grpRetreatXY[3] = 0
-- -1 = no waypoints. index in coords array (depends on grpType)
grpPosStart[3] = 2
-- Minimum index in coords array
grpPosMin[3] = 2
-- Maximum index in coords array
grpPosMax[3] = 4
-- Step increase for next 'waypoint'
grpPosStep[3] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[3] = 1
-- index factory to reinforce group. -1 = any factory.
grpFactory[3] = -1
-- ideal size. If less than this factory will reinforce
grpIdealSize[3] = 20

-- Factories
-- 7		//MAX = 11
numFactories = 2

-- South Cyborg Factory 1
-- index to structures
factID = {}
factID[0] = 0
-- index to assembly point. -1 for don't set
factAssXY = {}
factAssXY[0] = -1
-- delay before starting production in 10s
factTimeGo = {}
factTimeGo[0] = 2
-- -1 = no region for trigger (assume WhoGo = 0)
factRegionGo = {}
factRegionGo[0] = -1
-- Cyborg templates
factTempMin = {}
factTempMin[0] = 15
--
factTempMax = {}
factTempMax[0] = 18
-- 1mins to produce again
factEvery = {}
factEvery[0] = 6

-- Heavy Factory 3
-- 5		//index to structures
factID[1] = 1
-- index to assembly point. -1 for don't set
factAssXY[1] = -1
-- delay before starting production in 10s
factTimeGo[1] = 2
-- -1 = no region for trigger (assume WhoGo = 0)
factRegionGo[1] = 8
-- 8		//Vehicle templates
factTempMin[1] = 0
-- 10		//Repair
factTempMax[1] = 3
-- 2min to produce again
factEvery[1] = 12

-- 'Globals'
-- These should be same in each file, but may need slight alterations
-- player's player number
player = 0
crate = "Crate"
-- 171				//range to artifact about 1.5 tiles
artRange = 200
-- range to objective 5 Tiles
objectiveRange = 640
-- range to waypoint 2ish tiles
wayRange = 300
-- range for target spotting
targetRange = 768
-- maximum number of targets to store for each enemy
targetMax = 4
-- mission failed
lostSnd = "pcv470.ogg"
-- Base Under Attack
attackSnd1 = "pcv337.ogg"
-- artifact sounds
artSnd1 = "pcv351.ogg"
artSnd2 = "pcv352.ogg"
-- for enemy transports
transporter = "Transporter"
LZComp = "pcv445.ogg"
LZClear = "lz-clear.ogg"

-- base WAVs. MAX = 5
-- Enemy Base Detected
baseSnd = {}
baseSnd[0] = "pcv379.ogg"
-- Enemy Base Detected
baseSnd[1] = "pcv379.ogg"
-- Enemy Base Detected
baseSnd[2] = "pcv379.ogg"
-- Enemy base eradicated
baseSnd[3] = "pcv394.ogg"

-- NEW STUFF for trucks
-- switch for using trucks (won't work without it!)
trucksOn = true
-- Defence Type Structures for any enemy to build
-- MAX = 5
numDefences = 5
defences = {}
defences[0] = "AASite-QuadBof"
defences[1] = "PillBox3"
defences[2] = "CO-Tower-HVCan"
defences[3] = "CO-Tower-RotMG"
defences[4] = "CO-Tower-HvFlame"

-- ideal number of defences to build
maxDefence = 3
-- structures to defend
-- MAX = 5
numToDefend = 5
toDefend = {}
toDefend[0] = "A0ResearchFacility"
toDefend[1] = "A0CommandCentreCO"
toDefend[2] = "A0PowerGenerator"
toDefend[3] = "A0LightFactory"
toDefend[4] = "UplinkCentre"

-- extra Globals
oilRes = "OilResource"
-- range for truck to check for defendable structures
truckRange = 1024
-- range for defences to be for defendable structures
defRange = 512
-- end of NEW STUFF

-- NEW STUFF FOR THREAT ASSESSMENT
-- this only works on groups with Morale Values
-- if not declared just won't do anything!!
-- value for light vehicles
threatLight = 2
-- value for medium vehicles
threatMedium = 4
-- value for large vehicles
threatHeavy = 8
-- range to check for enemy and player threats
threatRange = 512
-- end of NEW STUFF

-- NEW STUFF fro RETURN TO LZ type victory condition blip and audio
-- must be set true to activate
retLZFlag = true
-- for victory condition of get all player stuff to region
retLZSnd = "pcv427.ogg"
-- Blip for LZ
retLZBlip = "C2D_LZ"

--run the code
dofile('genexp_logic.lua')
