-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
enemy1Build = Group()
enemy1Attack = Group()
enemy1Start = Group()
enemy1Fin = Group()
enemy2Build = Group()
enemy2Attack = Group()
enemy2Start = Group()
enemy2Fin = Group()
oilWellClear = false

attackedStruct = nil
attacker = nil

newDroidFactory = nil

-- temporary variables
newDroid = nil
moveX = 0
moveY = 0
xdiff = 0
ydiff = 0
-- default leadership for enemy2
ld = 0

-- values for build lists start here
-- General Values
-- limit build to this number
-- limit build to this number
-- starting power

-- Enemy Tactics

-- enemy1
enm1Fact1State = 0
enm1Fact1Destroyed = false

-- enemy2
enm2Fact1State = 0
enm2Fact1Destroyed = false
enm2Fact2State = 0
enm2Fact2Destroyed = false

-- baba 2 raiding party
raidGroup = Group()



-- event prototypes

function startup()
	setAssemblyPoint(enm1, enm1Ass1X, enm1Ass1Y)
	setAssemblyPoint(enm2, enm2Ass1X, enm2Ass1Y)
	setAssemblyPoint(enm22, enm2Ass2X, enm2Ass2Y)
	
	-- set up of positions now done in VLO
	-- make scavengers allies
	createAlliance(enemy1, enemy2)
	-- whether the oil well has been cleared
	oilWellClear = false
	-- set starting power
	setPowerLevel(pow1, enemy1)
	setPowerLevel(pow2, enemy2)
	-- enemy2 leadership (change to higher when fixed!)
	ld = 75
	-- make all droids left part of build group
	
	-- temporarily commented out to get morale effects back!
	groupAddArea(enemy1Start, enemy1, 128, 128, 7744, 7744)
	groupAddGroup(enemy1Build, enemy1Start)
	groupAddArea(enemy2Start, enemy2, 128, 128, 7744, 7744)
	groupAddGroup(enemy2Build, enemy2Start)
	-- set retreat point
	-- retreat to newbase //road block
	setGroupRetreatPoint(enemy1Build, enm1Ret1X, enm1Ret1Y)
	-- 95			//set morale to 5%
	setGroupRetreatForce(enemy1Build, 99)
	-- 50		//set leadership chance (small=more likely?)
	setGroupRetreatLeadership(enemy1Build, 50)
	-- set retreat point enemy2
	-- retreat to base2
	setGroupRetreatPoint(enemy2Build, enm2Ret2X, enm2Ret2Y)
	-- set morale to 25%
	setGroupRetreatForce(enemy2Build, 90)
	-- set leadership chance (small=more likely?)
	setGroupRetreatLeadership(enemy2Build, ld)
	
	--[[Now done after a delay in cam1a.slo
		addDroid(bloke,4544,6592,enemy1);		//fake attack
		addDroid(bloke,4672,6592,enemy1);
		addDroid(bloke,4544,6720,enemy1);
		addDroid(bloke,4672,6720,enemy1);
		groupAddArea(enemy1Start, enemy1, 4544, 6592, 4672, 6720);
		orderGroupLoc(enemy1Start, DORDER_SCOUT, playerX,playerY);]]--
	-- orderGroupLoc(enemy1Start, DORDER_SCOUT, playerX,playerY);
	
	groupAddArea(raidGroup, enemy2, 3392, 576, 3904, 1088)
end
callbackEvent(startup, CALL_GAMEINIT)


-- deal with a droid being built by enemy1
function enemy1build(_newDroid, _newDroidFactory)
	if _newDroid.player ~= enemy1 then return end
	newDroid, newDroidFactory = _newDroid, _newDroidFactory -- wz2lua: probably these can be used as function arguments directly
	if droidInRange(player, enm1Ass1X, enm1Ass1Y, 9 * 128) then
		groupAddDroid(enemy1Attack, newDroid)
		-- set Morale to stubborn
		-- retreat to base
		setGroupRetreatPoint(enemy1Attack, enm1Ret2X, enm1Ret2Y)
		-- setGroupRetreatForce(enemy1Attack, 90);			//set morale to 50%
		-- setGroupRetreatLeadership(enemy1Attack, 50);		//set leadership chance (small=more likely?)
		
		-- get all the droids back to base
		orderGroupLoc(enemy1Attack, DORDER_SCOUT, enm1Ass1X, enm1Ass1Y)
	else
		groupAddDroid(enemy1Build, newDroid)
		
		if groupCountMembers(enemy1Build) >= 4 then
			groupAddGroup(enemy1Attack, enemy1Build)
			
			-- if (droidInRange(player, rBlkX,rBlkY, 8 * 128))
			-- {
			-- in the canyon go get em
			moveX = rBlkX
			moveY = rBlkY
			
			orderGroupLoc(enemy1Attack, DORDER_SCOUT, moveX, moveY)
		end
	end
end
callbackEvent(enemy1build, CALL_NEWDROID)

-- send the droids to the player base if there is nothing at
-- the oil derek
function enemy1AttackBase()
	if not objectInRange(player, oilPatchX, oilPatchY, 8 * 128) then
		orderGroupLoc(enemy2Attack, DORDER_SCOUT, playerX, playerY)
		oilWellClear = true
	else
		oilWellClear = false
	end
end

-- deal with a droid being built by enemy2
function enemy2build(_newDroid, _newDroidFactory)
	if _newDroid.player ~= enemy2 then return end
	newDroid, newDroidFactory = _newDroid, _newDroidFactory -- wz2lua: probably these can be used as function arguments directly
	if droidInRange(player, enm2Ass1X, enm2Ass1Y, 9 * 128) then
		groupAddDroid(enemy2Attack, newDroid)
		-- Set Morale to stubborn
		-- retreat to base2
		setGroupRetreatPoint(enemy2Attack, enm2Ret2X, enm2Ret2Y)
		-- setGroupRetreatForce(enemy2Attack, 90);			//set morale to 50%
		-- setGroupRetreatLeadership(enemy2Attack, ld);		//set leadership chance (small=more likely?)
		
		-- get all the droids back to base
		orderGroupLoc(enemy2Attack, DORDER_SCOUT, enm2Ass1X, enm2Ass1Y)
	else
		-- see if there are any player droids near enemy2 base2
		if droidInRange(player, enm2Ass2X, enm2Ass2Y, 9 * 128) then
			groupAddDroid(enemy2Attack, newDroid)
			-- Set Morale
			-- retreat to base1
			setGroupRetreatPoint(enemy2Attack, enm2Ret1X, enm2Ret1Y)
			-- setGroupRetreatForce(enemy2Attack, 90);			//set morale to 50%
			-- setGroupRetreatLeadership(enemy2Attack, ld);		//set leadership chance (small=more likely?)
			
			-- get all the droids back to base
			orderGroupLoc(enemy2Attack, DORDER_SCOUT, enm2Ass2X, enm2Ass2Y)
		else
			groupAddDroid(enemy2Build, newDroid)
			
			if groupCountMembers(enemy2Build) >= 4 then
				groupAddGroup(enemy2Attack, enemy2Build)
				-- set Morale low
				-- retreat to base2
				setGroupRetreatPoint(enemy2Attack, enm2Ret2X, enm2Ret2Y)
				-- setGroupRetreatForce(enemy2Attack, 75);			//set morale to 25%
				-- setGroupRetreatLeadership(enemy2Attack, ld);		//set leadership chance (small=more likely?)
				
				if droidInRange(player, enm1Ass1X, enm1Ass1Y, 4 * 128) then
					moveX = enm1Ass1X
					moveY = enm1Ass1Y
				end
				
				orderGroupLoc(enemy2Attack, DORDER_SCOUT, moveX, moveY)
			end
		end
	end
end
callbackEvent(enemy2build, CALL_NEWDROID)


-- events for build lists start here
-- Enemy 1
-- build list
function enm1Fact1Evnt()
	enm1Fact1Destroyed = destroyed(enm1ID)
	if enm1Fact1Destroyed then
		deactivateEvent(enm1Fact1Evnt)
	else
		if structureIdle(enm1) and (groupCountMembers(enemy1Build) + groupCountMembers(enemy1Attack)) < enemy1Tot then
			if enm1Fact1State == 0 then
				buildDroid(trike, enm1, enemy1, 1)
				enm1Fact1State = 1
			else
				buildDroid(bloke, enm1, enemy1, 3)
				enm1Fact1State = 0
			end
		end
	end
end

function enm1Start1Evnt()
	setGroupRetreatPoint(enemy1Build, enm1Ret2X, enm1Ret2Y)
	-- setGroupRetreatForce(enemy1Build, 99);			//set morale to 1%
	-- setGroupRetreatLeadership(enemy1Build, 50);		//set leadership chance (small=more likely)
	
	-- build first ones so AI triggered
	buildDroid(bloke, enm1, enemy1, 3)
	repeatingEvent(enm1Fact1Evnt, 20.0)
	deactivateEvent(enm1Start1Evnt)
end
conditionalEvent(enm1Start1Evnt, "droidInRange(player, enm1.x, enm1.y, 2816)", 1.0)

-- Enemy 2
-- build list
function enm2Fact1Evnt()
	enm2Fact1Destroyed = destroyed(enm2ID)
	if enm2Fact1Destroyed then
		deactivateEvent(enm2Fact1Evnt)
	else
		if structureIdle(enm2) and (groupCountMembers(enemy2Build) + groupCountMembers(enemy2Attack)) < enemy2Tot then
			if enm2Fact1State == 0 then
				buildDroid(bloke, enm2, enemy2, 2)
				enm2Fact1State = 1
			else
				if enm2Fact1State == 1 then
					buildDroid(buggy, enm2, enemy2, 1)
					enm2Fact1State = 2
				else
					buildDroid(bloke, enm2, enemy2, 4)
					enm2Fact1State = 0
				end
			end
		end
	end
end

function enm2Fact2Evnt()
	enm2Fact2Destroyed = destroyed(enm22ID)
	if enm2Fact2Destroyed then
		deactivateEvent(enm2Fact2Evnt)
	else
		if structureIdle(enm22) and (groupCountMembers(enemy2Build) + groupCountMembers(enemy2Attack)) < enemy2Tot then
			if enm2Fact2State == 0 then
				buildDroid(jeep, enm22, enemy2, 1)
				enm2Fact2State = 1
			else
				if enm2Fact2State == 1 then
					buildDroid(bloke, enm22, enemy2, 2)
					enm2Fact2State = 2
				else
					if enm2Fact2State == 2 then
						buildDroid(trike, enm22, enemy2, 1)
						enm2Fact2State = 3
					else
						buildDroid(bloke, enm22, enemy2, 4)
						enm2Fact2State = 0
					end
				end
			end
		end
	end
end

function enm2Start1Evnt()
	buildDroid(trike, enm22, enemy2, 1)
	repeatingEvent(enm2Fact1Evnt, 16.0)
	repeatingEvent(enm2Fact2Evnt, 13.0)
	deactivateEvent(enm2Start1Evnt)
end
conditionalEvent(enm2Start1Evnt, "droidInRange(player, enm2.x, enm2.y, 1280)", 1.0)

function lastAttack1()
	if not anyStructButWallsLeft(enemy1) then
		groupAddArea(enemy1Fin, enemy1, 0, 0, 8191, 8191)
		orderGroupLoc(enemy1Fin, DORDER_SCOUT, enm1Ass1X, enm1Ass1Y)
	end
end
repeatingEvent(lastAttack1, 5.0)
-- setEventTrigger(lastAttack1, inactive);

function lastAttack2()
	if not anyStructButWallsLeft(enemy2) then
		groupAddArea(enemy2Fin, enemy2, 0, 0, 8191, 8191)
		orderGroupLoc(enemy2Fin, DORDER_SCOUT, enm2Ass1X, enm2Ass1Y)
	end
end
repeatingEvent(lastAttack2, 5.0)
-- setEventTrigger(lastAttack2, inactive);

function raiderAttack()
	orderGroupLoc(raidGroup, DORDER_SCOUT, 5056, 2496)
	
	deactivateEvent(raiderAttack)
end
conditionalEvent(raiderAttack, "structureBeingBuilt(derek, player) and droidInArea(player, 4416, 1600, 5824, 3008)", 1.0)


---------- stubs ----------

if orderGroupLoc == nil then orderGroupLoc = function() print("stub: orderGroupLoc"); return 0 end end
if setGroupRetreatLeadership == nil then setGroupRetreatLeadership = function() print("stub: setGroupRetreatLeadership"); return 0 end end
if droidInRange == nil then droidInRange = function() print("stub: droidInRange"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if objectInRange == nil then objectInRange = function() print("stub: objectInRange"); return 0 end end
if anyStructButWallsLeft == nil then anyStructButWallsLeft = function() print("stub: anyStructButWallsLeft"); return 0 end end
if structureIdle == nil then structureIdle = function() print("stub: structureIdle"); return 0 end end
if droidInArea == nil then droidInArea = function() print("stub: droidInArea"); return 0 end end
if setGroupRetreatPoint == nil then setGroupRetreatPoint = function() print("stub: setGroupRetreatPoint"); return 0 end end
if structureBeingBuilt == nil then structureBeingBuilt = function() print("stub: structureBeingBuilt"); return 0 end end
if setAssemblyPoint == nil then setAssemblyPoint = function() print("stub: setAssemblyPoint"); return 0 end end
if setPowerLevel == nil then setPowerLevel = function() print("stub: setPowerLevel"); return 0 end end
if groupAddDroid == nil then groupAddDroid = function() print("stub: groupAddDroid"); return 0 end end
if buildingDestroyed == nil then buildingDestroyed = function() print("stub: buildingDestroyed"); return 0 end end
if createAlliance == nil then createAlliance = function() print("stub: createAlliance"); return 0 end end
if buildDroid == nil then buildDroid = function() print("stub: buildDroid"); return 0 end end
if groupAddArea == nil then groupAddArea = function() print("stub: groupAddArea"); return 0 end end
if groupAddGroup == nil then groupAddGroup = function() print("stub: groupAddGroup"); return 0 end end
if setGroupRetreatForce == nil then setGroupRetreatForce = function() print("stub: setGroupRetreatForce"); return 0 end end
