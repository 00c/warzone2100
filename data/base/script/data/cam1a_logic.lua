-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
-- public	STRUCTURESTAT		powerModuleHack;
-- initial power level

-- Starting Tech

-- Starting Tech now done as completed research

-- General Values
-- keep track of number of artifacts collected
numart = 0
-- private		int		res1x,res1y;
-- public		STRUCTURE	commandCentre;

-- Base Under Attack Stuff
hitStruc = nil
attackerObj = nil
t = 0

-- Briefing stuff
-- , winMsg;


-- Proximity: Resources
--[[public		FEATURE		res1;
public		INTMESSAGE	res1Msg;
public		SOUND		res1Snd;
public		STRUCTURESTAT	derrick;]]--

-- Proximity: Artifacts

-- public		INTMESSAGE	art1Msg;
-- Engineering Upgrade
art1ID = nil

-- public		INTMESSAGE	art2Msg;
-- Repair Facility (NOT Robotics)
art2ID = nil

-- public		INTMESSAGE	art3Msg;
-- Flamer
art3ID = nil

-- public		STRUCTURE	art4Get;	//placed in script
-- public		INTMESSAGE	art4Msg;
-- Light Machine Gun Mk1
art4ID = nil

-- player Bonus Research topics given at end of mission
-- need to be declared with value >= numResP0, numResP1, etc.
count = 0

-- Proximity: Enemy


-- public		SOUND		enm22Snd2;
base2Flag = false

-- Enemy Tactics

-- Win or lose

-- group to stop players droids chsing too much!!
allPlayer = Group()
scavGroup = Group()

-- Events: Initialise
-- event art4SeenEvnt;

-- Events: Start
function startEvnt()
	takeOverDroidsInArea(0, 0, 0, 0, C.mapWidth * 128, C.mapHeight * 128)
	
	-- set scroll limits
	-- setScrollParams(0, 0, 64, 70);			//limit scroll
	-- centreView(commandCentre);
	-- centre near transport
	centreViewPos(1728, 6720)
	-- set zoom Level 64x64
	setRadarZoom(1)
	-- set starting power
	setPowerLevel(startPower, player)
	-- set start tech
	--[[makeComponentAvailable(viperBody, player);
		makeComponentAvailable(spade, player);
		makeComponentAvailable(wheeledProp, player);]]--
	-- needs to be done this way so doesn't enable rest of tree!
	makeComponentAvailable(mg, player)
	
	count = 0
	while count < numTech do
		completeResearch(tech[count], player)
		count = count + 1
	end
	-- give player briefing
	addMessage(MissionBrief, CAMP_MSG, player, false)
	-- make sure all buttons available
	addReticuleButton(OPTIONS)
	addReticuleButton(CANCEL)
	addReticuleButton(BUILD)
	addReticuleButton(MANUFACTURE)
	addReticuleButton(RESEARCH)
	addReticuleButton(INTELMAP)
	addReticuleButton(DESIGN)
	-- stop player building on LZ
	setLandingZone(10, 51, 12, 53)
	-- stop players droids from chasing!
	--[[not any more - john
		groupAddArea(allPlayer, player, 0, 30*128, 40*128, 70*128);
		setGroupSecondary(allPlayer,DSO_HALTTYPE, DSS_HALT_HOLD);]]--
	
	-- set no time limits (can carry over from previous missions if not set!)
	setReinforcementTime(-1/10.0)
	-- set Mission time limit
	setMissionTime(timeLimit/10.0)
	
	-- /allow to build stuff
	setStructureLimits(powerGen, numPow, 0)
	setStructureLimits(oilDerrick, numExt, 0)
	-- numRes changed by Keith to set Research Facility Limits to 1, until.... 1C
	setStructureLimits(research, numRes, 0)
	setStructureLimits(factory, numFac, 0)
	setStructureLimits(command, 1, player)
	enableStructure(command, player)
	enableStructure(powerGen, 0)
	enableStructure(oilDerrick, 0)
	enableStructure(research, 0)
	enableStructure(factory, 0)
	-- enableStructure(powerModuleHack, 0);
	
	-- add machine gun crate *** BACK IN ***
	-- now got from new 1st base
	art4ID = addFeature(crate, art4X, art4Y)
	-- setEventTrigger(art4SeenEvnt, art4SeenTrig);
	-- setEventTrigger(art4TakeEvnt, art4TakeTrig);	//set from start since didn't always set!!
	
	-- set up initial attack group
	groupAddArea(scavGroup, enemy1, 4416, 6336, 5440, 7104)
	-- set retreat point
	-- retreat to crossroads
	setGroupRetreatPoint(scavGroup, 4416, 5440)
	-- set morale to 1%
	setGroupRetreatForce(scavGroup, 99)
	-- set leadership chance 10% (small=more likely)
	setGroupRetreatLeadership(scavGroup, 10)
	
	deactivateEvent(startEvnt)
end
callbackEvent(startEvnt, CALL_GAMEINIT)

-- Events: Artifacts
function art1TakeEvnt()
	numart = numart + 1
	-- playSound(art1Snd2, player);
	playSoundPos(art1Snd2, player, art1ID.x, art1ID.y, art1ID.z)
	destroyFeature(art1ID)
	-- removeMessage(art1Msg, PROX_MSG, player);
	enableResearch(art1Comp, player)
	deactivateEvent(art1TakeEvnt)
end

function art1PlaceEvnt()
	art1ID = addFeature(crate, art1X, art1Y)
	-- setEventTrigger(art1SeenEvnt, art1SeenTrig);
	conditionalEvent(art1TakeEvnt, "droidInRange(player, art1X, art1Y, 171)", 0.5)
	deactivateEvent(art1PlaceEvnt)
end
conditionalEvent(art1PlaceEvnt, "(destroyed(art1Get))", 0.5)

function art2TakeEvnt()
	numart = numart + 1
	-- playSound(art2Snd2, player);
	playSoundPos(art2Snd2, player, art2ID.x, art2ID.y, art2ID.z)
	destroyFeature(art2ID)
	-- removeMessage(art2Msg, PROX_MSG, player);
	enableResearch(art2Comp, player)
	deactivateEvent(art2TakeEvnt)
end

function art2PlaceEvnt()
	art2ID = addFeature(crate, art2X, art2Y)
	-- setEventTrigger(art2SeenEvnt, art2SeenTrig);
	conditionalEvent(art2TakeEvnt, "droidInRange(player, art2X, art2Y, 171)", 0.5)
	-- make sure art2 placed before base2 dead
	-- setEventTrigger(enm2DeadEvnt, enm2DeadTrig);
	-- make sure art2 placed before mission won as well!!!
	repeatingEvent(wonYetEvnt, 0.5)
	deactivateEvent(art2PlaceEvnt)
end
conditionalEvent(art2PlaceEvnt, "(destroyed(art2Get))", 0.5)

function art3TakeEvnt()
	numart = numart + 1
	destroyFeature(art3ID)
	-- playSound(art3Snd2, player);
	playSoundPos(art3Snd2, player, art3ID.x, art3ID.y, art3ID.z)
	-- removeMessage(art3Msg, PROX_MSG, player);
	enableResearch(art3Comp, player)
	deactivateEvent(art3TakeEvnt)
end

function art3PlaceEvnt()
	art3ID = addFeature(crate, art3X, art3Y)
	-- setEventTrigger(art3SeenEvnt, art3SeenTrig);
	conditionalEvent(art3TakeEvnt, "droidInRange(player, art3X, art3Y, 171)", 0.5)
	deactivateEvent(art3PlaceEvnt)
end
conditionalEvent(art3PlaceEvnt, "(destroyed(art3Get))", 0.5)

-- mg crate (placed at start of script)
function art4TakeEvnt()
	numart = numart + 1
	destroyFeature(art4ID)
	-- playSound(art4Snd2, player);
	playSoundPos(art4Snd2, player, art4ID.x, art4ID.y, art4ID.z)
	-- removeMessage(art4Msg, PROX_MSG, player);
	enableResearch(art4Comp, player)
	deactivateEvent(art4TakeEvnt)
end
conditionalEvent(art4TakeEvnt, "droidInRange(player, art4X, art4Y, 171)", 0.5)

-- Events: Enemies
-- newbase dead?
function enm0DeadEvnt()
	killStructsInArea(enemy1, REF_WALL, 3520, 4416, 4416, 5056, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy1, REF_WALLCORNER, 3520, 4416, 4416, 5056, true, false)
	removeMessage(enm0Msg, PROX_MSG, player)
	-- playSound(enm0Snd2, player);
	-- should be same as in prox1a.txt
	playSoundPos(enm0Snd2, player, 3904, 4672, 0)
	deactivateEvent(enm0DeadEvnt)
end

-- base 2 seen
function enm0SeenEvnt()
	addMessage(enm0Msg, PROX_MSG, player, false)
	-- playSound(enm0Snd1, player);
	-- should be same as in prox1a.txt
	playSoundPos(enm0Snd1, player, 3904, 4672, 0)
	conditionalEvent(enm0DeadEvnt, "(numStructsButNotWallsInArea(enemy1, 3520, 4416, 4416, 5056) == 0)", 2.0)
	deactivateEvent(enm0SeenEvnt)
end
conditionalEvent(enm0SeenEvnt, "seenStructInArea(player, enemy1, false, 3520, 4416, 4416, 5056)", 1.0)

function enm1DeadEvnt()
	killStructsInArea(enemy1, REF_WALL, 4544, 1856, 5440, 2496, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy1, REF_WALLCORNER, 4544, 1856, 5440, 2496, true, false)
	removeMessage(enm1Msg, PROX_MSG, player)
	-- playSound(enm1Snd2, player);
	-- should be same as in prox1a.txt
	playSoundPos(enm1Snd2, player, 5002, 2154, 135)
	-- trigger 2nd base blip if not already triggered
	if not base2Flag then
		base2Flag = true
		addMessage(enm2Msg, PROX_MSG, player, false)
		-- playSound(enm2Snd1, player);
		-- should be same as in prox1a.txt
		playSoundPos(enm2Snd1, player, 1600, 1728, 0)
		conditionalEvent(enm2DeadEvnt, "(numStructsButNotWallsInArea(enemy2, 1088, 1216, 2240, 2240) == 0)", 2.0)
		deactivateEvent(enm2SeenEvnt)
	end
	deactivateEvent(enm1DeadEvnt)
end

function enm1SeenEvnt()
	addMessage(enm1Msg, PROX_MSG, player, false)
	-- playSound(enm1Snd1, player);
	-- should be same as in prox1a.txt
	playSoundPos(enm1Snd1, player, 5002, 2154, 135)
	conditionalEvent(enm1DeadEvnt, "(numStructsButNotWallsInArea(enemy1, 4544, 1856, 5440, 2496) == 0)", 2.0)
	deactivateEvent(enm1SeenEvnt)
end
conditionalEvent(enm1SeenEvnt, "seenStructInArea(player, enemy1, false, 4544, 1856, 5440, 2496)", 1.0)

-- base 2 dead?
function enm2DeadEvnt()
	killStructsInArea(enemy2, REF_WALL, 1088, 1216, 2240, 2240, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy2, REF_WALLCORNER, 1088, 1216, 2240, 2240, true, false)
	removeMessage(enm2Msg, PROX_MSG, player)
	-- playSound(enm2Snd2, player);
	-- should be same as in prox1a.txt
	playSoundPos(enm2Snd2, player, 1600, 1728, 0)
	deactivateEvent(enm2DeadEvnt)
end

-- base 2 seen (used to be wrong trigger!)
function enm2SeenEvnt()
	base2Flag = true
	addMessage(enm2Msg, PROX_MSG, player, false)
	-- playSound(enm2Snd1, player);
	-- should be same as in prox1a.txt
	playSoundPos(enm2Snd1, player, 1600, 1728, 0)
	conditionalEvent(enm2DeadEvnt, "(numStructsButNotWallsInArea(enemy2, 1088, 1216, 2240, 2240) == 0)", 2.0)
	deactivateEvent(enm2SeenEvnt)
end
conditionalEvent(enm2SeenEvnt, "seenStructInArea(player, enemy2, false, 1088, 1216, 2240, 2240)", 1.0)

-- base 2A dead?
function enm22DeadEvnt()
	killStructsInArea(enemy2, REF_WALL, 1472, 3776, 2752, 5440, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy2, REF_WALLCORNER, 1472, 3776, 2752, 5440, true, false)
	removeMessage(enm22Msg, PROX_MSG, player)
	-- playSound(enm2Snd2, player);			//should this be enm22Snd2?
	-- should be same as in prox1a.txt
	playSoundPos(enm2Snd2, player, 2112, 4544, 0)
	deactivateEvent(enm22DeadEvnt)
end

-- base 2A seen
function enm22SeenEvnt()
	addMessage(enm22Msg, PROX_MSG, player, false)
	-- playSound(enm22Snd1, player);
	-- should be same as in prox1a.txt
	playSoundPos(enm22Snd1, player, 2112, 4544, 0)
	conditionalEvent(enm22DeadEvnt, "(numStructsButNotWallsInArea(enemy2, 1472, 3776, 2752, 5440) == 0)", 2.0)
	deactivateEvent(enm22SeenEvnt)
end
conditionalEvent(enm22SeenEvnt, "seenStructInArea(player, enemy2, false, 1472, 3776, 2752, 5440)", 1.0)

-- Events: Win or Lose

-- assumes victory already checked
function nextLevEvnt()
	pause(40/10.0)
	
	-- give bonus research (if req'd)
	count = 0
	while count < numResP0 do
		enableResearch(resP0[count], 0)
		count = count + 1
	end
	
	-- flag next part of map
	C.gameLevel = C.gameLevel + 1
	-- removeMessage(MissionBrief, MISS_MSG, player);
	startMission(CAMP_EXPAND, NextLev)
	deactivateEvent(nextLevEvnt)
end

function gameLost()
	gameOverMessage(endMsg, MISS_MSG, 0, false)
	deactivateEvent(gameLost)
end

function lostYetEvnt()
	if not anyDroidsLeft(player) then
		if not anyStructButWallsLeft(player) then
			deactivateEvent(wonYetEvnt)
			-- waits 2 seconds before ending
			repeatingEvent(gameLost, 2.0)
			deactivateEvent(lostYetEvnt)
			deactivateEvent(timeUp)
		end
	end
end
repeatingEvent(lostYetEvnt, 0.5)


-- have all enemies lost yet, and all artifacts picked up?
function wonYetEvnt()
	if not anyDroidsLeft(enemy2) then
		if not anyStructButWallsLeft(enemy2) then
			if not anyDroidsLeft(enemy1) then
				if not anyStructButWallsLeft(enemy1) then
					if numart == 4 then
						deactivateEvent(lostYetEvnt)
						repeatingEvent(nextLevEvnt, 0.5)
						deactivateEvent(wonYetEvnt)
						deactivateEvent(timeUp)
					end
				end
			end
		end
	end
end

-- cheat button ctrl M
function cheatEvnt()
	repeatingEvent(nextLevEvnt, 0.5)
	deactivateEvent(cheatEvnt)
end
callbackEvent(cheatEvnt, CALL_MISSION_START)

-- Base Under Attack
function baseHit(_hitStruc, _attackerObj)
	if _hitStruc.player ~= C.selectedPlayer then return end
	hitStruc, attackerObj = _hitStruc, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if t >= 20 then
		t = 0
		if hitStruc ~= nil then
			playSoundPos(attackSnd1, C.selectedPlayer, hitStruc.x, hitStruc.y, hitStruc.z)
		else
			playSound(attackSnd1, C.selectedPlayer)
		end
	end
end
callbackEvent(baseHit, CALL_STRUCT_ATTACKED)

function everySec()
	t = t + 1
end
repeatingEvent(everySec, 2.0)

function seeBaseHit()
	if hitStruc ~= nil then
		centreView(hitStruc)
		-- flag known about!
		t = 0
	end
end
callbackEvent(seeBaseHit, CALL_MISSION_END)

function removeObj1()
	removeMessage(obj1Msg, PROX_MSG, player)
	deactivateEvent(removeObj1)
end


function scavAttack2()
	playSound(incomingSnd, player)
	pause(20/10.0)
	deactivateEvent(scavAttack2)
	conditionalEvent(removeObj1, "droidInRange(player, 4928, 6592, 5 * 128)", 2.0)
	addMessage(MissionBrief2, MISS_MSG, player, true)
	addMessage(obj1Msg, PROX_MSG, player, false)
	orderGroupLoc(scavGroup, DORDER_SCOUT, 2100, 6700)
end
conditionalEvent(scavAttack2, "droidInArea(player, 2496, 6080, 4928, 7232)", 0.5)

function timeUp()
	deactivateEvent(wonYetEvnt)
	deactivateEvent(lostYetEvnt)
	repeatingEvent(gameLost, 2.0)
	deactivateEvent(timeUp)
end
callbackEvent(timeUp, CALL_MISSION_TIME)


---------- stubs ----------

if takeOverDroidsInArea == nil then takeOverDroidsInArea = function() print("stub: takeOverDroidsInArea"); return 0 end end
if gameOverMessage == nil then gameOverMessage = function() print("stub: gameOverMessage"); return 0 end end
if setStructureLimits == nil then setStructureLimits = function() print("stub: setStructureLimits"); return 0 end end
if centreView == nil then centreView = function() print("stub: centreView"); return 0 end end
if makeComponentAvailable == nil then makeComponentAvailable = function() print("stub: makeComponentAvailable"); return 0 end end
if anyStructButWallsLeft == nil then anyStructButWallsLeft = function() print("stub: anyStructButWallsLeft"); return 0 end end
if enableResearch == nil then enableResearch = function() print("stub: enableResearch"); return 0 end end
if droidInArea == nil then droidInArea = function() print("stub: droidInArea"); return 0 end end
if setMissionTime == nil then setMissionTime = function() print("stub: setMissionTime"); return 0 end end
if addFeature == nil then addFeature = function() print("stub: addFeature"); return 0 end end
if orderGroupLoc == nil then orderGroupLoc = function() print("stub: orderGroupLoc"); return 0 end end
if destroyed == nil then destroyed = function() print("stub: destroyed"); return 0 end end
if droidInRange == nil then droidInRange = function() print("stub: droidInRange"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if removeMessage == nil then removeMessage = function() print("stub: removeMessage"); return 0 end end
if destroyFeature == nil then destroyFeature = function() print("stub: destroyFeature"); return 0 end end
if setGroupRetreatPoint == nil then setGroupRetreatPoint = function() print("stub: setGroupRetreatPoint"); return 0 end end
if setReinforcementTime == nil then setReinforcementTime = function() print("stub: setReinforcementTime"); return 0 end end
if setLandingZone == nil then setLandingZone = function() print("stub: setLandingZone"); return 0 end end
if setPowerLevel == nil then setPowerLevel = function() print("stub: setPowerLevel"); return 0 end end
if groupAddArea == nil then groupAddArea = function() print("stub: groupAddArea"); return 0 end end
if setGroupRetreatForce == nil then setGroupRetreatForce = function() print("stub: setGroupRetreatForce"); return 0 end end
if playSoundPos == nil then playSoundPos = function() print("stub: playSoundPos"); return 0 end end
if anyDroidsLeft == nil then anyDroidsLeft = function() print("stub: anyDroidsLeft"); return 0 end end
if killStructsInArea == nil then killStructsInArea = function() print("stub: killStructsInArea"); return 0 end end
if completeResearch == nil then completeResearch = function() print("stub: completeResearch"); return 0 end end
if addReticuleButton == nil then addReticuleButton = function() print("stub: addReticuleButton"); return 0 end end
if startMission == nil then startMission = function() print("stub: startMission"); return 0 end end
if pause == nil then pause = function() print("stub: pause"); return 0 end end
if numStructsButNotWallsInArea == nil then numStructsButNotWallsInArea = function() print("stub: numStructsButNotWallsInArea"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
if seenStructInArea == nil then seenStructInArea = function() print("stub: seenStructInArea"); return 0 end end
if addMessage == nil then addMessage = function() print("stub: addMessage"); return 0 end end
if setRadarZoom == nil then setRadarZoom = function() print("stub: setRadarZoom"); return 0 end end
if enableStructure == nil then enableStructure = function() print("stub: enableStructure"); return 0 end end
if centreViewPos == nil then centreViewPos = function() print("stub: centreViewPos"); return 0 end end
if setGroupRetreatLeadership == nil then setGroupRetreatLeadership = function() print("stub: setGroupRetreatLeadership"); return 0 end end
