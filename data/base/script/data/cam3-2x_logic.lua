-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for

count = 0
newColour = 0
oldColour = 0
temp = 0
objectDroid = nil
viewerDroid = nil
teamAlpha = Group()

-- delay between "incoming.." and brief.
-- 10 second delay

function start()
	createAlliance(player, curPlayer)
	-- to stop them from getting killed to quickly!
	createAlliance(enemy, curPlayer)
	newColour = getPlayerColour(player)
	
	-- store the old colour so we can reset it later
	oldColour = getPlayerColour(curPlayer)
	
	-- make curPlayer units player colour
	setPlayerColour(newColour, curPlayer)
	-- group team alpha units (player 1) so can fail if all dead
	-- groupAddArea(teamAlpha, curPlayer, RegionsX1[0], RegionsY1[0], RegionsX2[0], RegionsY2[0]);
	-- make these experienced
	count = 0
	while count < numDroids do
		setDroidSecondary(droids[count], DSO_HALTTYPE, DSS_HALT_GUARD)
		-- set experience
		if (droids[count].droidType == DROID_WEAPON) or (droids[count].droidType == DROID_CYBORG) then
			setDroidKills(droids[count], random(16) + 31)
		end
		count = count + 1
	end
end
callbackEvent(start, CALL_GAMEINIT)

function givePower()
	setPowerLevel(power, curPlayer)
end
delayedEvent(givePower, 1.0)

-- has player found these units?
function seen()
	addMessage(MissionBrief2, MISS_MSG, 0, true)
	-- this needs to change so that the units are taken over by ID!!!!!
	-- takeOverDroidsInArea(curPlayer, player, RegionsX1[count], RegionsY1[count], RegionsX2[count], RegionsY2[count]);
	-- structures should be OK
	count = 0
	while count < numDroids do
		if droids[count] ~= nil then
			droids[count] = takeOverSingleDroid(droids[count], player)
			
			-- just in case out of memory, don't bother with losing
			if droids[count] == nil then
				deactivateEvent(alphaDead)
			end
		end
		count = count + 1
	end
	takeOverStructsInArea(curPlayer, player, RegionsX1[0], RegionsY1[0], RegionsX2[0], RegionsY2[0])
	C.extraVictoryFlag = true
	
	-- reset the player's colour
	setPlayerColour(oldColour, curPlayer)
	
	-- stop player from failing now they've been rescued!
	-- setEventTrigger(alphaDead, inactive);
	deactivateEvent(seen)
end

-- has player found these units?
function seen2(_objectDroid, _viewerDroid)
	if _viewerDroid.player ~= player then return end
	objectDroid, viewerDroid = _objectDroid, _viewerDroid -- wz2lua: probably these can be used as function arguments directly
	if objectDroid.player == curPlayer then
		playSound(incomingSnd, player)
		delayedEvent(seen, 3.0)
		deactivateEvent(seen2)
	end
end
callbackEvent(seen2, CALL_DROID_SEEN)

function clearMessage()
	flushConsoleMessages()
	deactivateEvent(clearMessage)
end

function brief2()
	addMessage(MissionBrief1, MISS_MSG, 0, true)
	
	-- break enemy alliance with team alpha units (player 1)
	breakAlliance(enemy, curPlayer)
	
	-- allow reinforcements + console message (need audio too!)
	setReinforcementTime(ReinforceTime/10.0)
	showConsoleText(_("Reinforcements are now available"), player)
	delayedEvent(clearMessage, 10.0)
	
	-- allow checks for team alpha dead
	repeatingEvent(alphaDead, 5.5)
	
	deactivateEvent(brief2)
end

-- trigger brief about VTOLS when player gets to South region
function brief1()
	playSound(incomingSnd, player)
	delayedEvent(brief2, 3.0)
	deactivateEvent(brief1)
end
conditionalEvent(brief1, "numDroidsInArea(player, RegionsX1[1], RegionsY1[1], RegionsX2[1], RegionsY2[1]) > 0", 2.7)

function alphaDead()
	count = 0
	temp = 0
	while count < numDroids do
		if droids[count] == nil then
			temp = temp + 1
		end
		count = count + 1
	end
	-- are all Team Alpha dead?
	if temp == numDroids then
		playSound(badSnd, player)
		pause(20/10.0)
		-- reset the player's colour
		setPlayerColour(oldColour, curPlayer)
		deactivateEvent(alphaDead)
		C.extraFailFlag = true
	end
end


---------- stubs ----------

if takeOverSingleDroid == nil then takeOverSingleDroid = function() print("stub: takeOverSingleDroid"); return 0 end end
if showConsoleText == nil then showConsoleText = function() print("stub: showConsoleText"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if addMessage == nil then addMessage = function() print("stub: addMessage"); return 0 end end
if setDroidSecondary == nil then setDroidSecondary = function() print("stub: setDroidSecondary"); return 0 end end
if breakAlliance == nil then breakAlliance = function() print("stub: breakAlliance"); return 0 end end
if setDroidKills == nil then setDroidKills = function() print("stub: setDroidKills"); return 0 end end
if takeOverStructsInArea == nil then takeOverStructsInArea = function() print("stub: takeOverStructsInArea"); return 0 end end
if random == nil then random = function() print("stub: random"); return 0 end end
if getPlayerColour == nil then getPlayerColour = function() print("stub: getPlayerColour"); return 0 end end
if setPlayerColour == nil then setPlayerColour = function() print("stub: setPlayerColour"); return 0 end end
if pause == nil then pause = function() print("stub: pause"); return 0 end end
if setReinforcementTime == nil then setReinforcementTime = function() print("stub: setReinforcementTime"); return 0 end end
if setPowerLevel == nil then setPowerLevel = function() print("stub: setPowerLevel"); return 0 end end
if flushConsoleMessages == nil then flushConsoleMessages = function() print("stub: flushConsoleMessages"); return 0 end end
if createAlliance == nil then createAlliance = function() print("stub: createAlliance"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
if _ == nil then _ = function() print("stub: _"); return 0 end end
if numDroidsInArea == nil then numDroidsInArea = function() print("stub: numDroidsInArea"); return 0 end end
