-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
count = 0
count2 = 0
temp = 0
numBases = 0
curBase = 0
tempX = 0
tempY = 0
absorbCount = 0
strucCount1 = 0
strucCount2 = 0
base = nil
structure = nil
researchDone = nil

-- nexus factory trigger
-- 30sec time between taking over structures
-- 10sec time between taking over droids
-- check if player has researched resistance circuits

-- player wins by first researching resistance circuits, then having no enemy structures or enemy units

function powStuff()
	addPower(player, power)
	playSound(powTransSnd, player)
end
delayedEvent(powStuff, 0.5)


-- keep taking over structures until player does correct research
function nexus()
	initEnumStruct(false, structs[strucCount1], player, player)
	base = enumStruct()
	if base ~= nil then
		tempX = base.x
		tempY = base.y
		takeOverStructsInArea(player, enemy, tempX - 64, tempY - 64, tempX + 64, tempY + 64)
		strucCount2 = strucCount2 + 1
		if (strucCount2 >= structCount[strucCount1]) and (structCount[strucCount1] > 0) then
			strucCount2 = 0
			strucCount1 = strucCount1 + 1
		end
	else
		if structCount[strucCount1] > 0 then
			strucCount2 = 0
			strucCount1 = strucCount1 + 1
		end
	end
	repeatingEvent(nexus, 30.0)
end
delayedEvent(nexus, 2.0)

function changeDroids()
	repeatingEvent(changeDroids, 10.0)
	takeOverDroidsInAreaExp(player, enemy, 0, 0, 8192, 16384, expLev, absorbNum)
end
delayedEvent(changeDroids, 60.0)

-- allow Nexus to build from newly acquired factory (light?)
-- what about cyborg and vtol factories?
function nexusFactory()
	initEnumStruct(false, structs[factoryIndex], enemy, enemy)
	-- find factory.
	structure = enumStruct()
	while structure ~= nil do
		if structureIdle(structure) then
			buildDroid(templates[random(numTemplates)], structure, enemy, 1)
		end
		-- find factory.
		structure = enumStruct()
	end
end
repeatingEvent(nexusFactory, 30.0)

function nexusCyborgFactory()
	initEnumStruct(false, structs[cyborgIndex], enemy, enemy)
	-- find cyborg factory.
	structure = enumStruct()
	while structure ~= nil do
		if structureIdle(structure) then
			buildDroid(cyborgs[random(numCyborgs)], structure, enemy, 1)
		end
		-- find cyborg factory.
		structure = enumStruct()
	end
end
repeatingEvent(nexusCyborgFactory, 30.0)

function nexusVTOLFactory()
	initEnumStruct(false, structs[VTOLIndex], enemy, enemy)
	-- find cyborg factory.
	structure = enumStruct()
	while structure ~= nil do
		if structureIdle(structure) then
			buildDroid(VTOLs[random(numVTOLs)], structure, enemy, 1)
		end
		-- find cyborg factory.
		structure = enumStruct()
	end
end
repeatingEvent(nexusVTOLFactory, 30.0)

function makeLaugh()
	if random(100) < laughChance then
		playSound(laughSnd[random(numLaughs)], player)
	end
end
repeatingEvent(makeLaugh, 60.0)

function makeLaugh2()
	if random(100) < laughChance then
		playSound(laughSnd[random(numLaughs)], player)
	end
end
callbackEvent(makeLaugh2, CALL_ELECTRONIC_TAKEOVER)

-- player must research before can win!
function delayWin()
	C.extraVictoryFlag = true
	deactivateEvent(delayWin)
end

--[[event weatheredAttack(missionTimeRemaining() < 100, 10)
{
	extraVictoryFlag = TRUE;
	setEventTrigger(weatheredAttack, inactive);
}]]--

function resDone(_researchDone, _structure, _player)
	researchDone, structure = _researchDone, _structure -- wz2lua: probably these can be used as function arguments directly
	if researchDone == playerRes then
		conditionalEvent(delayWin, "(not anyStructButWallsLeft(enemy)) and (getDroidCount(enemy) == 0)", 4.1)
		deactivateEvent(changeDroids)
		deactivateEvent(nexus)
		deactivateEvent(resDone)
	end
end
callbackEvent(resDone, CALL_RESEARCHCOMPLETED)


---------- stubs ----------

if enumStruct == nil then enumStruct = function() print("stub: enumStruct"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if addPower == nil then addPower = function() print("stub: addPower"); return 0 end end
if structureIdle == nil then structureIdle = function() print("stub: structureIdle"); return 0 end end
if random == nil then random = function() print("stub: random"); return 0 end end
if takeOverStructsInArea == nil then takeOverStructsInArea = function() print("stub: takeOverStructsInArea"); return 0 end end
if initEnumStruct == nil then initEnumStruct = function() print("stub: initEnumStruct"); return 0 end end
if getDroidCount == nil then getDroidCount = function() print("stub: getDroidCount"); return 0 end end
if anyStructButWallsLeft == nil then anyStructButWallsLeft = function() print("stub: anyStructButWallsLeft"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
if buildDroid == nil then buildDroid = function() print("stub: buildDroid"); return 0 end end
if takeOverDroidsInAreaExp == nil then takeOverDroidsInAreaExp = function() print("stub: takeOverDroidsInAreaExp"); return 0 end end
