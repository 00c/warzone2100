-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
numart = 0

-- structure limit stuff
-- public	STRUCTURESTAT		powerModuleHack;

-- Win or lose
allPlayer = Group()
nearLZ = Group()
totDroids = 0

-- Starting Technology
tecE1 = Array(3)
tecCount = 0

-- Base Under Attack Stuff
hitStruc = nil
attackerObj = nil
t = 0

-- LZ Message
transOnMap = false

-- Transport Entry/Exit coords

-- Briefing stuff
-- , winMsg;
-- public		INTMESSAGE		InFlight;
brief2Flag = false

-- Proximity: Artifacts

-- public		INTMESSAGE	art1Msg;
art1ID = nil

-- public		INTMESSAGE	art2Msg;
art2ID = nil

--[[no 3rd artifact
public		int		art3X, art3Y;
public		STRUCTURE	art3Get;
public		SOUND		art3Snd2;
//public		INTMESSAGE	art3Msg;
public		RESEARCHSTAT	art3Comp;
private		FEATURE		art3ID;]]--

-- player Bonus Research topics given at end of mission
-- need to be declared with value >= numResP0, numResP1, etc.
count = 0

-- Proximity: Enemy


-- extra blips for guard entrances



-- 2 minute delay between topics completed


function startEvnt()
	centreViewPos(52 * 128, 55 * 128)
	-- set scroll limits
	-- setScrollParams(0, 0, 64, 64);			//limit scroll
	-- set zoom Level 64x64
	setRadarZoom(1)
	-- set landing zone
	setLandingZone(52, 54, 54, 56)
	-- call in transport
	flyTransporterIn(player, entryX, entryY, false)
	setTransporterExit(player, exitX, exitY)
	-- make sure all buttons available/unavailable
	-- removeReticuleButton(DESIGN);
	-- removeReticuleButton(BUILD);
	-- set starting power
	setPowerLevel(pow1, enemy1)
	setPowerLevel(pow2, enemy2)
	addMessage(MissionBrief, MISS_MSG, 0, false)
	flashOff(INTELMAP)
	
	-- Blip Given at start
	addMessage(obj1, PROX_MSG, player, false)
	-- allow to build stuff
	setStructureLimits(powerGen, numPow, 0)
	setStructureLimits(oilDerrick, numExt, 0)
	setStructureLimits(research, numRes, 0)
	setStructureLimits(factory, numFac, 0)
	setStructureLimits(command, 0, player)
	enableStructure(command, player)
	enableStructure(powerGen, 0)
	enableStructure(oilDerrick, 0)
	enableStructure(research, 0)
	enableStructure(factory, 0)
	-- enableStructure(powerModuleHack, 0);
	-- give first topic for enemy
	-- completeResearch(tecE1[tecCount], enemy1);
	-- tecCount = tecCount + 1;
	-- set transport time
	setReinforcementTime(ReinforceTime/10.0)
	-- set up resource coords (since oil pools diappear when built on!!!)
	-- res1x=res1.x;
	-- res1y=res1.y;
	deactivateEvent(startEvnt)
end
callbackEvent(startEvnt, CALL_GAMEINIT)


-- Events:

-- Events: Artifacts
function art1TakeEvnt()
	numart = numart + 1
	brief2Flag = true
	-- playSound(art1Snd2, player);
	playSoundPos(art1Snd2, player, art1ID.x, art1ID.y, art1ID.z)
	destroyFeature(art1ID)
	removeMessage(obj1, PROX_MSG, player)
	-- removeMessage(art1Msg, PROX_MSG, player);
	enableResearch(art1Comp, player)
	deactivateEvent(art1TakeEvnt)
end

function art1PlaceEvnt()
	art1ID = addFeature(crate, art1X, art1Y)
	-- setEventTrigger(art1SeenEvnt, art1SeenTrig);
	conditionalEvent(art1TakeEvnt, "droidInRange(player, art1X, art1Y, 200)", 0.5)
	deactivateEvent(art1PlaceEvnt)
end
conditionalEvent(art1PlaceEvnt, "(destroyed(art1Get))", 0.5)

function art2TakeEvnt()
	numart = numart + 1
	-- playSound(art2Snd2, player);
	playSoundPos(art2Snd2, player, art2ID.x, art2ID.y, art2ID.z)
	destroyFeature(art2ID)
	-- removeMessage(art2Msg, PROX_MSG, player);
	enableResearch(art2Comp, player)
	deactivateEvent(art2TakeEvnt)
end

function art2PlaceEvnt()
	art2ID = addFeature(crate, art2X, art2Y)
	-- setEventTrigger(art2SeenEvnt, art2SeenTrig);
	conditionalEvent(art2TakeEvnt, "droidInRange(player, art2X, art2Y, 200)", 0.5)
	deactivateEvent(art2PlaceEvnt)
end
conditionalEvent(art2PlaceEvnt, "(destroyed(art2Get))", 0.5)


-- Events: Enemies
function enm1DeadEvnt()
	killStructsInArea(enemy1, REF_WALL, 3136, 1728, 5440, 2624, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy1, REF_WALLCORNER, 3136, 1728, 5440, 2624, true, false)
	removeMessage(enm1Msg, PROX_MSG, player)
	-- playSound(enm1Snd2, player);
	playSoundPos(enm1Snd2, player, 4160, 2112, 0)
	deactivateEvent(enm1DeadEvnt)
end

function enm1SeenEvnt()
	brief2Flag = true
	pause(20/10.0)
	addMessage(enm1Msg, PROX_MSG, player, false)
	-- playSound(enm1Snd1, player);
	playSoundPos(enm1Snd1, player, 4160, 2112, 0)
	conditionalEvent(enm1DeadEvnt, "numStructsButNotWallsInArea(enemy1, 3136, 1728, 5440, 2624) == 0", 2.0)
	deactivateEvent(enm1SeenEvnt)
end
conditionalEvent(enm1SeenEvnt, "seenStructInArea(player, enemy1, false, 3136, 1728, 5440, 2624)", 1.0)

function enm2DeadEvnt()
	killStructsInArea(enemy2, REF_WALL, 1600, 6464, 2368, 7232, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy2, REF_WALLCORNER, 1600, 6464, 2368, 7232, true, false)
	removeMessage(enm2Msg, PROX_MSG, player)
	-- playSound(enm2Snd2, player);
	playSoundPos(enm2Snd2, player, 1984, 7000, 0)
	deactivateEvent(enm2DeadEvnt)
end

-- base 2 seen
function enm2SeenEvnt()
	addMessage(enm2Msg, PROX_MSG, player, false)
	-- playSound(enm2Snd1, player);
	playSoundPos(enm2Snd1, player, 1984, 7000, 0)
	conditionalEvent(enm2DeadEvnt, "numStructsButNotWallsInArea(enemy1, 1600, 6464, 2368, 7232) == 0", 2.0)
	deactivateEvent(enm2SeenEvnt)
end
conditionalEvent(enm2SeenEvnt, "seenStructInArea(player, enemy1, false, 1600, 6464, 2368, 7232)", 1.0)


function brief2Evnt()
	playSound(incomingSnd, player)
	pause(20/10.0)
	addMessage(MissionBrief2, MISS_MSG, 0, true)
	deactivateEvent(brief2Evnt)
end
conditionalEvent(brief2Evnt, "brief2Flag", 1.5)

function giveLZmess()
	addMessage(LZ_MSG, PROX_MSG, player, false)
	
	delayedEvent(periodicRTLZ, 0.0)
	-- addConsoleText(_("Return to LZ"), player);
	-- playSound(LZSnd, player);
	-- playSoundPos(LZSnd, player, 6848, 7104, 0);
	deactivateEvent(giveLZmess)
end
conditionalEvent(giveLZmess, "numart == 2", 2.0)

function periodicRTLZ()
	showConsoleText(_("Return to LZ"), player)
	playSoundPos(LZSnd, player, 6848, 7104, 0)
	repeatingEvent(periodicRTLZ, 30.0)
end


-- event wonYetEvnt;

-- Events: Win or Lose

-- assumes victory already checked
function nextLevEvnt()
	pause(20/10.0)
	-- give bonus research (if req'd)
	count = 0
	while count < numResP0 do
		enableResearch(resP0[count], 0)
		count = count + 1
	end
	
	-- flag next part of map
	C.gameLevel = C.gameLevel + 1
	setLandingZone(10, 51, 12, 53)
	-- enable research
	enableResearch(art1Comp, player)
	enableResearch(art2Comp, player)
	-- removeMessage(MissionBrief, MISS_MSG, player);
	startMission(BETWEEN, NextLev)
	-- End game here for now! (don't try next mission)
	-- addMessage(winMsg, MISS_MSG, 0, true);
	-- pause(10);
	-- gameOver(true);
	
	deactivateEvent(nextLevEvnt)
end

function gameLost()
	gameOverMessage(endMsg, MISS_MSG, 0, false)
	deactivateEvent(gameLost)
end

function lostYetEvnt()
	if not anyDroidsLeft(player) then
		if not anyStructButWallsLeft(player) then
			deactivateEvent(wonYetLZEvnt)
			deactivateEvent(timeUp)
			-- waits 2 seconds before ending
			repeatingEvent(gameLost, 2.0)
			deactivateEvent(lostYetEvnt)
		end
	end
end
repeatingEvent(lostYetEvnt, 0.5)


-- out of time?
function timeUp()
	deactivateEvent(wonYetLZEvnt)
	deactivateEvent(lostYetEvnt)
	-- waits 2 seconds before ending
	repeatingEvent(gameLost, 2.0)
	deactivateEvent(timeUp)
end
callbackEvent(timeUp, CALL_MISSION_TIME)


-- alternate victory condition, got artifact(s) and back at LZ
function wonYetLZEvnt()
	totDroids = numDroidsInArea(player, 0, 0, 64 * 128, 64 * 128)
	if totDroids == numDroidsInArea(player, 6080, 6464, 8192, 8192) then
		if totDroids ~= 0 then
			if numart == 2 then
				deactivateEvent(lostYetEvnt)
				deactivateEvent(timeUp)
				repeatingEvent(nextLevEvnt, 0.5)
				-- setEventTrigger(wonYetEvnt, inactive);
				deactivateEvent(wonYetLZEvnt)
			end
		end
	end
end
repeatingEvent(wonYetLZEvnt, 0.5)

-- cheat button ctrl M
function cheatEvnt()
	repeatingEvent(nextLevEvnt, 0.5)
	deactivateEvent(cheatEvnt)
end
callbackEvent(cheatEvnt, CALL_MISSION_START)

-- Base Under Attack
function baseHit(_hitStruc, _attackerObj)
	if _hitStruc.player ~= C.selectedPlayer then return end
	hitStruc, attackerObj = _hitStruc, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if t >= 20 then
		t = 0
		if hitStruc ~= nil then
			playSoundPos(attackSnd1, C.selectedPlayer, hitStruc.x, hitStruc.y, hitStruc.z)
		else
			playSound(attackSnd1, C.selectedPlayer)
		end
	end
end
callbackEvent(baseHit, CALL_STRUCT_ATTACKED)

function everySec()
	t = t + 1
end
repeatingEvent(everySec, 1.0)

function seeBaseHit()
	if hitStruc ~= nil then
		centreView(hitStruc)
		-- flag known about!
		t = 0
	end
end
callbackEvent(seeBaseHit, CALL_MISSION_END)

function LZNoGo()
	if not transOnMap then
		playSoundPos(LZComp, player, 6848, 7104, 0)
		-- disable transport landing
		-- (set to 30 mins)
		setReinforcementTime(LZ_COMPROMISED_TIME/10.0)
		-- allow check for clear!
		conditionalEvent(LZ_OK, "(not objectInArea(enemy1, 6000, 7000, 7000, 8000))", 3.5)
		deactivateEvent(LZNoGo)
	end
end
conditionalEvent(LZNoGo, "(objectInArea(enemy1, 6000, 7000, 7000, 8000))", 3.5)

function LZ_OK()
	playSoundPos(LZClear, player, 6848, 7104, 0)
	-- allow reinforcements now LZ clear
	-- (set back to normal)
	setReinforcementTime(ReinforceTime/10.0)
	conditionalEvent(LZNoGo, "(objectInArea(enemy1, 6000, 7000, 7000, 8000))", 3.5)
	deactivateEvent(LZ_OK)
end


function transOn()
	transOnMap = true
end
callbackEvent(transOn, CALL_TRANSPORTER_REINFORCE)

function transOff(_player)
	if _player ~= player then return end
	transOnMap = false
end
callbackEvent(transOff, CALL_TRANSPORTER_OFFMAP)


---------- stubs ----------

if _ == nil then _ = function() print("stub: _"); return 0 end end
if gameOverMessage == nil then gameOverMessage = function() print("stub: gameOverMessage"); return 0 end end
if centreView == nil then centreView = function() print("stub: centreView"); return 0 end end
if anyStructButWallsLeft == nil then anyStructButWallsLeft = function() print("stub: anyStructButWallsLeft"); return 0 end end
if enableResearch == nil then enableResearch = function() print("stub: enableResearch"); return 0 end end
if numStructsButNotWallsInArea == nil then numStructsButNotWallsInArea = function() print("stub: numStructsButNotWallsInArea"); return 0 end end
if playSoundPos == nil then playSoundPos = function() print("stub: playSoundPos"); return 0 end end
if flashOff == nil then flashOff = function() print("stub: flashOff"); return 0 end end
if addFeature == nil then addFeature = function() print("stub: addFeature"); return 0 end end
if anyDroidsLeft == nil then anyDroidsLeft = function() print("stub: anyDroidsLeft"); return 0 end end
if droidInRange == nil then droidInRange = function() print("stub: droidInRange"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if removeMessage == nil then removeMessage = function() print("stub: removeMessage"); return 0 end end
if destroyFeature == nil then destroyFeature = function() print("stub: destroyFeature"); return 0 end end
if destroyed == nil then destroyed = function() print("stub: destroyed"); return 0 end end
if setReinforcementTime == nil then setReinforcementTime = function() print("stub: setReinforcementTime"); return 0 end end
if setStructureLimits == nil then setStructureLimits = function() print("stub: setStructureLimits"); return 0 end end
if setPowerLevel == nil then setPowerLevel = function() print("stub: setPowerLevel"); return 0 end end
if setLandingZone == nil then setLandingZone = function() print("stub: setLandingZone"); return 0 end end
if showConsoleText == nil then showConsoleText = function() print("stub: showConsoleText"); return 0 end end
if objectInArea == nil then objectInArea = function() print("stub: objectInArea"); return 0 end end
if killStructsInArea == nil then killStructsInArea = function() print("stub: killStructsInArea"); return 0 end end
if numDroidsInArea == nil then numDroidsInArea = function() print("stub: numDroidsInArea"); return 0 end end
if startMission == nil then startMission = function() print("stub: startMission"); return 0 end end
if pause == nil then pause = function() print("stub: pause"); return 0 end end
if setTransporterExit == nil then setTransporterExit = function() print("stub: setTransporterExit"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
if flyTransporterIn == nil then flyTransporterIn = function() print("stub: flyTransporterIn"); return 0 end end
if seenStructInArea == nil then seenStructInArea = function() print("stub: seenStructInArea"); return 0 end end
if addMessage == nil then addMessage = function() print("stub: addMessage"); return 0 end end
if setRadarZoom == nil then setRadarZoom = function() print("stub: setRadarZoom"); return 0 end end
if enableStructure == nil then enableStructure = function() print("stub: enableStructure"); return 0 end end
if centreViewPos == nil then centreViewPos = function() print("stub: centreViewPos"); return 0 end end
