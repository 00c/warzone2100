-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
enemy1Fin = Group()
enemy1Force1 = Group()
enemy1Force2 = Group()
enemy1Guard = Group()
enemy1Rear1 = Group()
enemy1Rear2 = Group()

-- temporary variables
newDroid = nil
moveX = 0
moveY = 0
xdiff = 0
ydiff = 0
-- default leadership for enemy2
ld = 0
atk1X = 0
atk1Y = 0
playerX1 = 0
playerY1 = 0
playerX2 = 0
playerY2 = 0
playerForce1 = Group()
playerForce2 = Group()
hitDroid = nil
attackerObj = nil

-- values for build lists start here
-- General Values

-- Enemy Tactics

-- enemy1
-- no factories!

-- stuff for tracking player
count = 0
count2 = 0

-- 5 mins
-- slowed since ordering every time

function startup()
	ld = 75
	-- make up starting forces
	-- east ambush at base
	groupAddArea(enemy1Force1, enemy1, 2624, 1088, 4160, 2496)
	-- sw of base on ridge
	groupAddArea(enemy1Force1, enemy1, 704, 4288, 1472, 5184)
	-- setGroupSecondary(enemy1Force1, DSO_ATTACK_LEVEL, DSS_ALEV_ATTACKED);	//return fire only
	-- don't bother with hold until cancelling Hold works!!! (John needs to fix)
	-- setGroupSecondary(enemy1Force1, DSO_HALTTYPE, DSS_HALT_HOLD);		//hold position
	-- to west of base on hill
	groupAddArea(enemy1Force2, enemy1, 448, 1088, 960, 1728)
	orderGroupLoc(enemy1Force2, DORDER_SCOUT, 1600, 2624)
	-- groupAddArea(enemy1Guard, enemy1, 1728, 1344, 2368, 1728);	//around artifact
	
	-- rear 2 (trikes and buggies)
	groupAddArea(enemy1Rear2, enemy1, 3904, 10944, 4288, 11328)
	
	-- orderGroupLoc(enemy1Guard, DORDER_SCOUT, 2212, 1600);
	-- set retreat point?
	-- retreat to base
	setRetreatPoint(enemy1, enm1Ret1X, enm1Ret1Y)
	-- set morale to 25%
	setRetreatForce(enemy1, 75)
	-- set leadership chance (small=more likely?)
	setRetreatLeadership(enemy1, 50)
end
callbackEvent(startup, CALL_GAMEINIT)


-- Enemy force movements

function enemy1Atk1()
	orderGroupLoc(enemy1Rear2, DORDER_SCOUT, playerX1, playerY1)
	-- once triggered keep updating
	repeatingEvent(enemy1Atk1, 4.0)
end
conditionalEvent(enemy1Atk1, "(droidInRange(0, 2496, 7460, 5 * 128))", 1.0)


--[[event enemy1Atk2(baseAttackTrig)
{

	//orderGroupLoc(enemy1Force1, DORDER_SCOUT, playerX1, playerY1);
	setEventTrigger(enemy1Atk2, every10);	//once triggered keep updating
}]]--

function enemy1Atk3()
	orderGroupLoc(enemy1Force2, DORDER_SCOUT, playerX1, playerY1)
	-- once triggered keep updating
	repeatingEvent(enemy1Atk3, 4.0)
end
conditionalEvent(enemy1Atk3, "(droidInRange(0, 832, 7488, 6 * 128))", 1.0)


-- new version that doesn't use groups!!! (uses grid instead!)
-- event trackPlayer(every, 15) - slow it down AB 2/12/98
function trackPlayer()
	count = 0
	
	-- look across the height of the map
	while count < 93 * 128 do
		count2 = 0
		-- look across the width of the map
		while count2 < 44 * 128 do
			if numDroidsInArea(player, count2, count, count2 + (22 * 128), count + (31 * 128)) > 0 then
				playerX1 = count2 + (11 * 128)
				playerY1 = count + (15 * 128)
				-- set count values to quit loop
				count = 93 * 128
				count2 = 44 * 128
			end
			-- loop to next x value
			count2 = count2 + (22 * 128)
		end
		-- loop to next y value
		count = count + (31 * 128)
	end
end
repeatingEvent(trackPlayer, 3.0)


-- remove hold orders if hit!
function letGo(_hitDroid, _attackerObj)
	if _hitDroid.player ~= enemy1 then return end
	hitDroid, attackerObj = _hitDroid, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if hitDroid ~= nil then
		if groupMember(enemy1Force1, hitDroid) then
			setGroupSecondary(enemy1Force1, DSO_ATTACK_LEVEL, DSS_ALEV_ALWAYS)
		else
			setDroidSecondary(hitDroid, DSO_ATTACK_LEVEL, DSS_ALEV_ALWAYS)
			setDroidSecondary(hitDroid, DSO_HALTTYPE, DSS_HALT_GUARD)
		end
	end
end
callbackEvent(letGo, CALL_DROID_ATTACKED)


---------- stubs ----------

if orderGroupLoc == nil then orderGroupLoc = function() print("stub: orderGroupLoc"); return 0 end end
if groupMember == nil then groupMember = function() print("stub: groupMember"); return 0 end end
if droidInRange == nil then droidInRange = function() print("stub: droidInRange"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if setDroidSecondary == nil then setDroidSecondary = function() print("stub: setDroidSecondary"); return 0 end end
if setGroupSecondary == nil then setGroupSecondary = function() print("stub: setGroupSecondary"); return 0 end end
if numDroidsInArea == nil then numDroidsInArea = function() print("stub: numDroidsInArea"); return 0 end end
if setRetreatForce == nil then setRetreatForce = function() print("stub: setRetreatForce"); return 0 end end
if setRetreatLeadership == nil then setRetreatLeadership = function() print("stub: setRetreatLeadership"); return 0 end end
if groupAddArea == nil then groupAddArea = function() print("stub: groupAddArea"); return 0 end end
if setRetreatPoint == nil then setRetreatPoint = function() print("stub: setRetreatPoint"); return 0 end end
