-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
numart = 0

-- structure limit stuff
-- public	STRUCTURESTAT		powerModuleHack;

newDroidFactory = nil

-- Win or lose
allPlayer = Group()
nearLZ = Group()
totDroids = 0

-- Base Under Attack Stuff
hitStruc = nil
attackerObj = nil
t = 0

-- Transport Entry/Exit coords

-- Briefing stuff
-- public		INTMESSAGE		NewParadigm_MSG1, NewParadigm_MSG2;
-- , winMsg;

-- LZ Message
playerTransOnMap = false


-- Proximity: Artifacts

--[[public		int		art1X, art1Y;
public		STRUCTURE	art1Get;
public		SOUND		art1Snd2;
public		RESEARCHSTAT	art1Comp;
private		FEATURE		art1ID;]]--

art2ID = nil

art3ID = nil

art4ID = nil

-- player Bonus Research topics given at end of mission
-- need to be declared with value >= numResP0, numResP1, etc.
count = 0

-- Proximity: Enemy





-- AI STUFF

-- enemy1 variables
enemy1Build = Group()
enemy1Attack = Group()
enemy1Start = Group()
enemy1Fin = Group()
enemy1Force1 = Group()
enemy1Force2 = Group()
enemy2Build = Group()
enemy2Attack = Group()
enemy2Start = Group()
enemy2Fin = Group()
enemy1Guard = Group()
enemy2Guard = Group()
Strike1 = Group()
Ambush1 = Group()
Reserve1 = Group()
Scav1 = Group()
Scav2 = Group()
Scav3 = Group()

tempx1 = 0
tempx2 = 0
tempy1 = 0
tempy2 = 0
-- for keeping track of casualties
AmbushTot = 0
Scav2Health = 0

attackedStruct = nil
attacker = nil
attackX = 0
attackY = 0

-- temporary variables
newDroid = nil
moveX = 0
moveY = 0
xdiff = 0
ydiff = 0
-- default leadership for enemy2
ld = 0

-- values for build lists start here
-- General Values
-- limit build to this number
-- limit build to this number

-- Enemy Tactics

-- enemy1
enm1aState = 0
enm1bState = 0
enm1aDestroyed = false
enm1bDestroyed = false

-- enemy2
enm2aState = 0
enm2bState = 0
enm2cState = 0
enm2dState = 0
enm2aDestroyed = false
enm2bDestroyed = false
enm2cDestroyed = false
enm2dDestroyed = false

-- Values for build Commands
comTruck1 = 0
comTruck2 = 0
comTruck3 = 0
-- used to calc closest repair truck!
dist1 = 0
dist2 = 0
dist3 = 0

-- Structures to be built

-- Starting Technology


function startEvnt()
	centreViewPos(576, 6592)
	-- make scavengers and New paradigm allies (just in case!)
	createAlliance(enemy1, enemy2)
	-- set scroll limits
	-- setScrollParams(0, 0, 64, 64);			//limit scroll
	-- set zoom Level 64x64
	setRadarZoom(1)
	-- stop player building on LZ#1
	-- set landing zone
	setLandingZone(3, 50, 5, 52)
	-- call in transport
	flyTransporterIn(player, entryX, entryY, false)
	setTransporterExit(player, exitX, exitY)
	-- so enemies attack LZ
	attackX = 512
	attackY = 6528
	-- removeReticuleButton(BUILD);
	-- set up resource coords (since oil pools diappear when built on!!!)
	-- res1x=res1.x;
	-- res1y=res1.y;
	setPowerLevel(pow1, enemy1)
	setPowerLevel(pow2, enemy2)
	-- no reinforcements yet!!
	setReinforcementTime(-1/10.0)
	-- changed so give LZ when base spotted! Rather than at start
	-- addMessage(LZ_MSG, PROX_MSG, player, false);
	-- addConsoleText(_("Return to LZ"), player);
	-- playSound(LZSnd, player);
	-- Blip Given at start
	addMessage(obj1, PROX_MSG, player, false)
	-- allow to build stuff
	setStructureLimits(powerGen, numPow, 0)
	setStructureLimits(oilDerrick, numExt, 0)
	setStructureLimits(research, numRes, 0)
	setStructureLimits(factory, numFac, 0)
	setStructureLimits(command, 0, player)
	setStructureLimits(comRelay, 0, player)
	enableStructure(command, player)
	enableStructure(powerGen, 0)
	enableStructure(oilDerrick, 0)
	enableStructure(research, 0)
	enableStructure(factory, 0)
	-- enableStructure(powerModuleHack, 0);
	-- set up initial attack force for NP
	groupAddArea(enemy2Attack, enemy2, 3264, 3008, 3648, 3264)
	groupAddArea(enemy2Attack, enemy2, 3392, 2112, 3776, 2624)
	-- player specific technology startups
	count = 0
	while count < numtecE1 do
		completeResearch(tecE1[count], enemy1)
		count = count + 1
	end
	count = 0
	while count < numtecE2 do
		completeResearch(tecE2[count], enemy2)
		count = count + 1
	end
	
	deactivateEvent(startEvnt)
	addMessage(MissionBrief, MISS_MSG, 0, false)
	flashOff(INTELMAP)
end
callbackEvent(startEvnt, CALL_GAMEINIT)


function art2TakeEvnt()
	numart = numart + 1
	-- playSound(art2Snd2, player);
	playSoundPos(art2Snd2, player, art2ID.x, art2ID.y, art2ID.z)
	destroyFeature(art2ID)
	enableResearch(art2Comp, player)
	deactivateEvent(art2TakeEvnt)
end

function art2PlaceEvnt()
	art2ID = addFeature(crate, art2X, art2Y)
	conditionalEvent(art2TakeEvnt, "droidInRange(player, art2X, art2Y, 171)", 0.5)
	deactivateEvent(art2PlaceEvnt)
end
conditionalEvent(art2PlaceEvnt, "(destroyed(art2Get))", 0.5)

function art3TakeEvnt()
	numart = numart + 1
	-- playSound(art3Snd2, player);
	playSoundPos(art3Snd2, player, art3ID.x, art3ID.y, art3ID.z)
	destroyFeature(art3ID)
	enableResearch(art3Comp, player)
	deactivateEvent(art3TakeEvnt)
end

function art3PlaceEvnt()
	art3ID = addFeature(crate, art3X, art3Y)
	conditionalEvent(art3TakeEvnt, "droidInRange(player, art3X, art3Y, 171)", 0.5)
	deactivateEvent(art3PlaceEvnt)
end
conditionalEvent(art3PlaceEvnt, "(destroyed(art3Get))", 0.5)

function art4TakeEvnt()
	numart = numart + 1
	-- playSound(art4Snd2, player);
	playSoundPos(art4Snd2, player, art4ID.x, art4ID.y, art4ID.z)
	destroyFeature(art4ID)
	enableResearch(art4Comp, player)
	deactivateEvent(art4TakeEvnt)
end

function art4PlaceEvnt()
	art4ID = addFeature(crate, art4X, art4Y)
	conditionalEvent(art4TakeEvnt, "droidInRange(player, art4X, art4Y, 171)", 0.5)
	deactivateEvent(art4PlaceEvnt)
end
conditionalEvent(art4PlaceEvnt, "(destroyed(art4Get))", 0.5)

-- Events: Enemies
function enm1DeadEvnt()
	killStructsInArea(enemy1, REF_WALL, 1600, 6464, 3776, 7872, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy1, REF_WALLCORNER, 1600, 6464, 3776, 7872, true, false)
	removeMessage(enm1Msg, PROX_MSG, player)
	-- playSound(enm1Snd2, player);
	playSoundPos(enm1Snd2, player, 2624, 7488, 0)
	deactivateEvent(enm1DeadEvnt)
end

function enm1SeenEvnt()
	addMessage(enm1Msg, PROX_MSG, player, false)
	-- playSound(enm1Snd1, player);
	playSoundPos(enm1Snd1, player, 2624, 7488, 0)
	conditionalEvent(enm1DeadEvnt, "numStructsButNotWallsInArea(enemy1, 1600, 6464, 3776, 7872) == 0", 2.0)
	deactivateEvent(enm1SeenEvnt)
end
conditionalEvent(enm1SeenEvnt, "seenStructInArea(player, enemy1, false, 1600, 6464, 3776, 7872)", 1.0)

function enm3DeadEvnt()
	killStructsInArea(enemy1, REF_WALL, 5696, 1472, 7872, 3264, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy1, REF_WALLCORNER, 5696, 1472, 7872, 3264, true, false)
	removeMessage(enm3Msg, PROX_MSG, player)
	-- playSound(enm3Snd2, player);
	playSoundPos(enm3Snd2, player, 7104, 2496, 0)
	deactivateEvent(enm3DeadEvnt)
end

-- hidden Scav base!
function enm3SeenEvnt()
	addMessage(enm3Msg, PROX_MSG, player, false)
	-- playSound(enm3Snd1, player);
	playSoundPos(enm3Snd1, player, 7104, 2496, 0)
	conditionalEvent(enm3DeadEvnt, "numStructsButNotWallsInArea(enemy1, 5696, 1472, 7872, 3264) == 0", 2.0)
	deactivateEvent(enm3SeenEvnt)
end
conditionalEvent(enm3SeenEvnt, "seenStructInArea(player, enemy1, false, 5696, 1472, 7872, 3264)", 1.0)

function enm2DeadEvnt()
	killStructsInArea(enemy2, REF_WALL, 2368, 960, 5952, 4416, true, true)
	-- remove corner walls in base
	killStructsInArea(enemy2, REF_WALLCORNER, 2368, 960, 5952, 4416, true, false)
	removeMessage(enm2Msg, PROX_MSG, player)
	-- playSound(enm2Snd2, player);
	playSoundPos(enm2Snd2, player, 3648, 2240, 0)
	deactivateEvent(enm2DeadEvnt)
end

-- base 2 seen
function enm2SeenEvnt()
	addMessage(enm2Msg, PROX_MSG, player, false)
	-- playSound(enm2Snd1, player);
	playSoundPos(enm2Snd1, player, 3648, 2240, 0)
	-- give LZ when base spotted!
	addMessage(LZ_MSG, PROX_MSG, player, false)
	-- addConsoleText(_("Return to LZ"), player);
	-- playSound(LZSnd, player);
	-- playSoundPos(LZSnd, player, 7488, 4672, 0);
	
	-- set enemy factories producing!!!
	repeatingEvent(enm1aFactEvnt, 35.0)
	repeatingEvent(enm1bFactEvnt, 35.0)
	repeatingEvent(enm2aFactEvnt, 40.0)
	repeatingEvent(enm2bFactEvnt, 40.0)
	-- so enemies don't go all the way to 1st LZ
	attackX = 4032
	attackY = 4032
	conditionalEvent(reachedLZEvnt, "droidInArea(player, 7232, 4416, 7744, 4928)", 1.0)
	conditionalEvent(enm2DeadEvnt, "numStructsButNotWallsInArea(enemy2, 2368, 960, 5952, 4416) == 0", 2.0)
	deactivateEvent(enm2SeenEvnt)
end
conditionalEvent(enm2SeenEvnt, "seenStructInArea(player, enemy2, false, 2368, 960, 5952, 4416)", 1.0)


-- Events: Win or Lose

-- assumes victory already checked
function nextLevEvnt()
	pause(20/10.0)
	-- give bonus research (if req'd)
	count = 0
	while count < numResP0 do
		enableResearch(resP0[count], 0)
		count = count + 1
	end
	
	-- flag next part of map
	C.gameLevel = C.gameLevel + 1
	-- setLandingZone(10, 51, 12, 53);
	-- enable research
	-- enableResearch(art1Comp, player);
	enableResearch(art2Comp, player)
	enableResearch(art3Comp, player)
	enableResearch(art4Comp, player)
	-- removeMessage(MissionBrief, MISS_MSG, player);
	startMission(BETWEEN, NextLev)
	-- End game here for now! (don't try next mission)
	-- gameOver(true);
	
	deactivateEvent(nextLevEvnt)
end

function gameLost()
	gameOverMessage(endMsg, MISS_MSG, 0, false)
	deactivateEvent(gameLost)
end

function lostYetEvnt()
	if not anyDroidsLeft(player) then
		if not anyStructButWallsLeft(player) then
			deactivateEvent(wonYetEvnt)
			-- setEventTrigger(wonYetLZEvnt, inactive);
			deactivateEvent(timeUp)
			-- waits 2 seconds before ending
			repeatingEvent(gameLost, 2.0)
			deactivateEvent(lostYetEvnt)
		end
	end
end
repeatingEvent(lostYetEvnt, 0.5)


-- out of time?
function timeUp()
	deactivateEvent(wonYetEvnt)
	-- setEventTrigger(wonYetLZEvnt, inactive);
	deactivateEvent(lostYetEvnt)
	-- waits 2 seconds before ending
	repeatingEvent(gameLost, 2.0)
	deactivateEvent(timeUp)
end
callbackEvent(timeUp, CALL_MISSION_TIME)

-- has player got to LZ (once enemy NP dead and collected all the artifacts?)
function wonYetEvnt()
	totDroids = numDroidsInArea(player, 0, 0, 64 * 128, 64 * 128)
	-- if (totDroids == numDroidsInArea(player, 6720, 3776, 7872, 5312))
	-- area increased a bit by popular demand!
	if totDroids == numDroidsInArea(player, 6592, 3392, 8192, 5568) then
		if totDroids ~= 0 then
			deactivateEvent(lostYetEvnt)
			deactivateEvent(timeUp)
			repeatingEvent(nextLevEvnt, 0.5)
			deactivateEvent(wonYetEvnt)
		end
	end
end

-- get player to return to LZ when NP and artifacts done
-- checks for all artifacts
function retLZ()
	if not anyDroidsLeft(enemy2) then
		if not anyStructButWallsLeft(enemy2) then
			addMessage(LZ_MSG, PROX_MSG, player, false)
			-- addConsoleText(_("Return to LZ"), player);
			-- playSound(LZSnd, player);
			delayedEvent(periodicRTLZ, 0.0)
			deactivateEvent(retLZ)
			repeatingEvent(wonYetEvnt, 0.5)
		end
	end
end

function periodicRTLZ()
	showConsoleText(_("Return to LZ"), player)
	playSound(LZSnd, player)
	repeatingEvent(periodicRTLZ, 30.0)
end

-- check player has at least one droid in LZ, before allowing reinforcements
function reachedLZEvnt()
	setLandingZone(57, 35, 59, 37)
	-- so enemies attack LZ
	attackX = 7424
	attackY = 4608
	
	removeMessage(LZ_MSG, PROX_MSG, player)
	playSound(incomingSnd, 0)
	pause(40/10.0)
	addMessage(MissionBrief2, MISS_MSG, 0, true)
	-- add extra Mission time limit
	timeLimit = timeLimit + missionTimeRemaining()
	setMissionTime(timeLimit/10.0)
	-- allow reinforce function to go here
	setReinforcementTime(ReinforceTime/10.0)
	-- addConsoleText(_("Reinforcements are now available"), player);
	deactivateEvent(reachedLZEvnt)
	-- set enemy factories producing!!!
	repeatingEvent(enm1aFactEvnt, 35.0)
	repeatingEvent(enm1bFactEvnt, 35.0)
	repeatingEvent(enm2aFactEvnt, 40.0)
	repeatingEvent(enm2bFactEvnt, 40.0)
	-- allow LZ checks
	conditionalEvent(LZNoGo, "(objectInArea(enemy1, 6656, 3840, 8192, 5376)) or (objectInArea(enemy2, 6656, 3840, 8192, 5376))", 3.5)
	-- allow victory checks
	conditionalEvent(retLZ, "numart == 3", 2.4)
end

-- cheat button ctrl M
function cheatEvnt()
	repeatingEvent(nextLevEvnt, 0.5)
	deactivateEvent(cheatEvnt)
end
callbackEvent(cheatEvnt, CALL_MISSION_START)

-- Base Under Attack
function baseHit(_hitStruc, _attackerObj)
	if _hitStruc.player ~= C.selectedPlayer then return end
	hitStruc, attackerObj = _hitStruc, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if t >= 20 then
		t = 0
		if hitStruc ~= nil then
			playSoundPos(attackSnd1, C.selectedPlayer, hitStruc.x, hitStruc.y, hitStruc.z)
		else
			playSound(attackSnd1, C.selectedPlayer)
		end
	end
end
callbackEvent(baseHit, CALL_STRUCT_ATTACKED)

function everySec()
	t = t + 1
end
repeatingEvent(everySec, 1.0)

function seeBaseHit()
	if hitStruc ~= nil then
		centreView(hitStruc)
		-- flag known about!
		t = 0
	end
end
callbackEvent(seeBaseHit, CALL_MISSION_END)

function removeObj1()
	removeMessage(obj1, PROX_MSG, player)
	deactivateEvent(removeObj1)
end
conditionalEvent(removeObj1, "droidInRange(player, 4160, 3904, 5 * 128)", 2.0)


-- AI EVENTS

-- event prototypes
-- event enemy1AttackBase;

function startup()
	setAssemblyPoint(enm1a, 2624, 6848)
	setAssemblyPoint(enm1b, 6720, 1728)
	setAssemblyPoint(enm2a, 3648, 2368)
	setAssemblyPoint(enm2b, 4032, 1984)
	
	-- make scavengers allies with NP
	createAlliance(enemy1, enemy2)
end
callbackEvent(startup, CALL_GAMEINIT)

-- make up starting forces

-- set up Scavenger forces



-- deal with a droid being built by enemy2
function enemy1build(_newDroid, _newDroidFactory)
	if _newDroid.player ~= enemy1 then return end
	newDroid, newDroidFactory = _newDroid, _newDroidFactory -- wz2lua: probably these can be used as function arguments directly
	groupAddDroid(enemy1Build, newDroid)
	if groupCountMembers(enemy1Build) >= 4 then
		groupAddGroup(enemy1Attack, enemy1Build)
		-- do attack force decision here!
		orderGroupLoc(enemy1Attack, DORDER_SCOUT, attackX, attackY)
	end
end
callbackEvent(enemy1build, CALL_NEWDROID)

-- deal with a droid being built by enemy2
function enemy2build(_newDroid, _newDroidFactory)
	if _newDroid.player ~= enemy2 then return end
	newDroid, newDroidFactory = _newDroid, _newDroidFactory -- wz2lua: probably these can be used as function arguments directly
	if (newDroid.droidType == DROID_CONSTRUCT) and (enemyTruck1 == nil) then
		enemyTruck1 = newDroid
		repeatingEvent(setBuild1, 3.0)
	else
		if (newDroid.droidType == DROID_CONSTRUCT) and (enemyTruck2 == nil) then
			enemyTruck2 = newDroid
			repeatingEvent(setBuild2, 3.0)
		else
			if (newDroid.droidType == DROID_CONSTRUCT) and (enemyTruck3 == nil) then
				enemyTruck3 = newDroid
				repeatingEvent(setBuild3, 3.0)
			else
				groupAddDroid(enemy2Build, newDroid)
				if groupCountMembers(enemy2Build) >= 4 then
					groupAddGroup(enemy2Attack, enemy2Build)
					-- do attack force decision here!
					orderGroupLoc(enemy2Attack, DORDER_SCOUT, attackX, attackY)
				end
			end
		end
	end
end
callbackEvent(enemy2build, CALL_NEWDROID)


-- events for build lists start here
-- Enemy 1 Scavengers
-- build list Scav South factory!
function enm1aFactEvnt()
	enm1aDestroyed = destroyed(enm1aID)
	if enm1aDestroyed then
		deactivateEvent(enm1aFactEvnt)
	else
		if structureIdle(enm1a) and (groupCountMembers(enemy1Build) + groupCountMembers(enemy1Attack)) < enemy1Tot then
			if enm1aState == 0 then
				buildDroid(template1[4], enm1a, enemy1, 1)
				enm1aState = 1
			else
				if enm1aState == 1 then
					buildDroid(template1[3], enm1a, enemy1, 1)
					enm1aState = 2
				else
					if enm1aState == 2 then
						buildDroid(template1[6], enm1a, enemy1, 1)
						enm1aState = 3
					else
						buildDroid(template1[1], enm1a, enemy1, 3)
						enm1aState = 0
					end
				end
			end
		end
	end
end

function enm1aStartEvnt()
	repeatingEvent(enm1aFactEvnt, 35.0)
	deactivateEvent(enm1aStartEvnt)
end
delayedEvent(enm1aStartEvnt, 10.0)

-- build list Scav north Factory
function enm1bFactEvnt()
	enm1bDestroyed = destroyed(enm1bID)
	if enm1bDestroyed then
		deactivateEvent(enm1bFactEvnt)
	else
		if structureIdle(enm1b) and (groupCountMembers(enemy1Build) + groupCountMembers(enemy1Attack)) < enemy1Tot then
			if enm1bState == 0 then
				buildDroid(template1[7], enm1b, enemy1, 1)
				enm1bState = 1
			else
				if enm1bState == 1 then
					buildDroid(template1[5], enm1b, enemy1, 1)
					enm1bState = 2
				else
					if enm1bState == 2 then
						buildDroid(template1[0], enm1b, enemy1, 3)
						enm1bState = 3
					else
						buildDroid(template1[2], enm1b, enemy1, 3)
						enm1bState = 0
					end
				end
			end
		end
	end
end

function enm1bStartEvnt()
	repeatingEvent(enm1bFactEvnt, 35.0)
	deactivateEvent(enm1bStartEvnt)
end
conditionalEvent(enm1bStartEvnt, "droidInRange(player, enm1b.x, enm1b.y, 10 * 128)", 2.0)

-- New paradigm Factories
-- build list NP Heavy factory!
function enm2aFactEvnt()
	enm2aDestroyed = destroyed(enm2aID)
	if enm2aDestroyed then
		deactivateEvent(enm2aFactEvnt)
	else
		if structureIdle(enm2a) and (groupCountMembers(enemy2Build) + groupCountMembers(enemy2Attack)) < enemy2Tot then
			if enm2aState == 0 then
				buildDroid(template2[5], enm2a, enemy2, 3)
				enm2aState = 1
			else
				if enm2aState == 1 then
					buildDroid(template2[2], enm2a, enemy2, 3)
					enm2aState = 2
				else
					if enm2aState == 2 then
						buildDroid(template2[4], enm2a, enemy2, 2)
						enm2aState = 0
					else
						if enm2aState == 3 then
							buildDroid(template2[9], enm2a, enemy2, 1)
							-- set back to normal build
							enm2aState = 0
						end
					end
				end
			end
		end
	end
end

-- start producing 1 minute after start of mission
function enm2aStartEvnt()
	repeatingEvent(enm2aFactEvnt, 40.0)
	deactivateEvent(enm2aStartEvnt)
end
delayedEvent(enm2aStartEvnt, 60.0)

-- build list NP Medium Factory
-- 0, 1 = produce Rocket Cyborg, chaingun cyborg
function enm2bFactEvnt()
	enm2bDestroyed = destroyed(enm2bID)
	if enm2bDestroyed then
		deactivateEvent(enm2bFactEvnt)
	else
		if structureIdle(enm2b) and (groupCountMembers(enemy2Build) + groupCountMembers(enemy2Attack)) < enemy2Tot then
			if enm2bState == 0 then
				buildDroid(template2[6], enm2b, enemy2, 3)
				enm2bState = 1
			else
				if enm2bState == 1 then
					buildDroid(template2[7], enm2b, enemy2, 3)
					enm2bState = 2
				else
					if enm2bState == 2 then
						buildDroid(template2[8], enm2b, enemy2, 3)
						enm2bState = 3
					else
						buildDroid(template2[3], enm2b, enemy2, 3)
						enm2bState = 0
					end
				end
			end
		end
	end
end

function enm2bStartEvnt()
	repeatingEvent(enm2bFactEvnt, 40.0)
	deactivateEvent(enm2bStartEvnt)
end
conditionalEvent(enm2bStartEvnt, "droidInRange(player, enm2b.x, enm2b.y, 10 * 128)", 2.0)

function lastAttack1()
	if not anyStructButWallsLeft(enemy1) then
		groupAddArea(enemy1Fin, enemy1, 0, 0, 64 * 64, 64 * 64)
		orderGroupLoc(enemy1Fin, DORDER_MOVE, playerX, playerY)
	end
end
repeatingEvent(lastAttack1, 5.0)
-- setEventTrigger(lastAttack1, inactive);

function lastAttack2()
	if not anyStructButWallsLeft(enemy2) then
		groupAddArea(enemy2Fin, enemy1, 0, 0, 64 * 64, 64 * 64)
		orderGroupLoc(enemy2Fin, DORDER_MOVE, playerX, playerY)
	end
end
repeatingEvent(lastAttack2, 5.0)


-- Generic-ish go investigate nearby structures if under attack!
function enm1Hit(_hitStruc, _attackerObj)
	if _hitStruc.player ~= enemy1 then return end
	hitStruc, attackerObj = _hitStruc, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if hitStruc ~= nil then
		tempx1 = 1 * 128
		-- empty the group first!
		groupAddGroup(enemy1Attack, enemy1Guard)
		while (groupCountMembers(enemy1Guard) < 4) and (tempx1 <= 1280) do
			groupAddArea(enemy1Guard, enemy1, hitStruc.x - tempx1, hitStruc.y - tempx1, hitStruc.x + tempx1, hitStruc.y + tempx1)
			tempx1 = tempx1 + 128
			-- hack to recalculate members in enemy1Guard!!!
			tempy1 = groupCountMembers(enemy1Attack)
		end
		if attackerObj ~= nil then
			orderGroupLoc(enemy1Guard, DORDER_SCOUT, attackerObj.x, attackerObj.y)
		else
			orderGroupLoc(enemy1Guard, DORDER_SCOUT, hitStruc.x, hitStruc.y)
		end
	end
end
callbackEvent(enm1Hit, CALL_STRUCT_ATTACKED)

function enm2Hit(_hitStruc, _attackerObj)
	if _hitStruc.player ~= enemy2 then return end
	hitStruc, attackerObj = _hitStruc, _attackerObj -- wz2lua: probably these can be used as function arguments directly
	if hitStruc ~= nil then
		tempx2 = 1 * 128
		-- groupAddGroup(enemy2Guard, enemy2Attack);	//empty the group first!
		-- don't empty for NP
		while (groupCountMembers(enemy2Guard) < 4) and (tempx2 <= 2000) do
			groupAddArea(enemy2Guard, enemy2, hitStruc.x - tempx2, hitStruc.y - tempx2, hitStruc.x + tempx2, hitStruc.y + tempx2)
			tempx2 = tempx2 + 128
			-- hack to recalculate members in enemy2Guard!!!
			tempy2 = groupCountMembers(enemy2Attack)
		end
		if attackerObj ~= nil then
			orderGroupLoc(enemy2Guard, DORDER_SCOUT, attackerObj.x, attackerObj.y)
		else
			orderGroupLoc(enemy2Guard, DORDER_SCOUT, hitStruc.x, hitStruc.y + 128)
		end
		
		-- then send a repair droid
		-- not dead
		if enemyTruck5 ~= nil then
			orderDroidObj(enemyTruck5, DORDER_REPAIR, hitStruc)
		else
			if enemyTruck4 ~= nil then
				orderDroidObj(enemyTruck4, DORDER_REPAIR, hitStruc)
			else
				if enemyTruck3 ~= nil then
					orderDroidObj(enemyTruck3, DORDER_REPAIR, hitStruc)
				else
					if enemyTruck2 ~= nil then
						orderDroidObj(enemyTruck2, DORDER_REPAIR, hitStruc)
					else
						if enemyTruck1 ~= nil then
							orderDroidObj(enemyTruck1, DORDER_REPAIR, hitStruc)
						end
					end
				end
			end
		end
	end
end
callbackEvent(enm2Hit, CALL_STRUCT_ATTACKED)




-- Construction lists

-- now with arrays!!!!

-- (res1SeenTrig)
function buildStruc1()
	if enemyTruck1 == nil then
		deactivateEvent(setBuild1)
		deactivateEvent(buildStruc1)
	else
		if comTruck1 < numStruc1 then
			orderDroidStatsLoc(enemyTruck1, DORDER_BUILD, struc1[comTruck1], struc1X[comTruck1], struc1Y[comTruck1])
		end
	end
	repeatingEvent(setBuild1, 3.0)
	deactivateEvent(buildStruc1)
end
conditionalEvent(buildStruc1, "seenStructInArea(player, enemy2, false, 2368, 960, 5952, 4416)", 1.0)

function setBuild1()
	if enemyTruck1 == nil then
		deactivateEvent(setBuild1)
		deactivateEvent(buildStruc1)
	else
		if enemyTruck1.order == DORDER_NONE then
			comTruck1 = comTruck1 + 1
			repeatingEvent(buildStruc1, 3.0)
			deactivateEvent(setBuild1)
		end
	end
	-- check if finished
	if comTruck1 >= numStruc1 then
		deactivateEvent(setBuild1)
		deactivateEvent(buildStruc1)
	end
end

-- res1SeenTrig)
function buildStruc2()
	if enemyTruck2 == nil then
		deactivateEvent(setBuild2)
		deactivateEvent(buildStruc2)
	else
		if comTruck2 < numStruc2 then
			orderDroidStatsLoc(enemyTruck2, DORDER_BUILD, struc2[comTruck2], struc2X[comTruck2], struc2Y[comTruck2])
		end
	end
	repeatingEvent(setBuild2, 3.0)
	deactivateEvent(buildStruc2)
end
conditionalEvent(buildStruc2, "seenStructInArea(player, enemy2, false, 2368, 960, 5952, 4416)", 1.0)

function setBuild2()
	if enemyTruck2 == nil then
		deactivateEvent(setBuild2)
		deactivateEvent(buildStruc2)
	else
		if enemyTruck2.order == DORDER_NONE then
			comTruck2 = comTruck2 + 1
			repeatingEvent(buildStruc2, 3.0)
			deactivateEvent(setBuild2)
		end
	end
	-- check if finished
	if comTruck2 >= numStruc2 then
		deactivateEvent(setBuild2)
		deactivateEvent(buildStruc2)
	end
end

-- (res1SeenTrig)
function buildStruc3()
	if enemyTruck3 == nil then
		deactivateEvent(setBuild3)
		deactivateEvent(buildStruc3)
	else
		if comTruck3 < numStruc3 then
			orderDroidStatsLoc(enemyTruck3, DORDER_BUILD, struc3[comTruck3], struc3X[comTruck3], struc3Y[comTruck3])
		end
	end
	repeatingEvent(setBuild3, 3.0)
	deactivateEvent(buildStruc3)
end
conditionalEvent(buildStruc3, "seenStructInArea(player, enemy2, false, 2368, 960, 5952, 4416)", 1.0)

function setBuild3()
	if enemyTruck3 == nil then
		deactivateEvent(setBuild3)
		deactivateEvent(buildStruc3)
	else
		if enemyTruck3.order == DORDER_NONE then
			comTruck3 = comTruck3 + 1
			repeatingEvent(buildStruc3, 3.0)
			deactivateEvent(setBuild3)
		end
	end
	-- check if finished
	if comTruck3 >= numStruc3 then
		deactivateEvent(setBuild3)
		deactivateEvent(buildStruc3)
	end
end


function LZNoGo()
	if not playerTransOnMap then
		playSoundPos(LZComp, player, 7424, 4608, 0)
		-- disable transport landing
		-- (set to 30 mins)
		setReinforcementTime(LZ_COMPROMISED_TIME/10.0)
		-- allow check for clear!
		conditionalEvent(LZ_OK, "(not objectInArea(enemy1, 6656, 3840, 8192, 5376)) and (not objectInArea(enemy2, 6656, 3840, 8192, 5376))", 3.5)
		deactivateEvent(LZNoGo)
	end
end

function LZ_OK()
	playSoundPos(LZClear, player, 7424, 4608, 0)
	-- allow reinforcements now LZ clear
	-- (set back to normal)
	setReinforcementTime(ReinforceTime/10.0)
	conditionalEvent(LZNoGo, "(objectInArea(enemy1, 6656, 3840, 8192, 5376)) or (objectInArea(enemy2, 6656, 3840, 8192, 5376))", 3.5)
	deactivateEvent(LZ_OK)
end

function transOn()
	playerTransOnMap = true
end
callbackEvent(transOn, CALL_TRANSPORTER_REINFORCE)

function transOff(_player)
	if _player ~= player then return end
	playerTransOnMap = false
end
callbackEvent(transOff, CALL_TRANSPORTER_OFFMAP)


---------- stubs ----------

if _ == nil then _ = function() print("stub: _"); return 0 end end
if buildingDestroyed == nil then buildingDestroyed = function() print("stub: buildingDestroyed"); return 0 end end
if gameOverMessage == nil then gameOverMessage = function() print("stub: gameOverMessage"); return 0 end end
if orderDroidStatsLoc == nil then orderDroidStatsLoc = function() print("stub: orderDroidStatsLoc"); return 0 end end
if centreView == nil then centreView = function() print("stub: centreView"); return 0 end end
if anyStructButWallsLeft == nil then anyStructButWallsLeft = function() print("stub: anyStructButWallsLeft"); return 0 end end
if enableResearch == nil then enableResearch = function() print("stub: enableResearch"); return 0 end end
if droidInArea == nil then droidInArea = function() print("stub: droidInArea"); return 0 end end
if numStructsButNotWallsInArea == nil then numStructsButNotWallsInArea = function() print("stub: numStructsButNotWallsInArea"); return 0 end end
if playSoundPos == nil then playSoundPos = function() print("stub: playSoundPos"); return 0 end end
if flashOff == nil then flashOff = function() print("stub: flashOff"); return 0 end end
if addFeature == nil then addFeature = function() print("stub: addFeature"); return 0 end end
if groupAddDroid == nil then groupAddDroid = function() print("stub: groupAddDroid"); return 0 end end
if groupAddGroup == nil then groupAddGroup = function() print("stub: groupAddGroup"); return 0 end end
if orderGroupLoc == nil then orderGroupLoc = function() print("stub: orderGroupLoc"); return 0 end end
if anyDroidsLeft == nil then anyDroidsLeft = function() print("stub: anyDroidsLeft"); return 0 end end
if droidInRange == nil then droidInRange = function() print("stub: droidInRange"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if removeMessage == nil then removeMessage = function() print("stub: removeMessage"); return 0 end end
if destroyFeature == nil then destroyFeature = function() print("stub: destroyFeature"); return 0 end end
if destroyed == nil then destroyed = function() print("stub: destroyed"); return 0 end end
if setReinforcementTime == nil then setReinforcementTime = function() print("stub: setReinforcementTime"); return 0 end end
if setLandingZone == nil then setLandingZone = function() print("stub: setLandingZone"); return 0 end end
if setPowerLevel == nil then setPowerLevel = function() print("stub: setPowerLevel"); return 0 end end
if setMissionTime == nil then setMissionTime = function() print("stub: setMissionTime"); return 0 end end
if groupAddArea == nil then groupAddArea = function() print("stub: groupAddArea"); return 0 end end
if setStructureLimits == nil then setStructureLimits = function() print("stub: setStructureLimits"); return 0 end end
if showConsoleText == nil then showConsoleText = function() print("stub: showConsoleText"); return 0 end end
if objectInArea == nil then objectInArea = function() print("stub: objectInArea"); return 0 end end
if killStructsInArea == nil then killStructsInArea = function() print("stub: killStructsInArea"); return 0 end end
if completeResearch == nil then completeResearch = function() print("stub: completeResearch"); return 0 end end
if numDroidsInArea == nil then numDroidsInArea = function() print("stub: numDroidsInArea"); return 0 end end
if startMission == nil then startMission = function() print("stub: startMission"); return 0 end end
if pause == nil then pause = function() print("stub: pause"); return 0 end end
if setTransporterExit == nil then setTransporterExit = function() print("stub: setTransporterExit"); return 0 end end
if createAlliance == nil then createAlliance = function() print("stub: createAlliance"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
if buildDroid == nil then buildDroid = function() print("stub: buildDroid"); return 0 end end
if flyTransporterIn == nil then flyTransporterIn = function() print("stub: flyTransporterIn"); return 0 end end
if missionTimeRemaining == nil then missionTimeRemaining = function() print("stub: missionTimeRemaining"); return 0 end end
if seenStructInArea == nil then seenStructInArea = function() print("stub: seenStructInArea"); return 0 end end
if addMessage == nil then addMessage = function() print("stub: addMessage"); return 0 end end
if setRadarZoom == nil then setRadarZoom = function() print("stub: setRadarZoom"); return 0 end end
if structureIdle == nil then structureIdle = function() print("stub: structureIdle"); return 0 end end
if enableStructure == nil then enableStructure = function() print("stub: enableStructure"); return 0 end end
if orderDroidObj == nil then orderDroidObj = function() print("stub: orderDroidObj"); return 0 end end
if centreViewPos == nil then centreViewPos = function() print("stub: centreViewPos"); return 0 end end
if setAssemblyPoint == nil then setAssemblyPoint = function() print("stub: setAssemblyPoint"); return 0 end end
