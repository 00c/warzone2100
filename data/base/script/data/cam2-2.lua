-- Generated by wz2lua (data file)
version(0) -- version of the script API this script is written for
-- slo: "GenExp.slo"

-- Generic VLO file template for start/expand levels

-- Cam2-2.vlo

-- Next level stuff
-- "SUB_2_3S"	//points to next level
NextLev = "CAM_2C"

-- Define Players/Enemies
-- MAX 2. Must define same as number of enemy players given next
numEnemies = 1
enemy = {}
enemy[0] = 2
-- ally player with self (could be a different player number
alliancePlayer = 0
-- ally enemy with self (could be a different player number
allianceEnemy = {}
allianceEnemy[0] = 2
-- TRUE if want enemies to use each others targets, otherwise mark FALSE
allianceFlag = false

-- Starting Enemy Power
-- starting power values for each enemy listed above
power = {}
power[0] = 10000
-- power[1]	int		1000

-- Structure Limits
-- MAX 5. Must be same as number of limits given next
numStrucStats = 6
strucStat = {}
strucStat[0] = "A0PowerGenerator"
strucLimit = {}
strucLimit[0] = 0
strucStat[1] = "A0ResourceExtractor"
strucLimit[1] = 0
strucStat[2] = "A0ResearchFacility"
strucLimit[2] = 0
strucStat[3] = "A0LightFactory"
strucLimit[3] = 0
strucStat[4] = "A0CommandCentre"
strucLimit[4] = 0
strucStat[5] = "A0ComDroidControl"
strucLimit[5] = 0

-- Initialisation
-- starting view centre (in world units)
centreX = 5696
centreY = 7360
-- scroll limits (in tile units)
scrollX1 = 0
scrollY1 = 0
scrollX2 = 64
scrollY2 = 64
-- starting radar: 0=zoomed out, 2=zoomed in
zoomLevel = 1

-- MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
numLZ = 1
-- coords of LZs in tile units
LZX = {}
LZX[0] = 44
LZY = {}
LZY[0] = 57
-- special, last LZ is for next map!! (don't count in numLZ)
-- coords of Campaign Map LZ in tile units
LZX[1] = 87
LZY[1] = 100

-- Transport exit and entry
transX = {}
transX[0] = 62
transY = {}
transY[0] = 55
transX[1] = 50
transY[1] = 62

-- (3 minute) number of seconds*10 for transport, -1 for no reinforcements
ReinforceTime = 1800

-- starting technology for enemy
-- NOTE: need to set first number in array for enemy player
-- second number needs to correspond to numTechs[enemy]
-- MAX 2 enemies, 10 technologies
numTechs = {}
numTechs[0] = 31
startTech = {}
startTech[0] = {}
startTech[0][0] = "R-Defense-WallUpgrade03"
startTech[0][1] = "R-Struc-Materials04"
startTech[0][2] = "R-Struc-Factory-Upgrade04"
startTech[0][3] = "R-Struc-Factory-Cyborg-Upgrade04"
startTech[0][4] = "R-Struc-VTOLFactory-Upgrade01"
startTech[0][5] = "R-Struc-VTOLPad-Upgrade01"
startTech[0][6] = "R-Vehicle-Engine04"
startTech[0][7] = "R-Vehicle-Metals03"
startTech[0][8] = "R-Cyborg-Metals03"
startTech[0][9] = "R-Vehicle-Armor-Heat02"
startTech[0][10] = "R-Cyborg-Armor-Heat02"
startTech[0][11] = "R-Sys-Engineering02"
startTech[0][12] = "R-Wpn-Cannon-Accuracy02"
startTech[0][13] = "R-Wpn-Cannon-Damage04"
startTech[0][14] = "R-Wpn-Cannon-ROF02"
startTech[0][15] = "R-Wpn-Flamer-Damage06"
startTech[0][16] = "R-Wpn-Flamer-ROF03"
startTech[0][17] = "R-Wpn-MG-Damage06"
startTech[0][18] = "R-Wpn-MG-ROF03"
startTech[0][19] = "R-Wpn-Howitzer-Accuracy01"
startTech[0][20] = "R-Wpn-Howitzer-Damage01"
startTech[0][21] = "R-Sys-Sensor-Upgrade01"
startTech[0][22] = "R-Wpn-Mortar-Acc02"
startTech[0][23] = "R-Wpn-Mortar-Damage06"
startTech[0][24] = "R-Wpn-Mortar-ROF03"
startTech[0][25] = "R-Wpn-Rocket-Accuracy02"
startTech[0][26] = "R-Wpn-Rocket-Damage06"
startTech[0][27] = "R-Wpn-Rocket-ROF03"
startTech[0][28] = "R-Wpn-RocketSlow-Accuracy03"
startTech[0][29] = "R-Wpn-RocketSlow-Damage05"
startTech[0][30] = "R-Wpn-RocketSlow-ROF03"

-- Briefings
-- MAX 5. Needs to be same as the number of briefings given next
numBriefs = 1
brief = {}
brief[0] = "MB2_2_MSG3"
-- 0 remove after playing, 1 keep, 2 don't play immediately
briefVal = {}
briefVal[0] = 2
endMsg = "END"

-- Objectives
-- MAX 3. Needs to be the same as the number of objective blips given next
numObjectives = 0
--[[objective[0]	INTMESSAGE	"C22_OBJ1"
objectiveX[0]	int		5440	//doesn't use index to array, use world coords
objectiveY[0]	int		1344]]--

-- Victory Conditions
-- NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
-- number of victory conditions to be met (not including artifacts)
numVictory = 1
-- DOESN'T need to be same as number given next (these are set TRUE/FALSE)
-- if victory condition required. Can have 2 set to TRUE and numVictory = 1
-- This will then let player win if EITHER condition is true!
-- Use numVictory of 0 if just want player to get artifacts

-- these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
-- for this reason must specify ALL victory[]!
-- all enemy vehicles and structures need to be killed
victory = {}
victory[0] = 1
-- all players vehicles at REGION index # (eg LZ REGION)
victory[1] = 5
-- number of objectives to get to (uses objective[0] to objective[#])
victory[2] = -1
-- number of bases to destroy (uses base[0] to base[#])
victory[3] = -1


-- Failure Conditions
-- Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
-- numFail	int		0	//number required to be met (usually one if used!)
-- only one of these has to be met
-- Use -1 for False, # for True (often an index to check!)

-- droid # index all got to REGION
fail = {}
fail[0] = 0
-- 2	//REGION index for above (these count as one condition!)
fail[1] = 4
-- "Enemy Escaping" played for failure
failSnd = "pcv632.ogg"
--[[might use these later if necessary
fail	[2]	int		-1	//only Player UNITS need to be killed to lose
fail	[3]	int		-1	//only Player STRUCTURES need to be killed to lose
fail	[4]	int		-1	//Structure index # to be destroyed to lose????]]--

-- Artifacts
-- number of artifacts required for victory (must be <= numArt)
victoryArt = 1
-- MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)
numArt = 1

-- new improved way of doing artifacts
-- artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
-- artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
-- artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)
-- get from the command unit
artType = {}
artType[0] = 3
artVal = {}
artVal[0] = 0
artX = {}
artX[0] = 0
artY = {}
artY[0] = 0
artComp = {}
artComp[0] = "R-Wpn-RocketSlow-Accuracy03"

-- lists of stuff referred to by index number
-- ********************************************

-- ********************************************
-- FEATURES (inc crates, by ID number)	MAX = 10
-- features	[0]	FEATURE		649		//crate artifact (1st in valley)
-- features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

-- ********************************************
-- STRUCTURES (by ID number)		MAX = 10
-- 238		//Base 1 Factory
structures = {}
structures[0] = getStructureByID(518)
-- 382		//Base 2 Factory
structures[1] = getStructureByID(517)
-- structures	[2]	STRUCTURE	481		//Base 2 Factory
-- structures	[3]	STRUCTURE	623		//Base 3 Factory
-- structures	[4]	STRUCTURE	666		//Bunker

-- ********************************************
-- DROIDS (by ID number)		MAX = 10
-- command unit
droids = {}
droids[0] = 581

--[[old templates
//East Heavy Factory
templates	[2]	TEMPLATE	"CO-H-HvyCan-Tracks"
templates	[3]	TEMPLATE	"CO-M-Rocket-LtA-T-Halftrack"
templates	[4]	TEMPLATE	"CO-M-HvMortar-Halftrack"
//West Heavy Factory
templates	[9]	TEMPLATE	"CO-H-HCN-H"
templates	[10]	TEMPLATE	"CO-M-Rocket-LtA-T-Halftrack"]]--

-- Truck Vehicle
templates = {}
templates[0] = "CO-M-Con-T"
-- Repair Vehicle
templates[1] = "CO-M-Repair-T"
-- East Heavy Factory
templates[2] = "CO-H-HvyCan-Tracks"
templates[3] = "CO-M-Rocket-LtA-T-T"
templates[4] = "CO-M-HvMortar-T"
-- West Heavy Factory
templates[9] = "CO-M-LTAT-Hover"
templates[10] = "CO-M-HvFlame-Track"


-- ********************************************
-- coordinates (world coords)		MAX = 10
-- ********************************************
-- base 1 Assembly
coordsX = {}
coordsX[0] = 5056
coordsY = {}
coordsY[0] = 2624

-- base 2 Assembly
coordsX[1] = 832
coordsY[1] = 1216

-- way point 1
coordsX[2] = 4672
coordsY[2] = 1984

-- way point 2
coordsX[3] = 1856
coordsY[3] = 1600

-- way point 3
coordsX[4] = 960
coordsY[4] = 1472

-- way point 4
coordsX[5] = 1088
coordsY[5] = 8000

-- factory 2 way point 1
coordsX[6] = 1472
coordsY[6] = 4800

-- factory 2 way point 2
coordsX[7] = 5696
coordsY[7] = 7232

-- east factory group 3 waypoint 1
coordsX[8] = 4160
coordsY[8] = 4544

-- east factory group 3 waypoint 2
coordsX[9] = 5696
coordsY[9] = 6976

-- ********************************************
-- regions (world coords)		MAX = 20
-- ********************************************
-- enemy base1 blip
regionsX1 = {}
regionsX1[0] = 4928
regionsY1 = {}
regionsY1[0] = 576
regionsX2 = {}
regionsX2[0] = 7488
regionsY2 = {}
regionsY2[0] = 2368

-- enemy base2 blip
regionsX1[1] = 192
regionsY1[1] = 192
regionsX2[1] = 2368
regionsY2[1] = 2240

-- Group 1 collective northern base
regionsX1[2] = 4928
regionsY1[2] = 1216
regionsX2[2] = 8000
regionsY2[2] = 1728

-- trigger for northern group
regionsX1[3] = 320
-- when player enters zone
regionsY1[3] = 6080
regionsX2[3] = 8192
regionsY2[3] = 6336

-- Command Droid with artifact Fail region
regionsX1[4] = 576
-- 7872
regionsY1[4] = 7488
regionsX2[4] = 1472
regionsY2[4] = 8128

-- 5184		//lz
regionsX1[5] = 5184
-- 6848
regionsY1[5] = 6592
-- 6464
regionsX2[5] = 7104
-- 7872
regionsY2[5] = 8128


-- ********************************************
-- Enemy Base Blips
-- ********************************************
-- MAX = 5. Must be same as number of bases listed next
numBases = 2
-- enemy player number who owns base
basePlayer = {}
basePlayer[0] = 0
-- enemy base blip message (prox.txt)
baseMsg = {}
baseMsg[0] = "C22_BASE1"
-- index to regions
baseRegion = {}
baseRegion[0] = 0
-- index to baseSnd	enemy detected
baseWav1 = {}
baseWav1[0] = 0
-- index to baseSnd	Eradicated
baseWav2 = {}
baseWav2[0] = 3

basePlayer[1] = 0
baseMsg[1] = "C22_BASE2"
baseRegion[1] = 1
-- index to baseSnd	enemy detected
baseWav1[1] = 0
-- index to baseSnd	Eradicated
baseWav2[1] = 3


-- basePlayer	[3]	int		7		//do radar as a base
-- baseMsg		[3]	INTMESSAGE	"FAST_BASE4"
-- baseRegion	[3]	int		12
-- baseWav1	[3]	int		1		//index to baseSnd	Threat to project
-- baseWav2	[3]	int		-1		//-1 = no sound

-- ********************************************
-- Enemy Groups
-- ********************************************
-- group MAX = 10
numGroups = 3
-- Convoy
-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType = {}
grpType[0] = 0
-- player number (COLLECTIVE)
grpPlayer = {}
grpPlayer[0] = 0
-- index in regions array
grpRegion = {}
grpRegion[0] = 2
-- 10 mins. (always make >= 0 for defence forces)
grpTimeGo = {}
grpTimeGo[0] = 60
-- index in regions array as trigger
grpRegionGo = {}
grpRegionGo[0] = 3
-- player number to cross trigger region (may not need?)
grpWhoGo = {}
grpWhoGo[0] = 0
-- don't set morale/leadership/retreat
grpMorale = {}
grpMorale[0] = 99
-- leadership value
grpLeadership = {}
grpLeadership[0] = 0
-- retreat to base 2 assembly
grpRetreatXY = {}
grpRetreatXY[0] = 1
-- index in coords/sectors array (depends on grpType)
grpPosStart = {}
grpPosStart[0] = 2
-- Minimum index in coords array
grpPosMin = {}
grpPosMin[0] = 2
-- Maximum index in coords array
grpPosMax = {}
grpPosMax[0] = 5
-- Step increase for next 'waypoint'
grpPosStep = {}
grpPosStep[0] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType = {}
grpPosType[0] = 0
-- index factory to reinforce group. -1 = any factory.
grpFactory = {}
grpFactory[0] = 1
-- ideal size. If less than this factory will reinforce
grpIdealSize = {}
grpIdealSize[0] = 10

-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[1] = 0
-- player number (COLLECTIVE)
grpPlayer[1] = 0
-- index in regions array
grpRegion[1] = -1
-- 2 mins time trigger (always make >= 0 for defence forces)
grpTimeGo[1] = 12
-- no region. index in regions array as trigger
grpRegionGo[1] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo[1] = 0
-- medium morale
grpMorale[1] = 50
-- leadership value
grpLeadership[1] = 50
-- retreat (index in coords array) base2 assembly
grpRetreatXY[1] = 1
-- index in sectors array (depends on grpType)
grpPosStart[1] = 6
-- Minimum index in coords array
grpPosMin[1] = 6
-- Maximum index in coords array
grpPosMax[1] = 7
-- Step increase for next 'waypoint'
grpPosStep[1] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[1] = 3
-- index structure to reinforce group. -1 = any factory.
grpFactory[1] = 1
-- ideal size. If less than this factory will reinforce
grpIdealSize[1] = 8

-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[2] = 0
-- player number (COLLECTIVE)
grpPlayer[2] = 0
-- index in regions array
grpRegion[2] = -1
-- 0s time trigger (always make >= 0 for defence forces)
grpTimeGo[2] = 3
-- no region. index in regions array as trigger
grpRegionGo[2] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo[2] = 0
-- morale = 25%
grpMorale[2] = 10
-- leadership value = 75%
grpLeadership[2] = 70
-- retreat (index in coords array) base1 assembly
grpRetreatXY[2] = 0
-- index in coords array (depends on grpType)
grpPosStart[2] = 8
-- Minimum index in coords array
grpPosMin[2] = 8
-- Maximum index in coords array
grpPosMax[2] = 9
-- Step increase for next 'waypoint'
grpPosStep[2] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[2] = 2
-- index factory to reinforce group. -1 = any factory.
grpFactory[2] = 0
-- ideal size. If less than this factory will reinforce
grpIdealSize[2] = 12

-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[3] = 0
-- player number (NP)
grpPlayer[3] = 7
-- index in regions array
grpRegion[3] = 9
-- 10s time trigger (always make >= 0 for defence forces)
grpTimeGo[3] = 4
-- no region. index in regions array as trigger
grpRegionGo[3] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo[3] = 0
-- pretty timid! morale = 25%
grpMorale[3] = 90
-- leadership value = 0%
grpLeadership[3] = 50
-- retreat (index in coords array) base 2 assembly
grpRetreatXY[3] = 1
-- index in coords array (depends on grpType)
grpPosStart[3] = 3
-- Minimum index in coords array
grpPosMin[3] = 3
-- Maximum index in coords array
grpPosMax[3] = 4
-- Step increase for next 'waypoint'
grpPosStep[3] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[3] = 1
-- index factory to reinforce group. -1 = any factory.
grpFactory[3] = 1
-- ideal size. If less than this factory will reinforce
grpIdealSize[3] = 4

-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[4] = 0
-- player number (NP)
grpPlayer[4] = 7
-- index in regions array
grpRegion[4] = 10
-- 20s time trigger (always make >= 0 for defence forces)
grpTimeGo[4] = 5
-- no region. index in regions array as trigger
grpRegionGo[4] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo[4] = 0
-- morale = 50%
grpMorale[4] = 90
-- leadership value = 75%
grpLeadership[4] = 50
-- retreat (index in coords array) base2 assembly
grpRetreatXY[4] = 1
-- index in coords array (depends on grpType)
grpPosStart[4] = 3
-- Minimum index in coords array
grpPosMin[4] = 3
-- Maximum index in coords array
grpPosMax[4] = 4
-- Step increase for next 'waypoint'
grpPosStep[4] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[4] = 1
-- index factory to reinforce group. -1 = any factory.
grpFactory[4] = -1
-- ideal size. If less than this factory will reinforce
grpIdealSize[4] = 6

-- radar tower defenders
-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[5] = 1
-- player number (NP)
grpPlayer[5] = 7
-- index in regions array
grpRegion[5] = 11
-- 20s time trigger (always make >= 0 for defence forces)
grpTimeGo[5] = 0
-- index in regions array as protect region
grpRegionGo[5] = 12
-- player number to cross trigger region (may not need?)
grpWhoGo[5] = 0
-- morale = 50%
grpMorale[5] = 25
-- leadership value = 75%
grpLeadership[5] = 50
-- retreat (index in coords array) base2 assembly
grpRetreatXY[5] = 1
-- -1 = no waypoints. index in coords array (depends on grpType)
grpPosStart[5] = -1
-- Minimum index in coords array
grpPosMin[5] = -1
-- Maximum index in coords array
grpPosMax[5] = -1
-- Step increase for next 'waypoint'
grpPosStep[5] = 0
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[5] = 0
-- index factory to reinforce group. -1 = any factory.
grpFactory[5] = 0
-- ideal size. If less than this factory will reinforce
grpIdealSize[5] = 0

-- hillgroup
-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[6] = 0
-- player number (NP)
grpPlayer[6] = 7
-- index in regions array (same as base region)
grpRegion[6] = 2
-- 20s time trigger (always make >= 0 for defence forces)
grpTimeGo[6] = -1
-- no region. index in regions array as trigger
grpRegionGo[6] = 5
-- player number to cross trigger region (may not need?)
grpWhoGo[6] = 0
-- morale = 50%
grpMorale[6] = 90
-- leadership value = 75%
grpLeadership[6] = 50
-- retreat (index in coords array) base3 assembly
grpRetreatXY[6] = 2
-- index in coords array (depends on grpType)
grpPosStart[6] = 5
-- Minimum index in coords array
grpPosMin[6] = 5
-- Maximum index in coords array
grpPosMax[6] = 8
-- Step increase for next 'waypoint'
grpPosStep[6] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[6] = 2
-- index factory to reinforce group. -1 = any factory.
grpFactory[6] = 2
-- ideal size. If less than this factory will reinforce
grpIdealSize[6] = 3

-- Factories
-- MAX = 10
numFactories = 2
-- East heavy Factory
-- index to structures
factID = {}
factID[0] = 0
-- index to assembly point. -1 for don't set
factAssXY = {}
factAssXY[0] = 0
-- delay before starting production in 10s
factTimeGo = {}
factTimeGo[0] = 12
-- -1 = no region for trigger (assume WhoGo = 0)
factRegionGo = {}
factRegionGo[0] = -1
-- index to starting template
factTempMin = {}
factTempMin[0] = 2
-- index to maximum template
factTempMax = {}
factTempMax[0] = 4
-- 1 mins. Time in 10s for factory to try to produce again
factEvery = {}
factEvery[0] = 6

-- west heavy Factory
-- index to structures
factID[1] = 1
-- index to assembly point. -1 for don't set
factAssXY[1] = 1
-- delay before starting production in 10s
factTimeGo[1] = 1
-- -1 = no region for trigger (assume WhoGo = 0)
factRegionGo[1] = -1
-- index to starting template
factTempMin[1] = 9
-- index to maximum template
factTempMax[1] = 10
-- 20secs Time in 10s for factory to try to produce again
factEvery[1] = 2


-- 'Globals'
-- These should be same in each file, but may need slight alterations
-- player's player number
player = 0
crate = "Crate"
-- 171				//range to artifact about 1.5 tiles
artRange = 200
-- range to objective 5 Tiles
objectiveRange = 640
-- range to waypoint 2ish tiles
wayRange = 300
-- range for target spotting
targetRange = 768
-- maximum number of targets to store for each enemy
targetMax = 4
-- mission failed
lostSnd = "pcv470.ogg"
-- Base Under Attack
attackSnd1 = "pcv337.ogg"
-- artifact sounds
artSnd1 = "pcv351.ogg"
artSnd2 = "pcv352.ogg"
-- for enemy transports
transporter = "Transporter"
LZComp = "pcv445.ogg"
LZClear = "lz-clear.ogg"

-- base WAVs. MAX = 5
-- Enemy Base Detected
baseSnd = {}
baseSnd[0] = "pcv379.ogg"
-- Enemy Base Detected
baseSnd[1] = "pcv379.ogg"
-- Enemy Base Detected
baseSnd[2] = "pcv379.ogg"
-- Enemy base eradicated
baseSnd[3] = "pcv394.ogg"

-- NEW STUFF fro RETURN TO LZ type victory condition blip and audio
-- must be set true to activate
retLZFlag = true
-- for victory condition of get all player stuff to region
retLZSnd = "pcv427.ogg"
-- Blip for LZ
retLZBlip = "C22_LZ"

--run the code
dofile('genexp_logic.lua')
