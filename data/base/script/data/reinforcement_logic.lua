-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
transportDroid = nil
loadDroid = nil
transOnMap = false
count = 0
count2 = 0
temp = 0
curTemplate = 0
transCount = 0
transTot = 0
transExtra = 0
playerGroup = Group()
transPlayer = 0

-- extra ones come in every 1 seconds - (used to be 50)
-- extra ones come in every 5 minutes after 1st load
-- trigger startTransTrig(CALL_NO_REINFORCEMENTS_LEFT);

function start()
	setReinforcementTime(ReinforceTime/10.0)
end
callbackEvent(start, CALL_GAMEINIT)

-- called once player has got all his reinforcements from previous level - if any
function loadTrans()
	if not transOnMap then
		if (curTemplate < numLoads) and (transExtra < transTot) then
			count = curTemplate
			-- keep track of number of units loaded
			temp = 0
			while (count < numLoads) and (temp < 10) do
				count2 = 0
				while count2 < loadNum[count] do
					if transportDroid ~= nil then
						loadDroid = addDroidToMissionList(loadTemplate[count], player)
						if loadDroid ~= nil then
							if (loadDroid.droidType == DROID_WEAPON) or (loadDroid.droidType == DROID_CYBORG) then
								setDroidKills(loadDroid, random(8) + 2)
							end
							addDroidToTransporter(transportDroid, loadDroid)
						end
					end
					count2 = count2 + 1
					-- temp = # of units loaded
					temp = temp + 1
				end
				count = count + 1
				curTemplate = count
			end
			-- call in transport
			setTransporterExit(player, transX[0], transY[0])
			flyTransporterIn(player, transX[1], transY[1], false)
			transOnMap = true
			transExtra = transExtra + 1
			-- longer delay for next one
			repeatingEvent(loadTrans, 300.0)
		else
			deactivateEvent(loadTrans)
		end
	end
end

-- counts how many transport loads the player has brought in
function countReinforcements(_playerGroup, _player)
	if _player ~= transPlayer then return end
	if transPlayer == player then
		transCount = transCount + 1
	end
	-- stop reinforcements after last one allowed (assuming limited!)
	if (transCount == transLimit) and (transLimit ~= 0) then
		pause(1200/10.0)
		-- "Transport under attack"
		playSound(noTransSnd, player)
		-- MAGIC NUMBER IN HERE!!!
		setReinforcementTime(LZ_COMPROMISED_TIME/10.0)
		-- 40 secs after last message
		pause(400/10.0)
		-- "Transport under attack"
		playSound(noTransSnd, player)
		-- 20 secs after last message
		pause(200/10.0)
		-- "Transport under attack"
		playSound(noTransSnd, player)
	end
end
callbackEvent(countReinforcements, CALL_TRANSPORTER_LANDED)

-- CALLBACK
function startTrans()
	transTot = numReinf - transCount
	if transTot > 0 then
		if transCount == 0 then
			repeatingEvent(loadTrans, 1.0)
		else
			repeatingEvent(loadTrans, 300.0)
		end
	end
	-- give player a transport
	transportDroid = addDroidToMissionList(transporter, player)
	transOnMap = false
	
	-- make sure the timer does not appear on the next mission
	setReinforcementTime(-1/10.0)
	
	deactivateEvent(startTrans)
end
callbackEvent(startTrans, CALL_NO_REINFORCEMENTS_LEFT)

-- trigger each time the transporter leaves the map
function checkTrans(_player)
	if _player ~= player then return end
	transOnMap = false
end
callbackEvent(checkTrans, CALL_TRANSPORTER_OFFMAP)


---------- stubs ----------

if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if setDroidKills == nil then setDroidKills = function() print("stub: setDroidKills"); return 0 end end
if random == nil then random = function() print("stub: random"); return 0 end end
if addDroidToTransporter == nil then addDroidToTransporter = function() print("stub: addDroidToTransporter"); return 0 end end
if pause == nil then pause = function() print("stub: pause"); return 0 end end
if setReinforcementTime == nil then setReinforcementTime = function() print("stub: setReinforcementTime"); return 0 end end
if setTransporterExit == nil then setTransporterExit = function() print("stub: setTransporterExit"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
if addDroidToMissionList == nil then addDroidToMissionList = function() print("stub: addDroidToMissionList"); return 0 end end
if flyTransporterIn == nil then flyTransporterIn = function() print("stub: flyTransporterIn"); return 0 end end
