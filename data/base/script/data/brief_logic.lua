-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for

-- Briefings

-- 'Globals'

-- General variables
-- for while loops
count = 0
count2 = 0
testDroid = nil
newDroid = nil
-- new droid built
newDroidFactory = nil
countBriefs = 0
temp = 0
temp1 = 0
temp2 = 0
tempX = 0
tempY = 0
-- Base Under Attack
hitStruc = nil
-- Base Under Attack
attackerObj = nil
-- Base Under Attack time delay for next warning
t = 0
-- for enemy base attack stuff!
enemyCount = 0

-- Triggers

-- Initialisation
function start()
	if numBriefs > 0 then
		addMessage(brief[0], MISS_MSG, 0, true)
		countBriefs = 1
	end
end
callbackEvent(start, CALL_GAMEINIT)

-- need to rework this better!!
function briefings()
	if countBriefs >= numBriefs then
		deactivateEvent(briefings)
	end
	-- remove last, add next?
	if countBriefs < numBriefs then
		removeMessage(brief[countBriefs - 1], MISS_MSG, 0)
		addMessage(brief[countBriefs], MISS_MSG, 0, true)
		countBriefs = countBriefs + 1
	end
end
callbackEvent(briefings, CALL_VIDEO_QUIT)

-- Events: Win or Lose
-- assumes victory already checked
function nextLevEvnt()
	flushConsoleMessages()
	startMission(CAMP_EXPAND, NextLev)
	-- End game here for now! (don't try next mission)
	-- gameOver(true);
	
	deactivateEvent(nextLevEvnt)
end

-- skip to end of level
-- cheat button ctrl M
function cheatEvnt()
	repeatingEvent(nextLevEvnt, 2.0)
	deactivateEvent(cheatEvnt)
end
callbackEvent(cheatEvnt, CALL_MISSION_START)


---------- stubs ----------

if removeMessage == nil then removeMessage = function() print("stub: removeMessage"); return 0 end end
if flushConsoleMessages == nil then flushConsoleMessages = function() print("stub: flushConsoleMessages"); return 0 end end
if startMission == nil then startMission = function() print("stub: startMission"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if addMessage == nil then addMessage = function() print("stub: addMessage"); return 0 end end
