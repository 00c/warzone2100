-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
count = 0
newColour = 0
oldColour = 0
objectDroid = nil
viewerDroid = nil



function start()
	createAlliance(newPlayer, curPlayer)
	-- make player 0 (newPlayer) units belong to player 1 (curPlayer)
	
	-- save the old colour so we can set it back again
	oldColour = getPlayerColour(curPlayer)
	
	newColour = getPlayerColour(newPlayer)
	-- make curPlayer units newPlayer colour
	setPlayerColour(newColour, curPlayer)
	
	-- pre damage some of these droids
	count = 0
	while count < numDroids do
		forceDamageObject(droids[count], random(20) + 50)
		setDroidSecondary(droids[count], DSO_HALTTYPE, DSS_HALT_HOLD)
		count = count + 1
	end
	-- anywhere from 30% to 50% health
	forceDamageObject(transStruct, random(20) + 30)
end
callbackEvent(start, CALL_GAMEINIT)

function transDead()
	playSound(badSnd, newPlayer)
	C.extraFailFlag = true
	
	-- reset the player colour for future missions
	setPlayerColour(oldColour, curPlayer)
	
	deactivateEvent(seen)
	deactivateEvent(transDead)
end
conditionalEvent(transDead, "(destroyed(transStruct))", 2.9)

-- has player found these units?
-- event seen(CALL_DROID_SEEN, newPlayer, ref objectDroid, ref viewerDroid)
function seen()
	count = 0
	while count < numDroids do
		if droids[count] ~= nil then
			takeOverSingleDroid(droids[count], newPlayer)
		end
		count = count + 1
	end
	count = 0
	while count < numRegions do
		takeOverStructsInArea(curPlayer, newPlayer, RegionsX1[count], RegionsY1[count], RegionsX2[count], RegionsY2[count])
		count = count + 1
	end
	-- "Units rescued"
	playSound(goodSnd, newPlayer)
	
	-- reset the player colour for future missions
	setPlayerColour(oldColour, curPlayer)
	
	C.extraVictoryFlag = true
	deactivateEvent(transDead)
	
	--[[no longer need to return
		//add lz blip & return to LZ message
		addMessage(LZ_MSG, PROX_MSG, newPlayer, false);
		//addConsoleText(_("Return to LZ"), newPlayer);
		playSoundPos(LZSnd, newPlayer, 960, 7488, 0);	//as in prox2-1.txt]]--
	deactivateEvent(seen)
end
conditionalEvent(seen, "droidInArea(newPlayer, RegionsX1[0], RegionsY1[0], RegionsX2[0], RegionsY2[0])", 1.8)


---------- stubs ----------

if takeOverSingleDroid == nil then takeOverSingleDroid = function() print("stub: takeOverSingleDroid"); return 0 end end
if destroyed == nil then destroyed = function() print("stub: destroyed"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if setDroidSecondary == nil then setDroidSecondary = function() print("stub: setDroidSecondary"); return 0 end end
if takeOverStructsInArea == nil then takeOverStructsInArea = function() print("stub: takeOverStructsInArea"); return 0 end end
if random == nil then random = function() print("stub: random"); return 0 end end
if getPlayerColour == nil then getPlayerColour = function() print("stub: getPlayerColour"); return 0 end end
if droidInArea == nil then droidInArea = function() print("stub: droidInArea"); return 0 end end
if setPlayerColour == nil then setPlayerColour = function() print("stub: setPlayerColour"); return 0 end end
if forceDamageObject == nil then forceDamageObject = function() print("stub: forceDamageObject"); return 0 end end
if createAlliance == nil then createAlliance = function() print("stub: createAlliance"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
