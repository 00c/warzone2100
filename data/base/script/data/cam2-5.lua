-- Generated by wz2lua (data file)
version(0) -- version of the script API this script is written for
-- slo: "GenExp.slo"

-- Generic VLO file template for start/expand levels

-- Cam2-5.vlo

-- Next level stuff
-- points to next level
NextLev = "SUB_2DS"

-- Define Players/Enemies
-- MAX 2. Must define same as number of enemy players given next
numEnemies = 1
enemy = {}
enemy[0] = 2
-- ally player with self (could be a different player number
alliancePlayer = 0
-- ally enemy with self (could be a different player number
allianceEnemy = {}
allianceEnemy[0] = 2
-- TRUE if want enemies to use each others targets, otherwise mark FALSE
allianceFlag = false

-- Starting Enemy Power
-- starting power values for each enemy listed above
power = {}
power[0] = 10000
-- power[1]	int		1000

-- Structure Limits
-- MAX 5. Must be same as number of limits given next
numStrucStats = 6
strucStat = {}
strucStat[0] = "A0PowerGenerator"
strucLimit = {}
strucLimit[0] = 0
strucStat[1] = "A0ResourceExtractor"
strucLimit[1] = 0
strucStat[2] = "A0ResearchFacility"
strucLimit[2] = 0
strucStat[3] = "A0LightFactory"
strucLimit[3] = 0
strucStat[4] = "A0CommandCentre"
strucLimit[4] = 0
strucStat[5] = "A0ComDroidControl"
strucLimit[5] = 0

-- Initialisation
-- starting view centre (in world units)
centreX = 1344
centreY = 6848
-- scroll limits (in tile units)
scrollX1 = 0
scrollY1 = 0
scrollX2 = 64
scrollY2 = 64
-- starting radar: 0=zoomed out, 2=zoomed in
zoomLevel = 1

-- MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
numLZ = 1
-- coords of LZs in tile units
LZX = {}
LZX[0] = 10
LZY = {}
LZY[0] = 53
-- special, last LZ is for next map!! (don't count in numLZ)
-- coords of Campaign Map LZ in tile units
LZX[1] = 87
LZY[1] = 100

-- Transport exit and entry
-- entry coords
transX = {}
transX[0] = 12
transY = {}
transY[0] = 62
-- exit coords
transX[1] = 1
transY[1] = 50

-- (3 minute) number of seconds*10 for transport, -1 for no reinforcements
ReinforceTime = 1800

-- starting technology for enemy
-- NOTE: need to set first number in array for enemy player
-- second number needs to correspond to numTechs[enemy]
-- MAX 2 enemies, 10 technologies
numTechs = {}
numTechs[0] = 31
startTech = {}
startTech[0] = {}
startTech[0][0] = "R-Defense-WallUpgrade03"
startTech[0][1] = "R-Struc-Materials05"
startTech[0][2] = "R-Struc-Factory-Upgrade05"
startTech[0][3] = "R-Struc-Factory-Cyborg-Upgrade05"
startTech[0][4] = "R-Struc-VTOLFactory-Upgrade02"
startTech[0][5] = "R-Struc-VTOLPad-Upgrade01"
startTech[0][6] = "R-Vehicle-Engine04"
startTech[0][7] = "R-Vehicle-Metals03"
startTech[0][8] = "R-Cyborg-Metals04"
startTech[0][9] = "R-Vehicle-Armor-Heat02"
startTech[0][10] = "R-Cyborg-Armor-Heat02"
startTech[0][11] = "R-Sys-Engineering02"
startTech[0][12] = "R-Wpn-Cannon-Accuracy02"
startTech[0][13] = "R-Wpn-Cannon-Damage04"
startTech[0][14] = "R-Wpn-Cannon-ROF02"
startTech[0][15] = "R-Wpn-Flamer-Damage06"
startTech[0][16] = "R-Wpn-Flamer-ROF03"
startTech[0][17] = "R-Wpn-Howitzer-Accuracy01"
startTech[0][18] = "R-Wpn-Howitzer-Damage01"
startTech[0][19] = "R-Sys-Sensor-Upgrade01"
startTech[0][20] = "R-Wpn-MG-Damage07"
startTech[0][21] = "R-Wpn-MG-ROF03"
startTech[0][22] = "R-Wpn-Mortar-Acc02"
startTech[0][23] = "R-Wpn-Mortar-Damage06"
startTech[0][24] = "R-Wpn-Mortar-ROF03"
startTech[0][25] = "R-Wpn-Rocket-Accuracy02"
startTech[0][26] = "R-Wpn-Rocket-Damage06"
startTech[0][27] = "R-Wpn-Rocket-ROF03"
startTech[0][28] = "R-Wpn-RocketSlow-Accuracy03"
startTech[0][29] = "R-Wpn-RocketSlow-Damage05"
startTech[0][30] = "R-Wpn-RocketSlow-ROF03"

-- Briefings
-- MAX 5. Needs to be same as the number of briefings given next
numBriefs = 1
brief = {}
brief[0] = "MB2_5_MSG2"
-- 0 remove after playing, 1 keep, 2 don't play immediately
briefVal = {}
briefVal[0] = 2
endMsg = "END"

-- Objectives
-- MAX 3. Needs to be the same as the number of objective blips given next
numObjectives = 1
objective = {}
objective[0] = "C25_OBJ1"
-- doesn't use index to array, use world coords
objectiveX = {}
objectiveX[0] = 6848
objectiveY = {}
objectiveY[0] = 1856

-- Victory Conditions
-- NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
-- number of victory conditions to be met (not including artifacts)
numVictory = 2
-- DOESN'T need to be same as number given next (these are set TRUE/FALSE)
-- if victory condition required. Can have 2 set to TRUE and numVictory = 1
-- This will then let player win if EITHER condition is true!
-- Use numVictory of 0 if just want player to get artifacts

-- these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
-- for this reason must specify ALL victory[]!
-- all enemy vehicles and structures need to be killed
victory = {}
victory[0] = 1
-- all players vehicles at REGION index # (eg LZ REGION)
victory[1] = 4
-- number of objectives to get to (uses objective[0] to objective[#])
victory[2] = -1
-- number of bases to destroy (uses base[0] to base[#])
victory[3] = 1


-- Failure Conditions
-- Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
-- numFail	int		0	//number required to be met (usually one if used!)
-- only one of these has to be met
-- Use -1 for False, # for True (often an index to check!)

-- 0	//group # index all got to REGION
fail = {}
fail[0] = -1
-- 2	//REGION index for above (these count as one condition!)
fail[1] = -1

--[[might use these later if necessary
fail	[2]	int		-1	//only Player UNITS need to be killed to lose
fail	[3]	int		-1	//only Player STRUCTURES need to be killed to lose
fail	[4]	int		-1	//Structure index # to be destroyed to lose????]]--

-- Artifacts
-- number of artifacts required for victory (must be <= numArt)
victoryArt = 3
-- MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)
numArt = 3

-- new improved way of doing artifacts
-- artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
-- artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
-- artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)
-- Nuclear reactor
artType = {}
artType[0] = 1
artVal = {}
artVal[0] = 3
artX = {}
artX[0] = 6976
artY = {}
artY[0] = 1728
artComp = {}
artComp[0] = "R-Struc-Power-Upgrade01"

-- Factory
artType[1] = 1
artVal[1] = 0
artX[1] = 6080
artY[1] = 704
artComp[1] = "R-Wpn-Cannon4AMk1"

-- Cyborg Factory
artType[2] = 1
artVal[2] = 2
-- 6976
artX[2] = 6848
artY[2] = 576
artComp[2] = "R-Wpn-MG4"

-- lists of stuff referred to by index number
-- ********************************************

-- ********************************************
-- FEATURES (inc crates, by ID number)	MAX = 10
-- features	[0]	FEATURE		649		//crate artifact (1st in valley)
-- features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

-- ********************************************
-- STRUCTURES (by ID number)		MAX = 10
-- Base 1 Medium Factory
structures = {}
structures[0] = getStructureByID(654)
-- Cyborg Factory 1
structures[1] = getStructureByID(408)
-- Cyborg Factory 2
structures[2] = getStructureByID(409)
-- nuclear reactor
structures[3] = getStructureByID(511)
-- Repair facility
structures[4] = getStructureByID(421)


-- Truck Vehicle
templates = {}
templates[0] = "CO-M-Con-T"
-- Repair Vehicle
templates[1] = "CO-M-Repair-T"
-- Sensor Vehicle
templates[2] = "CO-M-Sensor-T"
templates[3] = "CO-H-HPVCannon-Tracks"
templates[4] = "CO-M-ROTMG-T"
templates[5] = "CO-H-QuadRotAA-T"
templates[6] = "CO-M-MedCan-Tracks"
templates[7] = "CO-M-Rocket-LtA-T-T"
templates[8] = "CO-M-HPVCannon-Tracks"
templates[9] = "CO-H-HPVCannon-Tracks"
templates[10] = "CO-H-QuadRotAA-T"

-- Collective VTOL Templates (DON'T USE FOR THIS LEVEL!)
templates[11] = "CO-L-Rocket-LtA-T-VTOL"
templates[12] = "CO-L-RotMG-VTOL"
templates[13] = "CO-M-Bomb2-VTOL"

-- Cyborg Templates (SHARED)
templates[14] = "Cyb-RotMG-GROUND"
templates[15] = "Cyb-Flamer-GROUND"
templates[16] = "Cyb-Rocket-GROUND"
templates[17] = "Cyb-Cannon-GROUND"


-- ********************************************
-- coordinates (world coords)		MAX = 10
-- ********************************************
-- base 1 Medium factory Assembly
coordsX = {}
coordsX[0] = 5952
coordsY = {}
coordsY[0] = 1216

-- player lz
coordsX[1] = 1344
coordsY[1] = 7104

-- canal way point
coordsX[2] = 1600
coordsY[2] = 3520

-- crossroads way point
coordsX[3] = 1600
coordsY[3] = 1728

-- base 1 Medium factory Assembly
coordsX[4] = 5952
coordsY[4] = 1216

-- dam waypoint1
coordsX[5] = 6592
coordsY[5] = 2624
-- dam waypoint2
coordsX[6] = 7360
coordsY[6] = 5824
-- dam waypoint3
coordsX[7] = 5952
coordsY[7] = 6336

-- hillgroup waypoint4
coordsX[8] = 1728
coordsY[8] = 7744

-- ********************************************
-- regions (world coords)		MAX = 20
-- ********************************************
-- region Reactor Base blip
regionsX1 = {}
regionsX1[0] = 5952
regionsY1 = {}
regionsY1[0] = 320
regionsX2 = {}
regionsX2[0] = 7872
regionsY2 = {}
regionsY2[0] = 2368

-- enemy group1 Canal Guard
regionsX1[1] = 960
regionsY1[1] = 1856
regionsX2[1] = 2112
regionsY2[1] = 4160

-- enemy group2 cyborgs
regionsX1[2] = 3008
regionsY1[2] = 6208
regionsX2[2] = 4032
regionsY2[2] = 7872

-- enemy group2 cyborgs north of canal
regionsX1[3] = 2368
regionsY1[3] = 3520
regionsX2[3] = 5312
regionsY2[3] = 3904

-- 832		//player lz
regionsX1[4] = 64
-- 6336
regionsY1[4] = 5952
-- 1728
regionsX2[4] = 2112
-- 7360
regionsY2[4] = 8128

-- base 3 Factory start
regionsX1[5] = 3904
-- crossed by radar tower
regionsY1[5] = 2496
regionsX2[5] = 5312
regionsY2[5] = 4288

-- region group dam
regionsX1[6] = 6336
regionsY1[6] = 2496
regionsX2[6] = 7232
regionsY2[6] = 3008

-- region trigger
regionsX1[7] = 5440
regionsY1[7] = 6080
regionsX2[7] = 5952
regionsY2[7] = 7872


-- ********************************************
-- Enemy Base Blips
-- ********************************************
-- MAX = 5. Must be same as number of bases listed next
numBases = 1
-- enemy player number who owns base
basePlayer = {}
basePlayer[0] = 0
-- enemy base blip message (prox.txt)
baseMsg = {}
baseMsg[0] = "C25_BASE1"
-- index to regions
baseRegion = {}
baseRegion[0] = 0
-- index to baseSnd	Superior Weapons
baseWav1 = {}
baseWav1[0] = 0
-- index to baseSnd	Eradicated
baseWav2 = {}
baseWav2[0] = 3


-- basePlayer	[3]	int		7		//do radar as a base
-- baseMsg		[3]	INTMESSAGE	"FAST_BASE4"
-- baseRegion	[3]	int		12
-- baseWav1	[3]	int		1		//index to baseSnd	Threat to project
-- baseWav2	[3]	int		-1		//-1 = no sound

-- ********************************************
-- Enemy Groups
-- ********************************************
-- group MAX = 10
numGroups = 4
-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType = {}
grpType[0] = 0
-- player number (collective)
grpPlayer = {}
grpPlayer[0] = 0
-- index in regions array
grpRegion = {}
grpRegion[0] = 1
-- 10s. (always make >= 0 for defence forces)
grpTimeGo = {}
grpTimeGo[0] = 12
-- index in regions array as trigger
grpRegionGo = {}
grpRegionGo[0] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo = {}
grpWhoGo[0] = 0
-- timid morale 80%
grpMorale = {}
grpMorale[0] = 80
-- medium leadership
grpLeadership = {}
grpLeadership[0] = 50
-- retreat to base 1 assembly
grpRetreatXY = {}
grpRetreatXY[0] = 0
-- index in coords/sectors array (depends on grpType)
grpPosStart = {}
grpPosStart[0] = 1
-- Minimum index in coords array
grpPosMin = {}
grpPosMin[0] = 1
-- Maximum index in coords array
grpPosMax = {}
grpPosMax[0] = 4
-- Step increase for next 'waypoint'
grpPosStep = {}
grpPosStep[0] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType = {}
grpPosType[0] = 1
-- index factory to reinforce group. -1 = any factory.
grpFactory = {}
grpFactory[0] = 0
-- ideal size. If less than this factory will reinforce
grpIdealSize = {}
grpIdealSize[0] = 15

-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[1] = 0
-- player number (collective)
grpPlayer[1] = 0
-- index in regions array
grpRegion[1] = 2
-- 21 min time trigger (always make >= 0 for defence forces)
grpTimeGo[1] = 6
-- no region. index in regions array as trigger
grpRegionGo[1] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo[1] = 0
-- very timid! morale = 10%
grpMorale[1] = 90
-- leadership value
grpLeadership[1] = 50
-- retreat (index in coords array) base1 assembly
grpRetreatXY[1] = 3
-- index in sectors array (depends on grpType)
grpPosStart[1] = 1
-- Minimum index in coords array
grpPosMin[1] = 1
-- Maximum index in coords array
grpPosMax[1] = 4
-- Step increase for next 'waypoint'
grpPosStep[1] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[1] = 1
-- index structure to reinforce group. -1 = any factory.
grpFactory[1] = -1
-- ideal size. If less than this factory will reinforce
grpIdealSize[1] = 10

-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[2] = 0
-- player number (collective)
grpPlayer[2] = 0
-- index in regions array
grpRegion[2] = 3
-- 0s time trigger (always make >= 0 for defence forces)
grpTimeGo[2] = 18
-- no region. index in regions array as trigger
grpRegionGo[2] = -1
-- player number to cross trigger region (may not need?)
grpWhoGo[2] = 0
-- morale = 70%
grpMorale[2] = 70
-- leadership value = 50%
grpLeadership[2] = 50
-- retreat (index in coords array) base2 assembly
grpRetreatXY[2] = 3
-- index in coords array (depends on grpType)
grpPosStart[2] = 1
-- Minimum index in coords array
grpPosMin[2] = 1
-- Maximum index in coords array
grpPosMax[2] = 4
-- Step increase for next 'waypoint'
grpPosStep[2] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[2] = 1
-- index factory to reinforce group. -1 = any factory.
grpFactory[2] = -1
-- ideal size. If less than this factory will reinforce
grpIdealSize[2] = 10

-- hovers on dam
-- 0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpType[3] = 0
-- player number (collective)
grpPlayer[3] = 0
-- index in regions array
grpRegion[3] = 6
-- 10s time trigger (always make >= 0 for defence forces)
grpTimeGo[3] = -1
-- no region. index in regions array as trigger
grpRegionGo[3] = 7
-- player number to cross trigger region (may not need?)
grpWhoGo[3] = 0
-- pretty timid! morale = 25%
grpMorale[3] = 10
-- leadership value = 0%
grpLeadership[3] = 80
-- retreat (index in coords array) base 2 assembly
grpRetreatXY[3] = 5
-- index in coords array (depends on grpType)
grpPosStart[3] = 5
-- Minimum index in coords array
grpPosMin[3] = 5
-- Maximum index in coords array
grpPosMax[3] = 7
-- Step increase for next 'waypoint'
grpPosStep[3] = 1
-- 0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpPosType[3] = 2
-- index factory to reinforce group. -1 = any factory.
grpFactory[3] = 0
-- ideal size. If less than this factory will reinforce
grpIdealSize[3] = 4


-- Factories
-- MAX = 10
numFactories = 3
-- Base 1 Medium Factory
-- index to structures
factID = {}
factID[0] = 0
-- index to assembly point. -1 for don't set
factAssXY = {}
factAssXY[0] = 0
-- delay before starting production in 10s
factTimeGo = {}
factTimeGo[0] = 6
-- -1 = no region for trigger (assume WhoGo = 0)
factRegionGo = {}
factRegionGo[0] = -1
-- index to starting template
factTempMin = {}
factTempMin[0] = 6
-- index to maximum template
factTempMax = {}
factTempMax[0] = 8
-- 2 min. Time in 10s for factory to try to produce again
factEvery = {}
factEvery[0] = 24

-- Cyborg Factory 1
-- index to structures
factID[1] = 1
-- index to assembly point. -1 for don't set
factAssXY[1] = -1
-- delay before starting production in 10s
factTimeGo[1] = 6
-- -1 = no region for trigger (assume WhoGo = 0)
factRegionGo[1] = -1
-- index to starting template
factTempMin[1] = 14
-- index to maximum template
factTempMax[1] = 16
-- 1 min. Time in 10s for factory to try to produce again
factEvery[1] = 18

-- Cyborg Factory 2
-- index to structures
factID[2] = 2
-- index to assembly point. -1 for don't set
factAssXY[2] = -1
-- delay before starting production in 10s
factTimeGo[2] = 6
-- -1 = no region for trigger (assume WhoGo = 0)
factRegionGo[2] = -1
-- index to starting template
factTempMin[2] = 16
-- index to maximum template
factTempMax[2] = 17
-- 1 min. Time in 10s for factory to try to produce again
factEvery[2] = 12

-- 'Globals'
-- These should be same in each file, but may need slight alterations
-- player's player number
player = 0
crate = "Crate"
-- 171				//range to artifact about 1.5 tiles
artRange = 200
-- range to objective 5 Tiles
objectiveRange = 640
-- range to waypoint 2ish tiles
wayRange = 300
-- range for target spotting
targetRange = 768
-- maximum number of targets to store for each enemy
targetMax = 4
-- mission failed
lostSnd = "pcv470.ogg"
-- Base Under Attack
attackSnd1 = "pcv337.ogg"
-- artifact sounds
artSnd1 = "pcv351.ogg"
artSnd2 = "pcv352.ogg"
-- for enemy transports
transporter = "Transporter"
LZComp = "pcv445.ogg"
LZClear = "lz-clear.ogg"

-- base WAVs. MAX = 5
-- Enemy Base Detected
baseSnd = {}
baseSnd[0] = "pcv379.ogg"
-- Enemy Base Detected
baseSnd[1] = "pcv379.ogg"
-- Enemy Base Detected
baseSnd[2] = "pcv379.ogg"
-- Enemy base eradicated
baseSnd[3] = "pcv394.ogg"

-- NEW STUFF for trucks
-- switch for using trucks (won't work without it!)
trucksOn = true
-- Defence Type Structures for any enemy to build
-- MAX = 5
numDefences = 4
defences = {}
defences[0] = "Emplacement-MortarPit02"
defences[1] = "CO-Tower-LtATRkt"
defences[2] = "CO-Tower-MdCan"
defences[3] = "Sys-CB-Tower01"

-- ideal number of defences to build
maxDefence = 4
-- structures to defend
-- MAX = 5
numToDefend = 3
toDefend = {}
toDefend[0] = "A0ResourceExtractor"
-- "A0PowerGenerator"
toDefend[1] = "A0CommandCentreCO"
toDefend[2] = "A0PowerGenerator"

-- extra Globals
oilRes = "OilResource"
-- range for truck to check for defendable structures
truckRange = 1024
-- range for defences to be for defendable structures
defRange = 512
-- end of NEW STUFF

-- NEW STUFF FOR THREAT ASSESSMENT
-- this only works on groups with Morale Values
-- if not declared just won't do anything!!
-- value for light vehicles
threatLight = 2
-- value for medium vehicles
threatMedium = 4
-- value for large vehicles
threatHeavy = 8
-- range to check for enemy and player threats
threatRange = 512
-- end of NEW STUFF

-- NEW STUFF fro RETURN TO LZ type victory condition blip and audio
-- must be set true to activate
retLZFlag = true
-- for victory condition of get all player stuff to region
retLZSnd = "pcv427.ogg"
-- Blip for LZ
retLZBlip = "C25_LZ"

--run the code
dofile('genexp_logic.lua')
