-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
enemy1Build = Group()
enemy1Attack = Group()
enemy1Start = Group()
enemy1Fin = Group()
enemy1Force1 = Group()
enemy1Force2 = Group()
enemy2Build = Group()
enemy2Attack = Group()
enemy2Start = Group()
enemy2Fin = Group()
enemy2Force1 = Group()
enemy2Force2 = Group()
oilWellClear = false

attackedStruct = nil
attacker = nil

newDroidFactory = nil

-- temporary variables
newDroid = nil
moveX = 0
moveY = 0
xdiff = 0
ydiff = 0
-- default leadership for enemy2
ld = 0

-- values for build lists start here
-- General Values
-- limit build to this number

-- Enemy Tactics

-- enemy1
enm1Fact1State = 0
enm1Fact1Destroyed = false

-- enemy2
enm2Fact1State = 0
enm2Fact1Destroyed = false


-- trigger enm2Start1Trig(droidInRange(player, enm2.x, enm2.y, 2000),10);
-- triggered after 30 seconds

-- event prototypes

function startup()
	setAssemblyPoint(enm1, enm1Ass1X, enm1Ass1Y)
	setAssemblyPoint(enm2, enm2Ass1X, enm2Ass1Y)
	
	-- set up of positions now done in VLO
	
	-- whether the oil well has been cleared
	oilWellClear = false
	-- enemy2 leadership (change to higher when fixed!)
	ld = 75
	-- set retreat stuff for non grouped units
	-- retreat to base1 by rocket pit
	setRetreatPoint(enemy1, enm1Ret1X, enm1Ret1Y)
	-- set morale to 50%
	setRetreatForce(enemy1, 50)
	-- set leadership chance (small=more likely?)
	setRetreatLeadership(enemy1, 50)
	
	-- make up starting forces
	-- groupAddArea(enemy1Force1, enemy1, 4288, 9024, 5568, 9920);
	-- groupAddArea(enemy1Force2, enemy1, 1600, 10048, 2624, 10816);
	-- groupAddArea(enemy1Force1, enemy1, 448, 960, 1472, 1728);	//lots of blokes round back
	-- 4 Jeeps (West door)
	groupAddArea(enemy1Force1, enemy1, 2496, 5824, 3136, 6336)
	-- set retreat point
	-- retreat to base1 by rocket pit
	setGroupRetreatPoint(enemy1Force1, enm1Ret1X, enm1Ret1Y)
	-- set morale to 10%
	setGroupRetreatForce(enemy1Force1, 80)
	-- set leadership chance (small=more likely?)
	setGroupRetreatLeadership(enemy1Force1, 50)
	
	-- groupAddArea(enemy1Force2, enemy1, 5312, 960, 6336, 1984);	//lots of blokes near base1
	-- 4 Jeeps 2 blokes (east door)
	groupAddArea(enemy1Force2, enemy1, 3904, 4032, 5312, 4928)
	
	-- set retreat point enemy2
	-- retreat to base2
	setGroupRetreatPoint(enemy1Force2, enm2Ret1X, enm2Ret1Y)
	-- set morale to 25%
	setGroupRetreatForce(enemy1Force2, 75)
	-- set leadership chance (small=more likely?)
	setGroupRetreatLeadership(enemy1Force2, ld)
end
delayedEvent(startup, 0)


-- deal with a droid being built by enemy1
function enemy1build(_newDroid, _newDroidFactory)
	if _newDroid.player ~= enemy1 then return end
	newDroid, newDroidFactory = _newDroid, _newDroidFactory -- wz2lua: probably these can be used as function arguments directly
	if newDroidFactory == enm1 then
		if droidInRange(player, enm1Ass1X, enm1Ass1Y, 9 * 128) then
			setGroupRetreatPoint(enemy1Force1, enm1Ret2X, enm1Ret2Y)
			-- setRetreatForce(enemy1, 50);			//set morale to 50%
			-- setRetreatLeadership(enemy1, 50);		//set leadership chance (small=more likely?)
			groupAddDroid(enemy1Force1, newDroid)
			-- get all the droids back to base
			orderGroupLoc(enemy1Force1, DORDER_SCOUT, enm1Ass1X, enm1Ass1Y)
		else
			groupAddDroid(enemy1Build, newDroid)
			if groupCountMembers(enemy1Build) >= 4 then
				groupAddGroup(enemy1Force1, enemy1Build)
				if droidInRange(player, rBlkX, rBlkY, 8 * 128) then
					moveX = rBlkX
					moveY = rBlkY
				else
					if oilWellClear then
						moveX = playerX
						moveY = playerY
					else
						moveX = oilPatchX
						moveY = oilPatchY
					end
				end
				-- setEventTrigger(enemy1AttackBase, enemy1AttackPause);
				
				
				orderGroupLoc(enemy1Force1, DORDER_SCOUT, moveX, moveY)
			end
		end
	end
end
callbackEvent(enemy1build, CALL_NEWDROID)

-- send the droids to the player base if there is nothing at
-- the oil derek
function enemy1AttackBase()
	if not objectInRange(player, oilPatchX, oilPatchY, 8 * 128) then
		orderGroupLoc(enemy1Force1, DORDER_SCOUT, playerX, playerY)
		oilWellClear = true
	else
		oilWellClear = false
	end
end

-- deal with a droid being built by enemy2
function enemy2build(_newDroid, _newDroidFactory)
	if _newDroid.player ~= enemy2 then return end
	newDroid, newDroidFactory = _newDroid, _newDroidFactory -- wz2lua: probably these can be used as function arguments directly
	if newDroidFactory == enm2 then
		if droidInRange(player, enm2Ass1X, enm2Ass1Y, 9 * 128) then
			groupAddDroid(enemy1Force2, newDroid)
			-- Set Morale to stubborn
			-- retreat to base2
			setGroupRetreatPoint(enemy1Force2, enm2Ret2X, enm2Ret2Y)
			-- setRetreatForce(enemy2, 50);			//set morale to 50%
			-- setRetreatLeadership(enemy2, ld);		//set leadership chance (small=more likely?)
			
			-- get all the droids back to base
			orderGroupLoc(enemy1Force2, DORDER_SCOUT, enm2Ass1X, enm2Ass1Y)
		else
			groupAddDroid(enemy2Build, newDroid)
			
			if groupCountMembers(enemy2Build) >= 4 then
				groupAddGroup(enemy1Force2, enemy2Build)
				-- set Morale low
				-- setRetreatPoint(enemy2, enm2Ret2X, enm2Ret2Y);	//retreat to base2
				-- setRetreatForce(enemy2, 75);			//set morale to 25%
				-- setRetreatLeadership(enemy2, ld);		//set leadership chance (small=more likely?)
				
				if droidInRange(player, rBlkX, rBlkY, 8 * 128) then
					moveX = rBlkX
					moveY = rBlkY
				else
					if oilWellClear then
						moveX = playerX
						moveY = playerY
					else
						moveX = oilPatchX
						moveY = oilPatchY
						repeatingEvent(enemy1AttackBase, 300.0)
					end
				end
				orderGroupLoc(enemy1Force2, DORDER_SCOUT, moveX, moveY)
			end
		end
	end
end
callbackEvent(enemy2build, CALL_NEWDROID)


-- events for build lists start here
-- Enemy 1
-- build list
function enm1Fact1Evnt()
	enm1Fact1Destroyed = destroyed(enm1ID)
	if enm1Fact1Destroyed then
		deactivateEvent(enm1Fact1Evnt)
	else
		if structureIdle(enm1) and (groupCountMembers(enemy1Build) + groupCountMembers(enemy1Force1)) < enemy1Tot then
			if enm1Fact1State == 0 then
				buildDroid(bloke, enm1, enemy1, 3)
				enm1Fact1State = 1
			else
				if enm1Fact1State == 1 then
					buildDroid(buggy, enm1, enemy1, 3)
					enm1Fact1State = 2
				else
					if enm1Fact1State == 2 then
						buildDroid(jeep, enm1, enemy1, 2)
						enm1Fact1State = 3
					else
						buildDroid(rktJeep, enm1, enemy1, 2)
						enm1Fact1State = 0
					end
				end
			end
		end
	end
end

function enm1Start1Evnt()
	orderGroupLoc(enemy1Force1, DORDER_SCOUT, playerX, playerY)
	
	-- build first ones so AI triggered
	buildDroid(bloke, enm1, enemy1, 3)
	repeatingEvent(enm1Fact1Evnt, 15.0)
	deactivateEvent(enm1Start1Evnt)
end
conditionalEvent(enm1Start1Evnt, "droidInRange(player, enm1.x, enm1.y, 2000)", 1.0)

-- Enemy 2
-- build list
function enm2Fact1Evnt()
	enm2Fact1Destroyed = destroyed(enm2ID)
	if enm2Fact1Destroyed then
		deactivateEvent(enm2Fact1Evnt)
	else
		if structureIdle(enm2) and (groupCountMembers(enemy2Build) + groupCountMembers(enemy1Force2)) < enemy2Tot then
			if enm2Fact1State == 0 then
				buildDroid(bloke, enm2, enemy2, 3)
				enm2Fact1State = 1
			else
				if enm2Fact1State == 1 then
					buildDroid(buggy, enm2, enemy2, 2)
					enm2Fact1State = 2
				else
					if enm2Fact1State == 2 then
						buildDroid(jeep, enm2, enemy2, 1)
						enm2Fact1State = 3
					else
						buildDroid(rktJeep, enm2, enemy2, 1)
						enm2Fact1State = 0
					end
				end
			end
		end
	end
end

function enm2Start1Evnt()
	buildDroid(trike, enm2, enemy2, 1)
	orderGroupLoc(enemy1Force2, DORDER_SCOUT, playerX, playerY)
	repeatingEvent(enm2Fact1Evnt, 10.0)
	deactivateEvent(enm2Start1Evnt)
end
delayedEvent(enm2Start1Evnt, 30.0)

function enemy1Atk1()
	if enm1Fact1Destroyed then
		orderGroupLoc(enemy1Force2, DORDER_SCOUT, rBlkX, rBlkY)
		
		deactivateEvent(enemy1Atk1)
	end
end
repeatingEvent(enemy1Atk1, 2.0)

function lastAttack1()
	if enm1Fact1Destroyed then
		groupAddArea(enemy1Fin, enemy1, 0, 0, 64 * 128, 64 * 128)
		-- go to LZ if base dead
		orderGroupLoc(enemy1Fin, DORDER_SCOUT, 52 * 128, 55 * 128)
	end
end
repeatingEvent(lastAttack1, 5.0)
-- setEventTrigger(lastAttack1, inactive);

function lastAttack2()
	if not anyStructButWallsLeft(enemy2) then
		groupAddArea(enemy2Fin, enemy1, 0, 0, 64 * 128, 64 * 128)
		orderGroupLoc(enemy2Fin, DORDER_SCOUT, 52 * 128, 55 * 128)
	end
end
repeatingEvent(lastAttack2, 5.0)


---------- stubs ----------

if setGroupRetreatLeadership == nil then setGroupRetreatLeadership = function() print("stub: setGroupRetreatLeadership"); return 0 end end
if setGroupRetreatPoint == nil then setGroupRetreatPoint = function() print("stub: setGroupRetreatPoint"); return 0 end end
if droidInRange == nil then droidInRange = function() print("stub: droidInRange"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if objectInRange == nil then objectInRange = function() print("stub: objectInRange"); return 0 end end
if orderGroupLoc == nil then orderGroupLoc = function() print("stub: orderGroupLoc"); return 0 end end
if groupAddGroup == nil then groupAddGroup = function() print("stub: groupAddGroup"); return 0 end end
if structureIdle == nil then structureIdle = function() print("stub: structureIdle"); return 0 end end
if setRetreatForce == nil then setRetreatForce = function() print("stub: setRetreatForce"); return 0 end end
if setRetreatLeadership == nil then setRetreatLeadership = function() print("stub: setRetreatLeadership"); return 0 end end
if setAssemblyPoint == nil then setAssemblyPoint = function() print("stub: setAssemblyPoint"); return 0 end end
if anyStructButWallsLeft == nil then anyStructButWallsLeft = function() print("stub: anyStructButWallsLeft"); return 0 end end
if buildingDestroyed == nil then buildingDestroyed = function() print("stub: buildingDestroyed"); return 0 end end
if groupAddDroid == nil then groupAddDroid = function() print("stub: groupAddDroid"); return 0 end end
if buildDroid == nil then buildDroid = function() print("stub: buildDroid"); return 0 end end
if groupAddArea == nil then groupAddArea = function() print("stub: groupAddArea"); return 0 end end
if setRetreatPoint == nil then setRetreatPoint = function() print("stub: setRetreatPoint"); return 0 end end
if setGroupRetreatForce == nil then setGroupRetreatForce = function() print("stub: setGroupRetreatForce"); return 0 end end
