-- Generated by wz2lua (implementation file)
version(0) --- version of the script API this script is written for
-- keeps track of current factory
n = 0

-- Factory values
-- must be same as numFacts

newDroidFactory = nil

-- Build Templates
-- must be same as numFacts

-- briefing

-- bases



-- structure limit stuff

-- starting tech for player0
count = 0

-- Win or lose
bases = 0

-- enemy1 variables
enemy1Build = Group()
enemy1Attack = Group()
enemy1Dummy = Group()
grp = Array(5)
newDroid = nil





-- Events
function startup()
	setRadarZoom(1)
	-- set scroll limits
	-- limit scroll
	setScrollParams(0, 0, 64, 64)
	-- centre at base
	centreViewPos(1088, 6592)
	
	-- set start powers
	-- set starting power
	setPowerLevel(power, player)
	-- set starting power for player0
	setPowerLevel(player0Pow, player0)
	while n < numFacts do
		setAssemblyPoint(fact[n], assX[n], assY[n])
		n = n + 1
	end
	n = 0
	-- don't allow design, since no parts!
	removeReticuleButton(DESIGN)
	removeReticuleButton(RESEARCH)
	removeReticuleButton(COMMAND)
	-- start music
	playIngameCDAudio()
	
	-- set structure limits
	setStructureLimits(powerGen, numPow, player0)
	setStructureLimits(oilDerrick, numExt, player0)
	setStructureLimits(research, numRes, player0)
	setStructureLimits(factory, numFac, player0)
	setStructureLimits(command, numCom, player0)
	-- allow to build stuff
	enableStructure(command, player0)
	enableStructure(powerGen, player0)
	enableStructure(oilDerrick, player0)
	enableStructure(research, player0)
	enableStructure(factory, player0)
	
	-- set starting tech for player
	count = 0
	while count < numtecP0 do
		completeResearch(tecP0[count], 0)
		count = count + 1
	end
	
	groupAddArea(grp[0], player, 704, 4544, 1216, 4800)
	groupAddArea(grp[1], player, 576, 4032, 1216, 4416)
	groupAddArea(grp[2], player, 576, 3136, 1216, 4032)
	groupAddArea(grp[3], player, 576, 1728, 1600, 4032)
	groupAddArea(grp[4], player, 704, 704, 2112, 1728)
	count = 0
	while count < 5 do
		setGroupRetreatPoint(grp[count], assX[1], assY[1])
		-- set morale to 10%
		setGroupRetreatForce(grp[count], 90)
		-- set leadership chance (small=more likely?)
		setGroupRetreatLeadership(grp[count], 50)
		
		count = count + 1
	end
	count = 0
end
callbackEvent(startup, CALL_GAMEINIT)

-- build list for all factories (n controls which!)
-- try building every 10 seconds
function factEvnt()
	if not (destroyed(factID[n])) then
		if structureIdle(fact[n]) then
			buildDroid(build[n], fact[n], player, 1)
		end
	end
	n = n + 1
	if n >= numFacts then
		n = 0
	end
end
repeatingEvent(factEvnt, 20.0)

-- Events: Enemies
function enm1DeadEvnt()
	removeMessage(enm1Msg, PROX_MSG, player0)
	playSound(enm1Snd2, player0)
	bases = bases + 1
	deactivateEvent(enm1DeadEvnt)
end

function enm1SeenEvnt()
	addMessage(enm1Msg, PROX_MSG, player0, false)
	playSound(enm1Snd1, player0)
	conditionalEvent(enm1DeadEvnt, "(numStructsButNotWallsInArea(player, 2496, 192, 3904, 1472) == 0)", 2.0)
	deactivateEvent(enm1SeenEvnt)
end
conditionalEvent(enm1SeenEvnt, "droidHasSeen(fact[0], player0)", 1.0)

-- base 2 dead?
function enm2DeadEvnt()
	removeMessage(enm2Msg, PROX_MSG, player0)
	playSound(enm2Snd2, player0)
	bases = bases + 1
	deactivateEvent(enm2DeadEvnt)
end

-- base 2 seen
function enm2SeenEvnt()
	addMessage(enm2Msg, PROX_MSG, player0, false)
	playSound(enm2Snd1, player0)
	conditionalEvent(enm2DeadEvnt, "(numStructsButNotWallsInArea(player, 4800, 1472, 6464, 2752) == 0)", 2.0)
	deactivateEvent(enm2SeenEvnt)
end
conditionalEvent(enm2SeenEvnt, "droidHasSeen(fact[1], player0)", 1.0)

-- base 3 dead?
function enm3DeadEvnt()
	removeMessage(enm3Msg, PROX_MSG, player0)
	playSound(enm3Snd2, player0)
	bases = bases + 1
	deactivateEvent(enm3DeadEvnt)
end

-- base 3 seen
function enm3SeenEvnt()
	addMessage(enm3Msg, PROX_MSG, player0, false)
	playSound(enm3Snd1, player0)
	conditionalEvent(enm3DeadEvnt, "(numStructsButNotWallsInArea(player, 3904, 5440, 5312, 6336) == 0)", 2.0)
	deactivateEvent(enm3SeenEvnt)
end
conditionalEvent(enm3SeenEvnt, "droidHasSeen(fact[2], player0)", 1.0)

-- deal with a droid being built by enemy1
function enemy1build(_newDroid, _newDroidFactory)
	if _newDroid.player ~= player0 then return end
	newDroid, newDroidFactory = _newDroid, _newDroidFactory -- wz2lua: probably these can be used as function arguments directly
	groupAddDroid(enemy1Build, newDroid)
	if groupCountMembers(enemy1Build) >= 4 then
		groupAddGroup(enemy1Dummy, enemy1Attack)
		groupAddGroup(enemy1Attack, enemy1Build)
		-- do attack force decision here
		-- set retreat point
		-- retreat to 2nd base
		setGroupRetreatPoint(enemy1Attack, assX[1], assY[1])
		-- set morale to 10%
		setGroupRetreatForce(enemy1Attack, 90)
		-- set leadership chance (small=more likely?)
		setGroupRetreatLeadership(enemy1Attack, 50)
		-- attack player's base
		orderGroupLoc(enemy1Attack, DORDER_SCOUT, 1088, 6208)
	end
end
callbackEvent(enemy1build, CALL_NEWDROID)


function lostYetEvnt()
	if not anyStructButWallsLeft(player0) then
		deactivateEvent(wonYetEvnt)
		playSound(lostSnd, 0)
		pause(20/10.0)
		gameOver(false)
		deactivateEvent(lostYetEvnt)
	end
end
conditionalEvent(lostYetEvnt, "not anyDroidsLeft(player0)", 0.5)

-- have all enemies lost yet?
function wonYetEvnt()
	if not anyDroidsLeft(player) then
		deactivateEvent(lostYetEvnt)
		pause(20/10.0)
		playSound(wonSnd, 0)
		pause(20/10.0)
		gameOver(true)
		deactivateEvent(wonYetEvnt)
	end
end
conditionalEvent(wonYetEvnt, "bases == 2", 0.5)

function objective()
	addMessage(briefMsg, PROX_MSG, player0, false)
	playSound(briefSnd1, player0)
	pause(30/10.0)
	playSound(briefSnd2, player0)
	deactivateEvent(objective)
end
delayedEvent(objective, 1.0)


function removeObj()
	removeMessage(briefMsg, PROX_MSG, player0)
	deactivateEvent(removeObj)
end
conditionalEvent(removeObj, "droidInRange(player0, 1728, 1216, 5 * 128)", 1.0)


function attackBase()
	if count > 4 then
		deactivateEvent(attackBase)
	else
		orderGroupLoc(grp[count], DORDER_SCOUT, 1088, 6208)
		count = count + 1
		repeatingEvent(attackBase, 30.0)
	end
end
delayedEvent(attackBase, 5.0)


---------- stubs ----------

if anyStructButWallsLeft == nil then anyStructButWallsLeft = function() print("stub: anyStructButWallsLeft"); return 0 end end
if groupAddDroid == nil then groupAddDroid = function() print("stub: groupAddDroid"); return 0 end end
if groupAddGroup == nil then groupAddGroup = function() print("stub: groupAddGroup"); return 0 end end
if orderGroupLoc == nil then orderGroupLoc = function() print("stub: orderGroupLoc"); return 0 end end
if anyDroidsLeft == nil then anyDroidsLeft = function() print("stub: anyDroidsLeft"); return 0 end end
if droidInRange == nil then droidInRange = function() print("stub: droidInRange"); return 0 end end
if setEventTrigger == nil then setEventTrigger = function() print("stub: setEventTrigger"); return 0 end end
if removeMessage == nil then removeMessage = function() print("stub: removeMessage"); return 0 end end
if playIngameCDAudio == nil then playIngameCDAudio = function() print("stub: playIngameCDAudio"); return 0 end end
if setGroupRetreatPoint == nil then setGroupRetreatPoint = function() print("stub: setGroupRetreatPoint"); return 0 end end
if setStructureLimits == nil then setStructureLimits = function() print("stub: setStructureLimits"); return 0 end end
if setPowerLevel == nil then setPowerLevel = function() print("stub: setPowerLevel"); return 0 end end
if groupAddArea == nil then groupAddArea = function() print("stub: groupAddArea"); return 0 end end
if setGroupRetreatForce == nil then setGroupRetreatForce = function() print("stub: setGroupRetreatForce"); return 0 end end
if buildingDestroyed == nil then buildingDestroyed = function() print("stub: buildingDestroyed"); return 0 end end
if removeReticuleButton == nil then removeReticuleButton = function() print("stub: removeReticuleButton"); return 0 end end
if completeResearch == nil then completeResearch = function() print("stub: completeResearch"); return 0 end end
if setScrollParams == nil then setScrollParams = function() print("stub: setScrollParams"); return 0 end end
if pause == nil then pause = function() print("stub: pause"); return 0 end end
if numStructsButNotWallsInArea == nil then numStructsButNotWallsInArea = function() print("stub: numStructsButNotWallsInArea"); return 0 end end
if playSound == nil then playSound = function() print("stub: playSound"); return 0 end end
if buildDroid == nil then buildDroid = function() print("stub: buildDroid"); return 0 end end
if droidHasSeen == nil then droidHasSeen = function() print("stub: droidHasSeen"); return 0 end end
if addMessage == nil then addMessage = function() print("stub: addMessage"); return 0 end end
if setRadarZoom == nil then setRadarZoom = function() print("stub: setRadarZoom"); return 0 end end
if structureIdle == nil then structureIdle = function() print("stub: structureIdle"); return 0 end end
if enableStructure == nil then enableStructure = function() print("stub: enableStructure"); return 0 end end
if setAssemblyPoint == nil then setAssemblyPoint = function() print("stub: setAssemblyPoint"); return 0 end end
if gameOver == nil then gameOver = function() print("stub: gameOver"); return 0 end end
if centreViewPos == nil then centreViewPos = function() print("stub: centreViewPos"); return 0 end end
if setGroupRetreatLeadership == nil then setGroupRetreatLeadership = function() print("stub: setGroupRetreatLeadership"); return 0 end end
